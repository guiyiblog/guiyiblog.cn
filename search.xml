<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>关于搭建数据分析师能力模型的思考</title>
    <url>/p/9aa0b83c/</url>
    <content><![CDATA[<p>自2019年从事数据分析工作以来，已快有5个年头，在这个节点上，有必要重新对职业进行一次深度的思考，来解决当下职业发展的瓶颈期、迷茫期。<br>基于以往对数据分析的学习和在工作中实践理解，让我发现数据分析不仅仅是工具、技能，它更是一种思维方式和解决问题的能力——一种将现实问题转换为数据问题的思维方式，用数据方法解决现实问题的能力。</p>
<p>我们姑且将这种“能力”<strong>定义为：</strong>在特定业务背景下，将业务问题转换为数据问题，并合理利用数据工具帮助解决业务问题的能力。</p>
  <span id="more"></span>

<p>根据数据分析解决业务问题的一般思路，可以概况为5项能力，分别为：</p>
<ol>
<li>业务理解能力</li>
<li>数据获取能力</li>
<li>数据处理能力</li>
<li>数据分析能力</li>
<li>数据表达能力</li>
</ol>
<p>其中，每项能力又可以做如下拆解：</p>
<iframe title="博客目录结构" width="800" height="486" src="https://www.processon.com/embed/6549d3d97dbb5d054746fd62"></iframe>

<h3 id="1、业务理解能力"><a href="#1、业务理解能力" class="headerlink" title="1、业务理解能力"></a>1、业务理解能力</h3><h4 id="1-1、背景梳理和问题归纳"><a href="#1-1、背景梳理和问题归纳" class="headerlink" title="1.1、背景梳理和问题归纳"></a>1.1、背景梳理和问题归纳</h4><p>解决问题的第一步是找到并理解问题，做到具体问题具体分析。因此，针对某特定的业务问题，我们需要先了解问题所处的业务背景，然后归纳总结出需要解决的关键问题。</p>
<p>在这里，我们采用<strong>“商业画布”</strong>中的方法论用来快速梳理业务背景，归纳业务核心问题。</p>
<p>商业画布由 9 个方格组成，每一个方格的含义分别为：</p>
<ul>
<li><strong>VP(Value Propositions)价值主张</strong>——提供的产品或服务</li>
<li><strong>KS(Customer Segments)客户群体</strong> ——产品或服务的目标用户</li>
<li><strong>CH(Channels)渠道</strong>——渠道是指企业向客户提供产品或服务的途径和方式。渠道可以包括线上和线下的销售渠道、推广渠道、售后服务渠道等，以便满足客户需求和提高销售效率。</li>
<li><strong>CR(Customer Relationships)客户关系</strong>——客户关系是指企业与客户之间建立的关系，以便提高客户忠诚度和满意度。客户关系可以包括个性化服务、快速响应、客户反馈等方式，以便企业能够更好地了解客户需求和反馈。</li>
<li><strong>RS(Revenue Streams)收入来源</strong>——收入流是指企业从产品或服务销售中获得的收入来源。收入流可以基于产品或服务的不同属性、销售渠道、客户类型等多种因素进行分类，以便企业能够更好地了解市场需求和收益结构。</li>
<li><strong>KR(Key Resources)核心资源</strong>——关键资源是指企业为提供产品或服务所必须拥有的资源和能力。关键资源可以包括物质资源、人力资源、技术资源等多种形式，以便企业能够更好地保持竞争优势和提高产品或服务的质量和效率。</li>
<li><strong>KA(Key Activity)关键活动</strong>——关键活动是指企业必须执行的核心活动，以提供产品或服务并实现商业目标。关键业务活动可以包括生产、运营、销售、市场营销等多种活动，以便企业能够更好地实现商业战略和目标。</li>
<li><strong>CS(Cost Structure)成本结构</strong>——成本结构是指企业为提供产品或服务所必须承担的成本和费用。成本结构可以包括直接成本、间接成本、固定成本、变动成本等多种类型，以便企业能够更好地了解成本结构和优化成本管理。</li>
<li><strong>KP(Key Partnerships)重要合作</strong>——重要合作是指企业与其他组织或企业建立的合作关系，以实现共同的商业目标。重要合作伙伴关系可以包括供应商、合作伙伴、分销商等多种类型，以便企业能够更好地利用外部资源和优势，提高产品或服务的质量和效率。</li>
</ul>
<p>Canvas 的使用者需要按照一定的顺序：首先要了解目标用户群（客户群体），再确定他们的需求（价值主张），想好如何接触到他们（渠道），如何维护好他们（客户关系），怎么盈利（收入流），凭借什么筹码实现盈利（核心资源），为了持续盈利必须要做的运营活动（关键活动），能向你伸出援手的人（合伙人），以及根据综合成本定价（成本结构）。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231201151623570.png"></p>
<p>其中，寻找客户群体，提供价值服务，可以用以下方式进行匹配（原文：<a href="https://baijiahao.baidu.com/s?id=1759323222082691709&wfr=spider&for=pc">什么是商业画布？</a>)</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231201154607704.png"></p>
<h4 id="1-2、问题拆解"><a href="#1-2、问题拆解" class="headerlink" title="1.2、问题拆解"></a>1.2、问题拆解</h4><p>问题拆解采用的是<strong>“分而治之”</strong>的思想，将复杂的大问题，拆解成简单的小问题，然后再逐个击破。常用的方法是公式法和分类法，其中分类法需要遵循<strong>MECE法则</strong>，即分类需满足<strong>“相互独立，完全穷尽”</strong>。</p>
<p>例如，问题是：”如何提高某化妆品的销售额？”</p>
<p>易知，<code>销售额=销售量×单价</code>，因此，想要提高销售额，则可从提高销售量或者提高单价入手。</p>
<p>若改化妆品是由多个销售渠道进行销售，则可以用分类法进行拆分：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231201160600102.png"></p>
<p>通过拆解分析每个渠道的销售额状况，根据实际情况对每个渠道进行目标分配，从而提高总的销售额。</p>
<h4 id="1-3、问题转换"><a href="#1-3、问题转换" class="headerlink" title="1.3、问题转换"></a>1.3、问题转换</h4><p>问题转换采用的是<strong>“映射转换”</strong>的思想，想要用数据方法解决现实问题，最关键的一步就是将现实问题映射转换为数据问题。在这里，我们可以参考<a href="https://www.leixue.com/ask/what-is-the-basic-principle-of-relational-database">关系型数据库的基本原理</a>和<a href="https://www.zhihu.com/question/31021366/answer/2782939791">面向对象编程的思维方式</a>。</p>
<p>关系型数据库的基本原理是基于关系模型来管理数据，它使用了数学中的关系集合理论来描述数据库中的表格和字段。</p>
<p>关系模型是一种思维方式，用于把实际世界中的实体（如人、事件、地点等）和关系（如联系、拥有等）表示成一种可供计算机处理的数据结构，从而将实际世界的实体和关系转换成数据库中的表格和字段。</p>
<p>因此，学习掌握构建E-R关系图是熟练进行“映射转换”必不可少的技能。</p>
<h3 id="2、数据获取能力"><a href="#2、数据获取能力" class="headerlink" title="2、数据获取能力"></a>2、数据获取能力</h3><h4 id="2-1-内部数据获取"><a href="#2-1-内部数据获取" class="headerlink" title="2.1 内部数据获取"></a>2.1 内部数据获取</h4><p>内部数据可以根据“商业画布”中各个环节产生的数据进行划分。其中，重点需要关注的是：用户数据和财务数据。其中，用户数据一般通过前端埋点获取，而财务数据通过传统的ERP系统或后端埋点的方式获取。</p>
<p>对于内部数据的获取，我们需要做到了解数据从无到有产生的中间过程，这有助于我们清楚的理解数据代表的业务含义和数据质量的好坏。通常，如果我们只需要进行销售数据分析、经营数据分析，那么熟练掌握SQL提取现有数据就够了，但是，当我们需要进行用户数据分析、产品数据分析时，则需要进一步了解数据埋点的原理和设计数据埋点方案，针对特定业务问题，分析师不仅需要知道通过什么样的数据去分析解决，还得清楚如何获取到这些数据，即用户在何时何地产生何种行为的数据（简称<strong>事件数据</strong>）。</p>
<p>数据埋点分为前端埋点和后端埋点。区分他们的简单方法就是：前端埋点是在客户端中记录埋点数据，后端埋点则是上报服务器记录埋点数据。</p>
<p><code>经验贴：只有在实际工作中做过埋点工作，才能对底层的数据口径理解透彻。比如，虽然DAU我们都知道是叫做日活跃用户数，但每个公司，甚至每个业务对它的实际定义都不一样。什么叫做“日”，一个用户23:59分进入APP，次日00:05分退出算哪天的DAU？什么叫做“活跃”，是用户看到了“开屏广告”就算活跃，还是用户看到“首页”算活跃，还是必须上报后端调起启动接口才算？只有你对一个指标、一个数据了解到这种程度，你才算真正理解了这个数据。因此，等下次你看到某一个数据时，请去真正的去关心和了解它的出生和过往经历吧，要知道他经历种种磨难能走到你面前也实属不易。</code></p>
<h4 id="2-2-外部数据获取"><a href="#2-2-外部数据获取" class="headerlink" title="2.2 外部数据获取"></a>2.2 外部数据获取</h4><p>外部数据通常通过调研和爬虫的方式进行获取。</p>
<p>常见的外部数据获取网站有：</p>
<ul>
<li><a href="https://www.data.ai/cn/">https://www.data.ai/cn/</a></li>
<li><a href="https://www.qimai.cn/">https://www.qimai.cn/</a></li>
<li><a href="https://sensortower-china.com/zh-cn">https://sensortower-china.com/zh-cn</a></li>
<li><a href="http://mi.talkingdata.com/">http://mi.talkingdata.com/</a></li>
<li>……</li>
</ul>
<p>常见的爬虫工具有：Python、八爪鱼等</p>
<h3 id="3、数据处理能力"><a href="#3、数据处理能力" class="headerlink" title="3、数据处理能力"></a>3、数据处理能力</h3><h4 id="3-1-结构化数据处理"><a href="#3-1-结构化数据处理" class="headerlink" title="3.1 结构化数据处理"></a>3.1 结构化数据处理</h4><p>结构化数据可以简单理解为是关系型数据库管理的数据，按数据量级大小，可以选择合适工具进行数据处理：</p>
<ul>
<li>Excel：单表≤10W行记录</li>
<li>Power BI：单表≤100W行记录</li>
<li>MySQL：单表≤1000W行记录</li>
<li>Python：单表≤1亿行记录</li>
<li>Hive：单表＞1亿行记录</li>
</ul>
<p>熟练使用以上各种工具进行常规的数据处理工作，是一名数据分析师的基础技能。</p>
<h4 id="3-2-非结构化数据处理"><a href="#3-2-非结构化数据处理" class="headerlink" title="3.2 非结构化数据处理"></a>3.2 非结构化数据处理</h4><p>非结构化数据是指如文本、图片、视频等等的数据，针对这块的数据处理需求，在业务分析师当中不太常见。</p>
<h3 id="4、数据分析能力"><a href="#4、数据分析能力" class="headerlink" title="4、数据分析能力"></a>4、数据分析能力</h3><h4 id="4-1-描述统计分析"><a href="#4-1-描述统计分析" class="headerlink" title="4.1 描述统计分析"></a>4.1 描述统计分析</h4><p>描述统计分析是指使用图表或者统计量描述数据的现状，因此它又可以分为：图表描述分析和统计量描述分析。</p>
<p>图表描述相对简单，它的特点是能快速直观的观察数据变化的趋势、对比数据的好坏。统计量描述分析则要求我们熟悉各种统计量对应的业务含义（复杂问题中，还需要我们新定义业务统计量指标，这对我们的数据转换能力要求更高），从而选取正确的统计量对业务现状进行描述分析。</p>
<p>详细的描述统计方法可参考我的另一篇文章：<a href="https://guiyiblog.com/p/20d88d5d/">描述统计学</a></p>
<h4 id="4-2-推断统计分析"><a href="#4-2-推断统计分析" class="headerlink" title="4.2 推断统计分析"></a>4.2 推断统计分析</h4><p>推断统计分析主要是基于大数定律和中心极限定理，采用假设检验的思想，对抽取的样本数据进行推断分析。根据分析目的的不同，又可将其分为相关性分析和因果分析。</p>
<p>相关性分析是研究变量之间是否相关，而不考虑他们的因果。比如：“一到冬天，我就长膘。”只能说明季节和我的体重有相关关系，但不能说有因果关系。因为“长膘”的真正原因是冬天吃得多（摄入能量多），动的少（消耗能量少）。季节只是和“长膘”相关，但不是导致“长膘”的原因。在业务场景中，最为广泛的应用就是<strong>AB测试</strong>。</p>
<p>因果分析则需要我们先确定好因变量，再选取适当的自变量，研究其对因变量的影响，从而推导出他们因果关系的数学公式。在业务场景中便是我们常见的<strong>归因和预测分析</strong>。</p>
<p>详细的推断统计方法可参考我的另一篇文章：<a href="https://guiyiblog.com/p/b56a4992/">推断统计学</a></p>
<h3 id="5、数据表达能力"><a href="#5、数据表达能力" class="headerlink" title="5、数据表达能力"></a>5、数据表达能力</h3><h4 id="5-1-图表语言表达"><a href="#5-1-图表语言表达" class="headerlink" title="5.1 图表语言表达"></a>5.1 图表语言表达</h4><p>在实际业务中，图表按层级可分为：可视化对象（Visual）、报表（Report）、仪表板（Dashboard）。</p>
<p>其中，主要区分报表和仪表板。报表主要以描述数据为主，不以引导读者得到数据结论为目的；而仪表板则是采用数据可视化的方式向读者讲述“故事”，需要引导读者从数据中得出结论。</p>
<p>如下所示，仪表板在制作前的布局设计：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231201181506802.png"></p>
<p>仪表板设计原则可遵循以下几点：</p>
<ol>
<li><strong>越简单越好。</strong>只保留与主题强相关的数据信息，拒绝使用各种花里胡哨的格式</li>
<li><strong>使用布局和位置来吸引焦点。</strong>根据研究表明，读者的阅读位置的顺序优先级可以用下图来概况：<img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231201181224467.png"></li>
<li>统一格式化数字。合理使用逗号分割数字、保留小数位数、添加数字单位，帮助读者快速阅读理解数据含义。</li>
<li>有效的使用标题和标签。始终在仪表板或报表上包含时间，如统计日期、更新日期等。为每个可视化对象使用描述性标题。理想的标签颜色有：软灰色、棕色、蓝色和绿色。</li>
</ol>
<p>常用的可视化工具有：Excel、Power BI、Tableau、PPT等等，根据使用的业务场景，可合理选择工具进行可视化图表的制作。</p>
<h4 id="5-2-文字语言表达"><a href="#5-2-文字语言表达" class="headerlink" title="5.2 文字语言表达"></a>5.2 文字语言表达</h4><p>文字语言是数据分析师呈现分析结论、工作成功的重要手段，因此，在平时工作生活中，也需要提醒自己练习。关于这方面的训练方法，可以参考《金字塔原理》，里面详细阐述了使表达根据逻辑性的原理和训练方法，毕竟有一句话告诉我们：你表达没有逻辑，不是因为你不会说话，而是因为你不会思考。当你的思维有了逻辑，表达自然也就有了逻辑。</p>
]]></content>
      <categories>
        <category>说明文档</category>
      </categories>
      <tags>
        <tag>能力模型</tag>
      </tags>
  </entry>
  <entry>
    <title>Python中的表结构对象</title>
    <url>/p/8759704b/</url>
    <content><![CDATA[<p>在Python中Dataframe对象就是我们熟知的表结构对象，它具备构成表的基本元素：字段和记录。</p>
<p>下面，我们先来简单了解下Dataframe的创建和基本构成。</p>
  <span id="more"></span>

<h3 id="1、Dataframe表的创建"><a href="#1、Dataframe表的创建" class="headerlink" title="1、Dataframe表的创建"></a>1、Dataframe表的创建</h3><p>Dataframe表通过<code>pd.Dataframe()</code>方法创建。</p>
<p><strong><code>pd.DataFrame(data, index, columns)</code></strong>  </p>
<ul>
<li>data作为值，可以是二维数组、多维列表、多维元组、字典（键值必须是可迭代对象） </li>
<li>index作为行索引  </li>
<li>columns作为列索引</li>
<li>dtype用于设置数据类型</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全部行输出</span></span><br><span class="line"><span class="keyword">from</span> IPython.core.interactiveshell <span class="keyword">import</span> InteractiveShell</span><br><span class="line"></span><br><span class="line">InteractiveShell.ast_node_interactivity = <span class="string">&quot;all&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入包</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></table></figure>


<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用二维数组创建Dataframe表</span></span><br><span class="line">arr = np.zeros((<span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line">tb_arr = pd.DataFrame(data=arr, columns=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>])</span><br><span class="line">tb_arr</span><br></pre></td></tr></table></figure>




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    
<pre><code>.dataframe thead th &#123;
    text-align: right;
&#125;
</code></pre>
<p></style><p></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
  </tbody>
</table>

</div>




<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用二维列表创建Dataframe表</span></span><br><span class="line">li = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br><span class="line">tb_li = pd.DataFrame(data=li, columns=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>])</span><br><span class="line">tb_li</span><br></pre></td></tr></table></figure>




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    
<pre><code>.dataframe thead th &#123;
    text-align: right;
&#125;
</code></pre>
<p></style><p></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <th>2</th>
      <td>7</td>
      <td>8</td>
      <td>9</td>
    </tr>
  </tbody>
</table>

</div>




<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用二维元组创建Dataframe表</span></span><br><span class="line">tup = ((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>), (<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>))</span><br><span class="line">tb_tup = pd.DataFrame(data=tup, columns=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>], dtype=<span class="built_in">int</span>)</span><br><span class="line">tb_tup</span><br><span class="line">tb_tup.dtypes</span><br></pre></td></tr></table></figure>




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    
<pre><code>.dataframe thead th &#123;
    text-align: right;
&#125;
</code></pre>
<p></style><p></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <th>2</th>
      <td>7</td>
      <td>8</td>
      <td>9</td>
    </tr>
  </tbody>
</table>
</div>


<pre><code>a    int32
b    int32
c    int32
dtype: object
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用字典创建Dataframe表</span></span><br><span class="line">dic = &#123;<span class="string">&#x27;a&#x27;</span>: (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), <span class="string">&#x27;b&#x27;</span>: (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>), <span class="string">&#x27;c&#x27;</span>: (<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>)&#125;</span><br><span class="line">tb_dic = pd.DataFrame(data=dic, index=[<span class="string">&#x27;index1&#x27;</span>, <span class="string">&#x27;index2&#x27;</span>, <span class="string">&#x27;index3&#x27;</span>], dtype=<span class="built_in">str</span>)</span><br><span class="line">tb_dic</span><br><span class="line">tb_dic.dtypes</span><br></pre></td></tr></table></figure>




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    
<pre><code>.dataframe thead th &#123;
    text-align: right;
&#125;
</code></pre>
<p></style><p></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>index1</th>
      <td>1</td>
      <td>4</td>
      <td>7</td>
    </tr>
    <tr>
      <th>index2</th>
      <td>2</td>
      <td>5</td>
      <td>8</td>
    </tr>
    <tr>
      <th>index3</th>
      <td>3</td>
      <td>6</td>
      <td>9</td>
    </tr>
  </tbody>
</table>
</div>


<pre><code>a    object
b    object
c    object
dtype: object
</code></pre>
<p><strong>为什么三维数组不能生成Dataframe，但三维列表却可以？</strong></p>
<blockquote>
<p>三维列表（即列表的列表的列表）在Python中可以被视为一种嵌套的数据结构，其中每个内部列表都可以被看作是一个独立的序列（即一维数组）。<br>当你将三维列表转换为pandas DataFrame时，实际上你是在将这些内部列表（即二维列表）作为DataFrame的行或列来处理。</p>
<p><strong>pandas的DataFrame构造函数可以接受一个嵌套的列表（或类似的可迭代对象），并尝试将这些内部列表转换为DataFrame的列。</strong></p>
<p>值得注意的是，三维列表和三维数组在结构上有所不同。三维数组（如NumPy数组）是连续的内存块，其中的元素按照固定的步长排列，<br>而三维列表则是由嵌套的Python列表组成，每个内部列表都是独立的对象，可能存储在内存的不同位置。由于这种结构上的差异，<br>它们与pandas DataFrame的交互方式也会有所不同。NumPy数组提供了更高效的数值计算功能，而列表则提供了更灵活的数据结构。</p>
</blockquote>
<h3 id="2、Dataframe表的字段：Series对象"><a href="#2、Dataframe表的字段：Series对象" class="headerlink" title="2、Dataframe表的字段：Series对象"></a>2、Dataframe表的字段：Series对象</h3><p>Dataframe表的字段是Python中的Series对象</p>
<p>Series是一种类似于一维数组的对象，是由一组数据(各种NumPy数据类型)以及一组与之相关的数据标签(即索引)组成。仅由一组数据也可产生简单的Series对象。<br>Series是Pandas包提供的一种Key-value型数据结构,其中Key为用户定义的显示index,每个显式index对应一个value值.</p>
<p>它与Python列表的区别在于,Series的每个元素都带有两种index</p>
<ul>
<li>显示index : 由用户指定</li>
<li>隐式index : 由系统自动分配(Series对象中每个元素的下标,类似Python”列表”的下标)</li>
</ul>
<p>Series的访问既可以通过显示index,也可以通过隐式index,</p>
<p>在数据分析和数据科学项目中,一般用显式索引(index),而不是隐式下标,原因在于:当数据量很大时,很难准确定义其下标</p>
<h4 id="2-1、Series对象的创建"><a href="#2-1、Series对象的创建" class="headerlink" title="2.1、Series对象的创建"></a>2.1、Series对象的创建</h4><p><strong>Series对象通过<code>pd.Series()</code>创建</strong></p>
<p> <code>pd.Series(data, index, dtype, name) </code></p>
<ul>
<li>data可以是ndarray对象，列表，元组，字典等，其中字典的键直接作为显示索引</li>
<li>index用于设置显示索引</li>
<li>dtype用于设置数据类型</li>
<li>name用于设置Series的名称</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">type</span>(tb_dic[<span class="string">&#x27;a&#x27;</span>])</span><br></pre></td></tr></table></figure>


<pre><code>pandas.core.series.Series
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用列表创建Series对象</span></span><br><span class="line">ser = pd.Series(data=[<span class="number">80</span>, <span class="number">90</span>, <span class="number">70</span>], index=[<span class="string">&#x27;语文&#x27;</span>, <span class="string">&#x27;数学&#x27;</span>, <span class="string">&#x27;英语&#x27;</span>], name=<span class="string">&#x27;分数&#x27;</span>, dtype=<span class="string">&#x27;int64&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(ser)</span><br></pre></td></tr></table></figure>

<pre><code>语文    80
数学    90
英语    70
Name: 分数, dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用字典创建Series对象</span></span><br><span class="line">dic = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">123</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">456</span>, <span class="string">&#x27;c&#x27;</span>: <span class="string">&#x27;789&#x27;</span>&#125;</span><br><span class="line">ser_dic = pd.Series(dic, name=<span class="string">&quot;用字典创建&quot;</span>)  <span class="comment"># 把字典的键作为显示索引</span></span><br><span class="line"><span class="built_in">print</span>(ser_dic)</span><br></pre></td></tr></table></figure>

<pre><code>a    123
b    456
c    789
Name: 用字典创建, dtype: object
</code></pre>
<h3 id="2-2、Series对象的常用属性"><a href="#2-2、Series对象的常用属性" class="headerlink" title="2.2、Series对象的常用属性"></a>2.2、Series对象的常用属性</h3><ul>
<li>ser.name：字段名</li>
<li>ser.dtype：字段类型</li>
<li>ser.size：字段大小</li>
<li>ser.index：字段索引</li>
<li>ser.values：字段值</li>
<li>ser.is_unique：字段值是否唯一</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ser = pd.Series(data=[<span class="number">80</span>, <span class="number">90</span>, <span class="number">70</span>], index=[<span class="string">&#x27;语文&#x27;</span>, <span class="string">&#x27;数学&#x27;</span>, <span class="string">&#x27;英语&#x27;</span>], name=<span class="string">&#x27;分数&#x27;</span>, dtype=<span class="string">&#x27;int64&#x27;</span>)</span><br><span class="line">ser.name</span><br><span class="line">ser.dtype</span><br><span class="line">ser.size</span><br><span class="line">ser.index</span><br><span class="line">ser.values</span><br><span class="line">ser.is_unique</span><br></pre></td></tr></table></figure>


<pre><code>&#39;分数&#39;


dtype(&#39;int64&#39;)


3


Index([&#39;语文&#39;, &#39;数学&#39;, &#39;英语&#39;], dtype=&#39;object&#39;)


array([80, 90, 70], dtype=int64)


True
</code></pre>
<h3 id="2-3、Series对象的常用方法"><a href="#2-3、Series对象的常用方法" class="headerlink" title="2.3、Series对象的常用方法"></a>2.3、Series对象的常用方法</h3><ul>
<li>数据的增删改查</li>
<li>数据清洗：排序、筛选、去重、缺失值处理</li>
<li>数据统计：计数和非重复计数、平均值、分位数、最大和最小值、标准差</li>
<li>一行转多行：列表展开</li>
<li>自定义方法</li>
</ul>
<h4 id="2-31、字段的增删改查"><a href="#2-31、字段的增删改查" class="headerlink" title="2.31、字段的增删改查"></a>2.31、字段的增删改查</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 增加数据</span></span><br><span class="line">ser = pd.Series(data=[<span class="number">80</span>, <span class="number">90</span>, <span class="number">70</span>], index=[<span class="string">&#x27;语文&#x27;</span>, <span class="string">&#x27;数学&#x27;</span>, <span class="string">&#x27;英语&#x27;</span>], name=<span class="string">&#x27;分数&#x27;</span>, dtype=<span class="string">&#x27;int64&#x27;</span>)</span><br><span class="line">ser[<span class="string">&#x27;地理&#x27;</span>] = <span class="number">55</span>  <span class="comment"># 直接赋值法</span></span><br><span class="line"><span class="built_in">print</span>(ser)</span><br><span class="line"></span><br><span class="line">ser2 = pd.Series([<span class="number">99</span>], index=[<span class="string">&#x27;生物&#x27;</span>])</span><br><span class="line">ser = ser._append(ser2)</span><br><span class="line"><span class="built_in">print</span>(ser)</span><br></pre></td></tr></table></figure>

<pre><code>语文    80
数学    90
英语    70
地理    55
Name: 分数, dtype: int64
语文    80
数学    90
英语    70
地理    55
生物    99
dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除数据</span></span><br><span class="line">ser = ser.drop(<span class="string">&#x27;生物&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(ser)</span><br></pre></td></tr></table></figure>

<pre><code>语文    80
数学    90
英语    70
地理    55
dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更改数据</span></span><br><span class="line">ser[<span class="string">&#x27;语文&#x27;</span>] = <span class="number">70</span></span><br><span class="line"><span class="built_in">print</span>(ser)</span><br><span class="line"><span class="comment"># 更改字段类型</span></span><br><span class="line">ser = ser.astype(<span class="string">&#x27;int32&#x27;</span>)</span><br><span class="line">ser.dtypes</span><br></pre></td></tr></table></figure>

<pre><code>语文    70
数学    90
英语    70
地理    55
dtype: int64

dtype(&#39;int32&#39;)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询数据：切片</span></span><br><span class="line"><span class="built_in">print</span>(ser[<span class="number">0</span>:<span class="number">2</span>])  <span class="comment"># 隐式索引</span></span><br><span class="line"><span class="built_in">print</span>(ser[<span class="number">2</span>])  <span class="comment"># 隐式索引</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(ser[<span class="string">&#x27;语文&#x27;</span>:<span class="string">&#x27;英语&#x27;</span>])  <span class="comment"># 显示索引</span></span><br><span class="line"><span class="built_in">print</span>(ser[<span class="string">&#x27;语文&#x27;</span>])  <span class="comment"># 显示索引</span></span><br></pre></td></tr></table></figure>

<pre><code>语文    70
数学    90
dtype: int32
70
语文    70
数学    90
英语    70
dtype: int32
70
</code></pre>
<h4 id="2-32、字段的数据清洗"><a href="#2-32、字段的数据清洗" class="headerlink" title="2.32、字段的数据清洗"></a>2.32、字段的数据清洗</h4><p><strong>1）排序</strong></p>
<ul>
<li>ser.sort_index(ascending, inplace)</li>
<li>ser.sort_values(ascending, inplace)</li>
</ul>
<p>ascending默认为True, 即升序排列<br>inplace默认为False，即不替换原始数据</p>
<p><strong>2）筛选</strong></p>
<ul>
<li>ser.loc[条件表达式]</li>
</ul>
<p><strong>3）去重</strong></p>
<ul>
<li>ser.unique()</li>
<li>ser.nunique() 返回不重复元素的个数</li>
</ul>
<p><strong>4）缺失值处理</strong></p>
<ul>
<li>ser.isna()</li>
<li>ser.isnull()</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 排序</span></span><br><span class="line"><span class="built_in">print</span>(ser.sort_index())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(ser.sort_values(ascending=<span class="literal">False</span>))  <span class="comment"># 按分数降序</span></span><br></pre></td></tr></table></figure>

<pre><code>地理    55
数学    90
英语    70
语文    70
dtype: int32
数学    90
语文    70
英语    70
地理    55
dtype: int32
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 去重</span></span><br><span class="line"><span class="built_in">print</span>(ser)</span><br><span class="line"><span class="built_in">print</span>(ser.unique())  <span class="comment">## 字段去重</span></span><br><span class="line"><span class="built_in">print</span>(ser.nunique())  <span class="comment">## 非重复计数</span></span><br></pre></td></tr></table></figure>

<pre><code>语文    70
数学    90
英语    70
地理    55
dtype: int32
[70 90 55]
3
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 筛选</span></span><br><span class="line"><span class="built_in">print</span>((ser.loc[(ser &gt; <span class="number">60</span>) &amp; (ser &lt; <span class="number">90</span>)]))  <span class="comment"># 大于60分且小于90分的数据</span></span><br></pre></td></tr></table></figure>

<pre><code>语文    70
英语    70
dtype: int32
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 缺失值处理</span></span><br><span class="line">ser[<span class="string">&#x27;历史&#x27;</span>] = np.nan</span><br><span class="line"><span class="built_in">print</span>(ser)</span><br><span class="line"><span class="built_in">print</span>(ser.isna())  <span class="comment"># 判断是否有缺失值</span></span><br></pre></td></tr></table></figure>

<pre><code>语文    70.0
数学    90.0
英语    70.0
地理    55.0
历史     NaN
dtype: float64
语文    False
数学    False
英语    False
地理    False
历史     True
dtype: bool
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(ser.fillna(<span class="number">0</span>))  <span class="comment"># 填充缺失值</span></span><br></pre></td></tr></table></figure>

<pre><code>语文    70.0
数学    90.0
英语    70.0
地理    55.0
历史     0.0
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(ser.dropna())  <span class="comment"># 删除缺失值</span></span><br></pre></td></tr></table></figure>

<pre><code>语文    70.0
数学    90.0
英语    70.0
地理    55.0
dtype: float64
</code></pre>
<h4 id="2-33、字段的数据统计"><a href="#2-33、字段的数据统计" class="headerlink" title="2.33、字段的数据统计"></a>2.33、字段的数据统计</h4><p><strong>1）计数和非重复计数</strong></p>
<ul>
<li>ser.count()：计数</li>
<li>ser.nunique()：非重复计数</li>
<li>ser.value_counts()：分类计数</li>
</ul>
<p><strong>2）平均值</strong></p>
<ul>
<li>ser.mean()</li>
</ul>
<p><strong>3）分位数</strong></p>
<ul>
<li>ser.median()</li>
<li>ser.quantile()</li>
</ul>
<p><strong>4）最大和最小值</strong></p>
<ul>
<li>ser.max()</li>
</ul>
<p><strong>5）标准差</strong></p>
<ul>
<li>ser.std()</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义分类型变量</span></span><br><span class="line">ser = pd.Series([<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>])</span><br><span class="line">ser</span><br><span class="line"><span class="comment"># 计数</span></span><br><span class="line">ser.count()</span><br><span class="line"><span class="comment"># 非重复计数</span></span><br><span class="line">ser.nunique()</span><br><span class="line"><span class="comment"># 分类计数</span></span><br><span class="line">ser.value_counts()</span><br></pre></td></tr></table></figure>




<pre><code>0    A
1    A
2    B
3    C
dtype: object


4


3


A    2
B    1
C    1
Name: count, dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义数值型变量</span></span><br><span class="line">ser = pd.Series(<span class="built_in">range</span>(<span class="number">5</span>))</span><br><span class="line">ser</span><br><span class="line"><span class="comment"># 平均数</span></span><br><span class="line">ser.mean()</span><br><span class="line"><span class="comment"># 中位数</span></span><br><span class="line">ser.median()</span><br><span class="line"><span class="comment"># 分位数</span></span><br><span class="line">ser.quantile(<span class="number">0.5</span>)</span><br><span class="line"><span class="comment"># 最大值</span></span><br><span class="line">ser.<span class="built_in">max</span>()</span><br><span class="line"><span class="comment"># 最小值</span></span><br><span class="line">ser.<span class="built_in">min</span>()</span><br><span class="line"><span class="comment"># 标准差</span></span><br><span class="line">ser.std()</span><br></pre></td></tr></table></figure>


<pre><code>0    0
1    1
2    2
3    3
4    4
dtype: int64


2.0


2.0


2.0


4


0


1.5811388300841898
</code></pre>
<h4 id="2-34、一行转多行"><a href="#2-34、一行转多行" class="headerlink" title="2.34、一行转多行"></a>2.34、一行转多行</h4><ul>
<li>ser.explore()：可将字段中的列表元素展开为多行</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ser = pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line">ser</span><br><span class="line"><span class="comment"># 列表元素展开</span></span><br><span class="line">ser.explode()</span><br></pre></td></tr></table></figure>


<pre><code>0            1
1            2
2            3
3    [4, 5, 6]
dtype: object


0    1
1    2
2    3
3    4
3    5
3    6
dtype: object
</code></pre>
<h4 id="2-35、自定义方法"><a href="#2-35、自定义方法" class="headerlink" title="2.35、自定义方法"></a>2.35、自定义方法</h4><ul>
<li>ser.map(lambda x: 函数表达式)</li>
<li>ser.apply(lambda x: 函数表达式)</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ser = pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">ser.<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + <span class="number">1</span>)</span><br><span class="line">ser.apply(<span class="keyword">lambda</span> x: x + <span class="number">1</span>)</span><br></pre></td></tr></table></figure>


<pre><code>0    2
1    3
2    4
dtype: int64


0    2
1    3
2    4
dtype: int64
</code></pre>
<p><strong>ser.map()和ser.apply()的区别</strong></p>
<p><strong><code>ser.map()</code></strong><br>map() 方法用于将一个函数应用于Series中的每个元素。它主要用于将一组值映射到另一组值，通常用于分类变量的转换或简单的元素级操作。map() 方法通常接受一个字典或一个函数作为参数。</p>
<p><strong><code>ser.apply()</code></strong><br>apply() 方法也用于对Series中的每个元素应用一个函数，但它更加通用和灵活。apply() 方法可以接受任何可调用的对象（如函数、方法、Lambda表达式等），并且可以使用axis参数来指定操作是应用于Series的每个元素（axis&#x3D;0，默认值）还是应用于整个Series（axis&#x3D;1，这种情况对于Series并不常见，因为Series本身是一维的）。</p>
<p><strong>区别总结</strong></p>
<ul>
<li><p>灵活性：apply() 方法更加灵活，可以接受任何可调用的对象，而 map() 通常只接受函数或字典。</p>
</li>
<li><p>性能：对于简单的映射操作，map() 通常比 apply() 更快，因为它针对这类操作进行了优化。然而，对于复杂的操作或需要更多控制的情况，apply() 提供了更大的灵活性。</p>
</li>
<li><p>用途：map() 更常用于简单的值映射，而 apply() 则更常用于更复杂的转换和计算。</p>
</li>
</ul>
<h3 id="3、Dataframe表的常用属性和方法"><a href="#3、Dataframe表的常用属性和方法" class="headerlink" title="3、Dataframe表的常用属性和方法"></a>3、Dataframe表的常用属性和方法</h3><p>Dataframe表的字段是Python中的Series对象</p>
<p>Series是一种类似于一维数组的对象，是由一组数据(各种NumPy数据类型)以及一组与之相关的数据标签(即索引)组成。仅由一组数据也可产生简单的Series对象。<br>Series是Pandas包提供的一种Key-value型数据结构,其中Key为用户定义的显示index,每个显式index对应一个value值.</p>
<p>它与Python列表的区别在于,Series的每个元素都带有两种index</p>
<ul>
<li>显示index : 由用户指定</li>
<li>隐式index : 由系统自动分配(Series对象中每个元素的下标,类似Python”列表”的下标)</li>
</ul>
<p>Series的访问既可以通过显示index,也可以通过隐式index,</p>
<p>在数据分析和数据科学项目中,一般用显式索引(index),而不是隐式下标,原因在于:当数据量很大时,很难准确定义其下标</p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>业务指标解析</title>
    <url>/p/7ef0c61b/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>业务理解能力</category>
        <category>内容资讯行业</category>
      </categories>
  </entry>
  <entry>
    <title>内容平台通用分析方法</title>
    <url>/p/7ef0c61b/</url>
    <content><![CDATA[<p>微博（旧称：新浪微博）于2009年8月上线，是一家社交媒体平台；2014年3月27日，新浪微博正式更名为微博；4月17日晚，新浪公司旗下微博业务正式登陆纳斯达克，股票代码WB。</p>
  <span id="more"></span>



<p>转化链路指标：分发-&gt;曝光-&gt;播放&#x2F;完播（完成触达），转评赞关注互动（触达深度）-&gt;点击-&gt;商品页面-&gt;下单-&gt;成单…</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E5%86%85%E5%AE%B9%E5%B9%B3%E5%8F%B0%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B.png" alt="内容平台业务流程"></p>
<p>微博AI交互运营</p>
<p>1、生产侧</p>
<ul>
<li>生产方式：AIGC+人工审核</li>
<li>内容类型：文字</li>
<li>内容领域：非敏感内容领域</li>
</ul>
<p>2、平台侧</p>
<ul>
<li>仿真普户：平台互动策略规则-&gt;push下发规则</li>
<li>仿真博主：平台曝光规则-&gt;内容曝光、推荐、关注、投放规则</li>
</ul>
<p>3、消费侧</p>
<ul>
<li>用户体验（触达内容的过程）–&gt; 过程链路指标体系 –&gt; 优化SOP（链路转化率：push下发率–&gt;平台push下发规则优化；push点击率–&gt;频控策略（天级频控、小时级频控））</li>
<li>用户消费（消费内容的结果）–&gt; 结果评估指标体系（正向、负向）–&gt; 优化内容（内容质量、内容匹配度）</li>
</ul>
<p>事前</p>
<p>目标用户、内容圈定：用户分析案例</p>
<p>项目目标制定：预测分析案例</p>
<p>公式法对目标进行拆解分析</p>
<p>事中</p>
<p>策略制定、优化：AB测试案例</p>
<p>数据监控预警</p>
<p>事后</p>
<p>数据复盘、评估</p>
<p>商业模式：公司层面</p>
<p>广告收入 &#x3D; 付费次数×次均付费</p>
<p>付费次数 &#x3D; 付费人数 × 人均付费次数</p>
<p>付费人数 &#x3D; DAU × 付费人数占比</p>
<p>业务流程：部门层面</p>
<p>付费次数 &#x3D; 次数 × 付费次数占比</p>
<p>执行方案：个人&#x2F;小组层面</p>
<p>AB测试：</p>
<p>1、评估指标：push点击率</p>
<p>2、用户圈定原则：相互独立，且各组结构保持一致</p>
<p>用户结构一致，就是push点击率的分布各组要保持一致。</p>
<p>用户频次结构一致本质上也是对push点击率进行分组，进而保证push点击率分组的分布保持一致。</p>
<p>3、不同频次对push点击率是否影响显著</p>
<p>方差分析（F检验，多样本均值）或者Z检验（两样本均值）</p>
<p>判断显著后，对组平均与总体平均对比即可</p>
<p>微博（旧称：新浪微博）于2009年8月上线，是一家社交媒体平台；2014年3月27日，新浪微博正式更名为微博；4月17日晚，新浪公司旗下微博业务正式登陆纳斯达克，股票代码WB。</p>
<p>2023年11月9日，微博发布2023年第三季度财报。三季度微博总营收4.422亿美元，约合32.07亿元人民币，剔除汇率因素，总营收同比增长2%。其中，<strong>广告营收达到3.893亿美元</strong>，约合28.25亿元人民币，剔除汇率因素，广告收入同比增长3%。三季度微博调整后净利润1.366亿美元，约合人民币9.94亿元，剔除汇率因素，同比增长17%。用户方面，截至三季度末，<strong>微博月活跃用户达到6.05亿</strong>，同比净增约2100万，<strong>日活跃用户达到2.6亿</strong>，同比净增约800万。</p>
  <!--more-->

<h3 id="1、商业画布（Business-canvas）"><a href="#1、商业画布（Business-canvas）" class="headerlink" title="1、商业画布（Business canvas）"></a>1、商业画布（Business canvas）</h3><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F%E7%94%BB%E5%B8%83-%E5%BE%AE%E5%8D%9A.png" alt="商业模式画布-微博"></p>
<h3 id="2、业务流程图（Transaction-Flow-Diagram-TFD）"><a href="#2、业务流程图（Transaction-Flow-Diagram-TFD）" class="headerlink" title="2、业务流程图（Transaction Flow Diagram, TFD）"></a>2、业务流程图（Transaction Flow Diagram, TFD）</h3><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/业务流程图-微博.png" alt="业务流程图-微博" style="zoom:50%;">

<h3 id="3、页面流程图（Page-Flow-Diagram）"><a href="#3、页面流程图（Page-Flow-Diagram）" class="headerlink" title="3、页面流程图（Page Flow Diagram）"></a>3、页面流程图（Page Flow Diagram）</h3><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/页面流程图-微博.png" alt="页面流程图-微博" style="zoom:50%;">

<h3 id="4、功能流程图（Function-Flow-Diagram）"><a href="#4、功能流程图（Function-Flow-Diagram）" class="headerlink" title="4、功能流程图（Function Flow Diagram）"></a>4、功能流程图（Function Flow Diagram）</h3><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/功能流程图-微博.png" alt="功能流程图-微博" style="zoom:50%;">



<h3 id="5、数据流程图（Data-Flow-Diagram）"><a href="#5、数据流程图（Data-Flow-Diagram）" class="headerlink" title="5、数据流程图（Data Flow Diagram）"></a>5、数据流程图（Data Flow Diagram）</h3><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/数据流程图-微博.png" alt="数据流程图-微博" style="zoom:50%;">

<h3 id="6、业务指标体系搭建"><a href="#6、业务指标体系搭建" class="headerlink" title="6、业务指标体系搭建"></a>6、业务指标体系搭建</h3><p>假设广告的计费方式是按照曝光次数进行收费，即：<code>广告收入=曝光次数 × 次均曝光收入</code>，由于次均曝光收入的市场价格相对稳定，因此，提高曝光次数就是我们的核心业务目标。</p>
<p>对核心目标可进一步进行拆解，将大问题化解为小问题，从而“分而治之”。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E4%B8%9A%E5%8A%A1%E6%8C%87%E6%A0%87%E4%BD%93%E7%B3%BB-%E5%BE%AE%E5%8D%9A.png" alt="业务指标体系-微博"></p>
<p><code>经验贴：体验和收入往往不能同时兼顾，因此，如何平衡好他们的权重，也是精细化数据运营的重要方向。</code></p>
]]></content>
      <categories>
        <category>业务理解能力</category>
        <category>内容资讯行业</category>
      </categories>
  </entry>
  <entry>
    <title>财务成本管理（1）</title>
    <url>/p/314152c6/</url>
    <content><![CDATA[<h2 id="第1章-财务管理基本原理"><a href="#第1章-财务管理基本原理" class="headerlink" title="第1章 财务管理基本原理"></a>第1章 财务管理基本原理</h2><p>财务管理的内容和职能</p>
<p>财务管理的目标与利益相关者的要求</p>
<p>财务管理的核心概念</p>
<p>财务管理的基本理论</p>
<p>金融工具与金融市场</p>
  <span id="more"></span>

<p>第2章 财务报表分析与财务预测</p>
<p>财务报表分析的目的和方法</p>
<p>财务比率分析</p>
<p>财务预测的步骤和方法</p>
<p>增长率与资本需求的测算</p>
<p>第3章 价值评估基础</p>
<p>利率</p>
<p>货币的时间价值</p>
<p>风险和报酬</p>
<p>第4章 资本成本</p>
<p>资本成本的构成和用途</p>
<p>债务资本成本的估计</p>
<p>普通股资本成本的估计</p>
<p>混合筹资资本成本的估计</p>
<p>加权平均资本成本的计算</p>
<p>第5章 投资项目资本预算</p>
<p>投资项目类型和评价程序</p>
<p>投资项目的评价方法</p>
<p>投资项目现金流量的估计</p>
<p>投资项目的风险衡量与敏感性分析</p>
<p>第6章 债券、股票价值评估</p>
<p>债券价值评估</p>
<p>普通股价值评估</p>
<p>混合筹资工具价值评估</p>
<p>第7章 期权价值评估</p>
<p>期权的概念、类型和投资策略</p>
<p>金融期权价值评估</p>
<p>第8章 企业价值评估</p>
<p>企业价值评估的目的和对象</p>
<p>企业价值评估方法</p>
<p>第9章 资本结构</p>
<p>资本结构理论</p>
<p>资本结构决策分析</p>
<p>杠杆系数的衡量</p>
<p>第10章 股利分配、股票分割与股票回购</p>
<p>股利理论与股利政策</p>
<p>股利种类、支付程序与分配方案</p>
<p>股票分割与股票回购</p>
<p>第11章 长期筹资</p>
<p>普通股筹资</p>
<p>长期债务筹资</p>
<p>混合筹资</p>
<p>租赁筹资</p>
<p>第12章 营运资本管理</p>
<p>营运资本管理策略</p>
<p>现金管理</p>
<p>应收款项管理</p>
<p>短期债务筹资</p>
<p>第13章 产品成本计算</p>
<p>产品成本分类与变动成本法</p>
<p>产品成本的归集和分配</p>
<p>产品成本计算的品种法</p>
<p>产品成本计算的分批法</p>
<p>产品成本计算的分步法</p>
<p>第14章 标准成本法</p>
<p>标准成本及其制定</p>
<p>标准成本的差异分析</p>
<p>第15章 作业成本法</p>
<p>作业成本法的概念与特点</p>
<p>作业成本法的计算方法</p>
<p>作业成本管理</p>
<p>第16章 本量利分析</p>
<p>本量利的一般关系</p>
<p>保本分析</p>
<p>保利分析</p>
<p>利润敏感性分析</p>
<p>第17章 短期经营决策</p>
<p>短期经营决策概述</p>
<p>生产决策</p>
<p>定价决策</p>
<p>订货决策</p>
<p>第18章 全面预算</p>
<p>全面预算概述</p>
<p>全面预算的编制方法</p>
<p>营业预算的编制</p>
<p>财务预算的编制</p>
<p>第19章 责任会计</p>
<p>企业组织结构与责任中心划分</p>
<p>成本中心</p>
<p>利润中心</p>
<p>投资中心</p>
<p>第20章 业绩评价</p>
<p>财务业绩评价与非财务业绩评价</p>
<p>经济增加值</p>
<p>平衡计分卡</p>
<p>第21章 管理会计报告</p>
<p>内部责任中心业绩报告</p>
<p>质量成本报告</p>
]]></content>
      <categories>
        <category>数据表达能力</category>
        <category>财务数据分析</category>
      </categories>
      <tags>
        <tag>注会</tag>
      </tags>
  </entry>
  <entry>
    <title>在线教育全链路数据分析</title>
    <url>/p/939b/</url>
    <content><![CDATA[<h3 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a><strong>项目简介</strong></h3><ol>
<li><p><strong>我们团队在做一件什么事？</strong></p>
<p>团队所属在线教育公司-线下业务中心-转化部，主要工作是承接线下小学流量，通过免费或低价体验课程对用户进行服务并引导其购买正式课程，核心目标是通过不断优化课程策略和服务，提高PV转化率，快速覆盖市场用户，提高市场中付费用户的占比。</p>
  <span id="more"></span>
</li>
<li><p><strong>我在团队中是做一件什么事？</strong></p>
<p>我在团队的角色是数据组的一名数据分析师，主要工作分为两个方面：</p>
<p>1）搭建业务全链路数据监控体系：制定每期次业务目标，及时反馈业务方全链路各环节的数据现状，根据数据情况灵活调整策略促使各环节目标达成；</p>
<p>2）搭建业务全链路数据分析体系：深入业务思考和实践，和业务方一起分析复盘每期次服务过程和转化结果，为业务方提供多角度的数据分析，共同制定和优化业务策略，提高各环节效率和转化效果，促使团队目标达成。</p>
</li>
<li><p><strong>这件事我做到了什么程度，达到了什么结果？</strong></p>
<p>1）在这个项目当中，我从0到1帮助团队搭建了业务全链路数据监控体系和全链路数据分析体系，为团队设计了一套通用的业务数据模型，并基于Power BI独立进行了数据底层模型的搭建和数据看板的设计开发，使数据侧能快速响应业务需求，将常规数据需求的产出时间由1~3天缩短至1天以内；</p>
<p>2）基于此模型，赋能团队其他成员，在组内进行宣讲，帮助组内同事快速掌握使用在线教育通用分析模型的能力，使其能再业务线快速扩张的阶段能独自承担一个业务线的数据需求；</p>
<p>3）不足之处：由于相关政策的影响，未能继续深耕业务，实现从1到n阶段的成长蜕变。</p>
<p><strong>以下为脱敏后简化的Power BI在线教育全链路分析样例作品，供参考：</strong></p>
</li>
</ol>
<iframe title="Report Section" width="800" height="486" src="https://app.powerbi.com/view?r=eyJrIjoiOTk2MGE3MTktYmY2YS00ZjY2LTkyMDQtYjg4N2YyODQyZWE3IiwidCI6IjFkOThmYTJiLTA2ZTgtNDhlYS05YjY4LWI2YzZkYTYwODljYiIsImMiOjEwfQ%3D%3D" frameborder="0" allowfullscreen="true"></iframe>



<h3 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h3><p>K12在线教育的服务模式主要是“先体验，后入学”，在正式课程前面设置有体验课程。体验课程不仅能帮助机构了解学生当前的学习水平、学习习惯，针对性的挖掘学生潜在的学习需求，还能帮助家长和学生更加充分的了解培训机构，找到与其适合的课程和老师，提前融入到课程环境当中。</p>
<p>为了挖掘更多小学生群体的培训学习需求，降低学生体验课程的门槛，提高正式课程的转化率，公司开设小学0元体验课程，增设小学业务中心-转化部，负责小学0元课程的课程设计、课程运营以及转化工作。</p>
<h3 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h3><p>业务以期次为周期进行，每期次会开设5节课程（通常是4节数学+1节语文或英语，具体形式和内容由课程策略组制定），主要流程如下：</p>
<p>排课 -&gt; 招生 -&gt; 灌班 -&gt; 绩效制定 -&gt; 课程准备 -&gt;课程开始 -&gt;课程结束 -&gt;绩效核算</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20221013111026226.png"></p>
<h3 id="数据监控-amp-分析体系"><a href="#数据监控-amp-分析体系" class="headerlink" title="数据监控&amp;分析体系"></a>数据监控&amp;分析体系</h3><p>根据业务流程，梳理和制定出业务各环节所关注的业务指标，将业务进行数据映射，量化业务结果，用数据说话。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/1679839177939.jpg"></p>
<h4 id="绩效目标的制定"><a href="#绩效目标的制定" class="headerlink" title="绩效目标的制定"></a>绩效目标的制定</h4><p>通常每期次开始之前，需要根据本期次承接的例子数量和质量，制定本期绩效目标，目标包括过程指标和结果指标，过程指标主要关注加微率和到课率，结果指标主要关注PV转化率。</p>
<p><strong>绩效目标设定步骤：</strong></p>
<ol>
<li>财务那边会根据例子成本给出每期每年级的目标单产（最低值）；</li>
<li>根据目标单产，反推转化目标（包括转换pv和转换率）；</li>
</ol>
<p>​	1）会根据当前的团队人数和人效上限，向招生侧给到招生目标。</p>
<p>​	2）设定人均转化PV（必须要大于等于单产下限值）</p>
<p>​	3）根据客单价算出PV转化率</p>
<table>
<thead>
<tr>
<th>例子数</th>
<th>转化PV数</th>
<th>承接人数</th>
<th>总计PV数</th>
<th>客单价</th>
<th>PV转化率</th>
<th>单产</th>
<th>年级</th>
<th>人效</th>
</tr>
</thead>
<tbody><tr>
<td>10,000</td>
<td>8</td>
<td>40</td>
<td>320</td>
<td>999</td>
<td>3.2%</td>
<td>32</td>
<td>二年级</td>
<td>250</td>
</tr>
<tr>
<td>10,000</td>
<td>9</td>
<td>40</td>
<td>360</td>
<td>999</td>
<td>3.6%</td>
<td>36</td>
<td>三年级</td>
<td>250</td>
</tr>
<tr>
<td>10,000</td>
<td>10</td>
<td>40</td>
<td>400</td>
<td>999</td>
<td>4.0%</td>
<td>40</td>
<td>四年级</td>
<td>250</td>
</tr>
<tr>
<td>10,000</td>
<td>11</td>
<td>40</td>
<td>440</td>
<td>999</td>
<td>4.4%</td>
<td>44</td>
<td>五年级</td>
<td>250</td>
</tr>
<tr>
<td>10,000</td>
<td>12</td>
<td>40</td>
<td>480</td>
<td>999</td>
<td>4.8%</td>
<td>48</td>
<td>六年级</td>
<td>250</td>
</tr>
<tr>
<td>50,000</td>
<td></td>
<td></td>
<td>2000</td>
<td>999</td>
<td>4.0%</td>
<td>40</td>
<td>总计</td>
<td>250</td>
</tr>
</tbody></table>
<ol start="3">
<li>根据课程运营给到的转化节奏目标，进行拆解目标，制定这一期从课程准备到课程结束每个阶段的目标。</li>
</ol>
<table>
<thead>
<tr>
<th>课程阶段</th>
<th>课前</th>
<th>T+1</th>
<th>T+2</th>
<th>T+3</th>
<th>T+4</th>
<th>T+5</th>
<th>结课</th>
</tr>
</thead>
<tbody><tr>
<td><strong>转化占比</strong></td>
<td>0%</td>
<td>0%</td>
<td>15%</td>
<td>35%</td>
<td>30%</td>
<td>15%</td>
<td>5%</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>年级</th>
<th>基础目标转化率</th>
<th>T+2</th>
<th>T+3</th>
<th>T+4</th>
<th>T+5</th>
<th>结课</th>
</tr>
</thead>
<tbody><tr>
<td>二年级</td>
<td>3.20%</td>
<td>0.48%</td>
<td>1.60%</td>
<td>2.56%</td>
<td>3.04%</td>
<td>3.20%</td>
</tr>
<tr>
<td>三年级</td>
<td>3.60%</td>
<td>0.54%</td>
<td>1.80%</td>
<td>2.88%</td>
<td>3.42%</td>
<td>3.60%</td>
</tr>
<tr>
<td>四年级</td>
<td>4.00%</td>
<td>0.60%</td>
<td>2.00%</td>
<td>3.20%</td>
<td>3.80%</td>
<td>4.00%</td>
</tr>
<tr>
<td>五年级</td>
<td>4.40%</td>
<td>0.66%</td>
<td>2.20%</td>
<td>3.52%</td>
<td>4.18%</td>
<td>4.40%</td>
</tr>
<tr>
<td>六年级</td>
<td>4.80%</td>
<td>0.72%</td>
<td>2.40%</td>
<td>3.84%</td>
<td>4.56%</td>
<td>4.80%</td>
</tr>
<tr>
<td>总计</td>
<td>4.00%</td>
<td>0.60%</td>
<td>2.00%</td>
<td>3.20%</td>
<td>3.80%</td>
<td>4.00%</td>
</tr>
</tbody></table>
<h4 id="数据监控"><a href="#数据监控" class="headerlink" title="数据监控"></a>数据监控</h4><p>数据监控覆盖期次开始至结束的全链路各环节，各主要环节和关注指标如下：</p>
<p><strong>1）招生阶段（主要考核BD团队）：</strong>例子数（成功报名的人数）、灌班人数（成功承接的人数）、灌班完成度（灌班人数&#x2F;期次目标人数）；</p>
<p><strong>2）课前服务阶段（主要考核督学团队）：</strong>加微率（成功添加督学微信的人数占比）、第n节到课率（由于课程设计为10分钟左右讲解一个知识点，因此到课定义为≥5分钟）</p>
<p><strong>3）课中授课阶段（主要考核授课讲师）：</strong>第n节完课率（由于课程设计是课程结束前10分钟开始营销，因此完课定义为课程最后10分钟离开课堂即为完课）、课中3小时转化率（在开课后3小时内的PV转化率，直接成单的原因主要是讲师带来的）</p>
<p><strong>4）课程结束阶段（主要考核督学团队）：</strong>转化PV、PV转化率</p>
<p>每期次开始后，需要关注业务各环节的实时进度，每天在内部以日报的方式进行播报，及时发现和解决过程的问题，针对每期次的业务变化，还需要对日报目标定期进行更新和维护，以满足业务需要。</p>
<h4 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h4><p>数据监控指标体系的搭建和展示能力是一名数据分析师的基础能力，在此之上，还需要深入业务，将数据结合业务实际进行更有深度的分析，从数据中发现问题，找到机会，制定策略，从而指导业务，形成数据和业务的闭环。</p>
<p>业务每期次结束会用1~3天进行数据期次复盘分析，主要分为以下几个模块：</p>
<ol>
<li><strong>例子结构分析：</strong>主要目的有两个，一是了解本期例子质量及其变化趋势，在市场竞争的各阶段，例子质量会表现为不同水平，竞争越到后期，成本越高，质量越差，因此针对不同阶段，需要及时改变策略以应对市场变化；二是对下期例子情况进行预估测算，合理调整预期，帮助绩效目标的制定。</li>
<li><strong>课程策略分析（主要为课中营销策略，针对讲师）：</strong>主要目的是评估分析本期课程策略的实施效果，帮助课程策略组优化课程策略。课程策略组会在每期次开始前制定好课中营销策略，具体包括讲师课程营销内容部分的生产、上课营销节奏的制定。</li>
<li><strong>运营策略分析（主要为课外营销策略，针对督学）：</strong>主要目的是评估分析本期运营策略的实施效果，帮助课程运营组优化运营策略。课程运营组会在每期次开始前制定好督学在课后服务的sop流程和营销节奏（即BM分天目标），然后督学团队会参考其策略按节奏有重点的进行营销。</li>
<li><strong>督学转化分析</strong>：主要目的是评估分析本期整体转化的结果，包括各环节的目标完成度、团队目标完成度、单例子产能，优化人员成长机制和奖惩制度。</li>
</ol>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>K12在线教育的这个数据项目，是我个人第一次从0到1做独立完成的一个项目，这个项目帮助我从一名初级数据分析师（只具备接需求和取数统计的分析师）成长为一名中级数据分析师（具备结合业务独立搭建数据分析监控&amp;分析体系，并业务数据模型的设计、开发和上线的能力），且让我更加明确了一名数据分析师需要扎根在业务当中，继续培养以业务为引导，用数据指导业务的能力。</p>
]]></content>
      <categories>
        <category>数据表达能力</category>
        <category>分析案例</category>
      </categories>
  </entry>
  <entry>
    <title>NPS用户净推荐分析</title>
    <url>/p/e056df13/</url>
    <content><![CDATA[<p>NPS (Net Promoter Score) 可以<strong>衡量客户体验</strong>并<strong>预测业务增长</strong>。这一指标改变了商业世界，为全球的客户体验管理提供了可以参考的核心指标。</p>
<iframe title="NPS 用户净推荐分析-V1.0" width="800" height="486" src="https://app.powerbi.com/view?r=eyJrIjoiMzhkZjFlZTEtZDA1OS00NDMyLWFmOTItYWFiNjA5YzhmZWQ4IiwidCI6IjFkOThmYTJiLTA2ZTgtNDhlYS05YjY4LWI2YzZkYTYwODljYiIsImMiOjEwfQ%3D%3D&pageName=ReportSection9d801961b6b87e8da4fa" frameborder="0" allowfullscreen="true"></iframe>



  <span id="more"></span>

<h2 id="NPS-计算"><a href="#NPS-计算" class="headerlink" title="NPS 计算"></a>NPS 计算</h2><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/NPS.jpg" alt="NPS"></p>
<p>调研提问方式：”您有多大可能把我们（或这个产品&#x2F;服务&#x2F;品牌等等）推荐给朋友或同事？请从0-10分打分。“</p>
<p>受访者分为以下几类：</p>
<ul>
<li><strong>推荐者（Promoter）</strong>（9-10分）：是忠诚的爱好者，他们会继续购买并推荐他人，从而促进增长。</li>
<li><strong>被动者（Passive）</strong>（7-分）：很满意，但很容易受到竞争产品的攻击。</li>
<li><strong>批评者（Detractor）</strong>（0-6分）：是不满意的客户，他们可能会通过负面的口碑来损害您的品牌并阻碍增长。</li>
</ul>
<p>从推荐者的百分比中减去批评者的百分比会得出净推荐者分数，其范围可以从低到 -100（如果每个客户都是批评者）到最高 100（如果每个客户都是推荐者）。</p>
<p><strong>净推荐值(NPS)&#x3D;(推荐者数&#x2F;总样本数)×100% - (批评者数&#x2F;总样本数)×100%</strong></p>
<h3 id="CEM的核心指标"><a href="#CEM的核心指标" class="headerlink" title="CEM的核心指标"></a>CEM的核心指标</h3><p>CEM（Customer Experience Management）</p>
<p>将NPS用作衡量客户对品牌整体印象的关键指标。因为NPS是增长的领先指标，所以它为您的客户体验管理（CEM）计划提供了最佳的选择。将NPS与来自客户历程中各个角度的其他指标和见解相辅相成，您可以全面，切实地查看客户体验绩效。</p>
<h2 id="NPS-预测增长"><a href="#NPS-预测增长" class="headerlink" title="NPS 预测增长"></a>NPS 预测增长</h2><p>改善客户体验的商业利益</p>
<p>在改变商业世界十多年后，NPS仍然是唯一可以预测业务增长的客户体验。<strong>NPS 的经济学源于推荐者，被动者和批评者的行为差异。</strong>通过多种方式集中精力提高NPS，以提高业务绩效。</p>
<h3 id="更高的利润和支出"><a href="#更高的利润和支出" class="headerlink" title="更高的利润和支出"></a>更高的利润和支出</h3><p><strong>推荐者通常不如其他客户对价格敏感</strong>，因为他们认为他们从贵公司整体上获得了良好的价值。对于<strong>价格更敏感的批评者</strong>而言，情况恰恰相反。同时，<strong>推荐者购买的商品比批评者购买的商品更多</strong>。他们倾向于通过自己喜欢的品牌整合更多的商品类别。<strong>推荐者对新产品和品牌扩展的兴趣</strong>也超过了批评者或被动者。</p>
<h3 id="更高的保留率"><a href="#更高的保留率" class="headerlink" title="更高的保留率"></a>更高的保留率</h3><p>批评者通常比推荐者更容易出现问题，这意味着他们与您的公司之间的关系较短且利润较低。挽救那些批评者，将他们变成推荐者，从而并获得更高的利润。（有时候也可以战略性放弃这部分人群，因为批评者的获客成本往往很高，且容易给公司造成负面影响）</p>
<h3 id="更好的口碑"><a href="#更好的口碑" class="headerlink" title="更好的口碑"></a>更好的口碑</h3><p>有多少新客户是因为声誉或推荐而选择您的公司？这些新客户的终生价值（包括销售或营销费用的任何节省）将大部分来自于推荐者。另一方面，批评者会导致负面的口口相传，因此您可以将这种拖累增长的成本归因于他们。</p>
<p>总而言之，推荐者可以帮你减少获客成本，提高增长；而批评者则会增加你的获客成本，降低增长。</p>
<h2 id="比较您的净促销员分数"><a href="#比较您的净促销员分数" class="headerlink" title="比较您的净促销员分数"></a>比较您的净促销员分数</h2><p>NPS基准测试指导您的目标和计划</p>
<p>“我的 NPS 应该是多少？” 简单的问题，复杂的答案。NPS会因行业，地区或客户特征（例如年龄，收入水平或与公司在一起的时间）而异。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/2016-b2c-sps-sector-averages.jpg" alt="B2C基准"></p>
<p>因此，要了解您的净促销员得分，您<strong>必须将该得分与您的行业内以及直接和间接竞争对手的得分进行比较</strong>。得分高于竞争水平的公司发展更快，更成功。</p>
<h3 id="使用NPS跟踪用户体验"><a href="#使用NPS跟踪用户体验" class="headerlink" title="使用NPS跟踪用户体验"></a>使用NPS跟踪用户体验</h3><p>NPS 分数是客户体验好坏的标志。NPS高于竞争对手的公司往往会增长更快并取得更大的成功。使用您自己的 NPS 分数（并查看竞争对手的分数），可以来跟踪您为提高客户体验的努力是否成功。</p>
<p>参考网站：<a href="https://www.netpromoter.com/compare/">https://www.netpromoter.com/compare/</a></p>
]]></content>
      <categories>
        <category>数据表达能力</category>
        <category>分析案例</category>
      </categories>
  </entry>
  <entry>
    <title>数据分析职业分析</title>
    <url>/p/510368d3/</url>
    <content><![CDATA[<p><strong>作者注：</strong>本文为作者于2019年5月5日发布在知乎的文章：<a href="https://zhuanlan.zhihu.com/p/64672284">https://zhuanlan.zhihu.com/p/64672284</a></p>
<h2 id="文章简介"><a href="#文章简介" class="headerlink" title="文章简介"></a>文章简介</h2><p>本文主要介绍了对“数据分析师”的全国招聘信息进行分析的详细步骤，使用的分析工具是Python。数据爬取自BOSS直聘近期的数据分析师招聘信息，文章不介绍爬虫步骤。</p>
  <span id="more"></span>

<h2 id="分析流程"><a href="#分析流程" class="headerlink" title="分析流程"></a>分析流程</h2><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-bdeab667d6358d05be62df816f6340ce_720w.webp" alt="img"></p>
<h2 id="一．明确分析目的"><a href="#一．明确分析目的" class="headerlink" title="一．明确分析目的"></a>一．明确分析目的</h2><p>明确分析目的是数据分析的首要的、关键的步骤。在开始一项数据分析前，首先要清楚我们想解决什么问题？通过这次分析想达到一个什么样的效果？下面罗列了本次分析的几个目的：</p>
<p>1）了解各城市对数据分析师的需求；</p>
<p>2）数据分析师这个职业的门槛有多高；</p>
<p>3）了解招聘公司情况；</p>
<p>4）了解各行业对数据分析师的需求；</p>
<p>4）了解数据分析师的薪资情况。</p>
<h2 id="二．获取相关数据"><a href="#二．获取相关数据" class="headerlink" title="二．获取相关数据"></a>二．获取相关数据</h2><p>明确分析目的后，接下来要做的就是为了解决这些问题，有针对性的获取相关数据。之所以说“有针对性”，是因为并不是数据越多越好，数据越多，我们的抓取、清洗成本也就越高，只有对本次分析有用的数据才是有价值的数据。因此，根据我们的分析目的，本文用Python从BOSS直聘中抓取了如下字段信息：公司名称，公司地址，公司规模，融资情况，所属行业，职位名称，经验要求，学历要求，薪资。源数据格式如下： </p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-122381a5f1cf93e969d136b9f5055478_720w.webp" alt="img"></p>
<h2 id="三．数据清洗与规整化"><a href="#三．数据清洗与规整化" class="headerlink" title="三．数据清洗与规整化"></a>三．数据清洗与规整化</h2><p>得到源数据后，还需要对其进行清洗和规整化后才能进行分析，一般包括清洗、转换、合并、重塑。下面本文使用Python对源数据进行处理：</p>
<p>1） 导入包</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-05b2ee5f216ef1aaabaa8047c81f6e73_720w.webp" alt="img"></p>
<p>2） 缺失值处理</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-e6d365247b7464d5e9c08a19dabc5b2c_720w.webp" alt="img"></p>
<p>3） 删除重复值</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-b232989413cf47427d38c1f09ae0f472_720w.webp" alt="img"></p>
<p>4） 提取城市名</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-ad6c6f7e2f41a5a094c0210657e24ecd_720w.webp" alt="img"></p>
<p>5） 删除空格</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-95ad51741b3ea02f905298b9e382175f_720w.webp" alt="img"></p>
<p>6） 提取最低薪资和最高薪资</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-25890111352751f7207448770d5f1a6d_720w.webp" alt="img"></p>
<p>7） 数据重塑  </p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-644bcd1e8206ac6d72b651aaaadd8cb9_720w.webp" alt="img"></p>
<h2 id="四．数据可视化分析报告"><a href="#四．数据可视化分析报告" class="headerlink" title="四．数据可视化分析报告"></a>四．数据可视化分析报告</h2><h2 id="1-城市需求分析"><a href="#1-城市需求分析" class="headerlink" title="1. 城市需求分析"></a>1. 城市需求分析</h2><p>初步观察可知，数据分析师的需求主要集中在大城市，其中排名前十的分别是北京、上海、深圳、杭州、南京、广州、东莞、合肥、天津、武汉。其中北京的需求远远超过其它城市，接近上海和深圳的需求总和。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-d8c65f296c9a868401fa3ae1ec424864_720w.webp" alt="img"></p>
<p>数据分析师职位在城市地理分布上，主要集中于北上广深、长江三角洲、沿海地区。中国内陆地区需求较少，一般集中于省会城市。 </p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-91b0d990fb6ef926be5b6496f3f7b025_720w.webp" alt="img"></p>
<h2 id="2-职业门槛分析"><a href="#2-职业门槛分析" class="headerlink" title="2. 职业门槛分析"></a>2. 职业门槛分析</h2><p>在学历要求上，数据分析师的门槛相对较高，80.2%的公司要求至少本科学历，4.8%的公司要求硕士学历。因此对想从事数据分析师职业的人员来说，本科学历是必要的敲门砖。</p>
<p>在工作经验要求上，大部分公司对工资经验都有较高要求，其中3-5年工资经验的数据分析师最受欢迎，需求达到37.9%；其次就是1-3年经验的数据分析师，需求达到31.1%。因此，一定的行业工作经验能帮助数据分析师求职者快速找到工作 ，而应届生和无工作经验者只有提高自己的专业技能，才能获得竞争优势。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-50da174756a6cf504fe4352be9e6607f_720w.webp" alt="img"></p>
<h2 id="3-公司情况分析"><a href="#3-公司情况分析" class="headerlink" title="3. 公司情况分析"></a>3. 公司情况分析</h2><p>对于招聘公司的融资情况上，上市公司居多，达到33.4%；在公司的规模上，大公司对数据分析师的需求更多，其中1000-9999人规模的公司最多，达到45.4% ，其次是10000人以上规模的公司，达33.8%。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-a53262c7a36a886c6561db32ac0c3269_720w.webp" alt="img"></p>
<h2 id="4-行业需求分析"><a href="#4-行业需求分析" class="headerlink" title="4. 行业需求分析"></a>4. 行业需求分析</h2><p>在下面词云图中可以看出，数据分析师涉及的行业十分广泛，供求职者的选择空间很大，其中各行业中，互联网、电子商务、金融、医疗健康、计算机软件等行业的需求量最高。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-638d3d716e22c774cf25133343a39847_720w.webp" alt="img"></p>
<h2 id="5-薪资分析"><a href="#5-薪资分析" class="headerlink" title="5. 薪资分析"></a>5. 薪资分析</h2><h3 id="（1）工作经验和学历对薪资的影响"><a href="#（1）工作经验和学历对薪资的影响" class="headerlink" title="（1）工作经验和学历对薪资的影响"></a>（1）工作经验和学历对薪资的影响</h3><p>总的来说，工作经验的长短和学历的大小基本跟薪资的高低是成正比的，工作经验越长，学历越高，薪资也会越高。</p>
<p>在工作经验上，拥有十年以上经验者平均起薪已经超过25000，5-10经验者平均起薪在20000左右，3-5年经验者平均起薪接近15000了，而三年以下和无经验者平均起薪则在10000以下。由此可看出，数据分析师对工作经验的要求还是比较高的，对行业和业务熟悉的人薪资会更高，同时也说明这个职业有很大的上升空间，“越老越值钱”，看重资历。</p>
<p>在学历上，本科和硕士的平均起薪相差2000左右，差别不是很大，但本科以下学历，平均起薪就相对较低了，一般不超过6000。</p>
<p>因此，本科学历是数据分析师高薪的门槛，拥有本科学历和3年以上工作经验是数据分析师高薪的敲门砖。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-92c32bac6f3c56e8906349a43d7c1d59_720w.webp" alt="img"></p>
<h3 id="（2）各城市起薪分布对比"><a href="#（2）各城市起薪分布对比" class="headerlink" title="（2）各城市起薪分布对比"></a>（2）各城市起薪分布对比</h3><p>下面展示的是数据分析师职业需求前十的城市起薪的分布状况。容易看出，北京、上海、深圳、杭州的平均起薪都在15000左右，而广州只有10000左右，南京则在7500左右。</p>
<p>对于北京，数据分析师的平均起薪分布对称，比较符合正态分布；上海、深圳、南京呈右偏分布，其中上海、深圳高薪资职位相对较多，南京有个别公司起薪异常高。杭州、广州呈左偏分布，半数职位起薪在10000以下，个别职位薪资不超过5000，远远低于平均水平。</p>
<p>因此，在北京、上海、深圳三个城市能有更大的概率找到高薪的数据分析师职位；其次是杭州、广州，虽有部分公司薪资较低，但平均工资还是比较可观；而南京虽然需求较多，但高薪职位相对较少，大部分职位工资都不超过10000，集中在3000-7500中间。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/v2-7ef6c244045fc60c782b5ca07f30b66a_720w.webp" alt="img"></p>
<h2 id="五．分析总结"><a href="#五．分析总结" class="headerlink" title="五．分析总结"></a>五．分析总结</h2><p>本文从多角度分析了BOSS直聘近期数据分析师的招聘信息情况，对数据分析师有如下几点总结：</p>
<p>1）北上广深、长江三角洲、沿海地区是数据分析师的集中地区，其中，北京的需求远远超过其它地区，若想从事数据分析师职业，在北京机会最多。</p>
<p>2）本科学历、3-5年以上工作经验的数据分析师成为最受公司欢迎的“香饽饽”，并且平均薪资也相对较高，在15000左右。</p>
<p>3）上市公司、1000-9999的大公司对数据分析师的需求更高；</p>
<p>4）互联网、电子商务、金融、医疗健康是数据分析师首选的几大行业。</p>
<p>4）在北京、上海、深圳寻找高薪职位的概率更大；</p>
]]></content>
      <categories>
        <category>数据表达能力</category>
        <category>分析案例</category>
      </categories>
  </entry>
  <entry>
    <title>JavaWeb-Maven</title>
    <url>/p/fbc56413/</url>
    <content><![CDATA[<h2 id="5、Maven"><a href="#5、Maven" class="headerlink" title="5、Maven"></a>5、Maven</h2><p>为什么要学Maven？</p>
<ol>
<li>在Javaweb开发中，需要使用大量的jar包，需要手动导入；</li>
<li>Maven能帮助我们自动导入和配置这个jar包。</li>
</ol>
<span id="more"></span>

<h3 id="5-1、Maven项目架构管理工具"><a href="#5-1、Maven项目架构管理工具" class="headerlink" title="5.1、Maven项目架构管理工具"></a>5.1、Maven项目架构管理工具</h3><p>Maven的核心思想：<strong>约定大于配置</strong></p>
<ul>
<li>有约束，别违反</li>
</ul>
<h3 id="5-2、Maven下载安装"><a href="#5-2、Maven下载安装" class="headerlink" title="5.2、Maven下载安装"></a>5.2、Maven下载安装</h3><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220921213913665.png"></p>
<h3 id="5-3、配置环境变量"><a href="#5-3、配置环境变量" class="headerlink" title="5.3、配置环境变量"></a>5.3、配置环境变量</h3><p>系统环境变量下配置如下：</p>
<ul>
<li>M2_HOME maven目录下的bin目录</li>
<li>MAVEN_HOME maven的目录</li>
<li>在系统的path中配置%MAVEN_HOME%\bin</li>
</ul>
<p>测试配置是否成功：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220921215021057.png"></p>
<h3 id="5-4、阿里云镜像"><a href="#5-4、阿里云镜像" class="headerlink" title="5.4、阿里云镜像"></a>5.4、阿里云镜像</h3><ul>
<li>镜像：mirrors<ul>
<li>作用：加速我们的下载</li>
</ul>
</li>
<li>国内建议使用阿里云镜像</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--下面是配置内容--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-5、本地仓库"><a href="#5-5、本地仓库" class="headerlink" title="5.5、本地仓库"></a>5.5、本地仓库</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>C:/Environment/Maven/apache-maven-3.8.6/maven-repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-6、在IDEA中使用Maven"><a href="#5-6、在IDEA中使用Maven" class="headerlink" title="5.6、在IDEA中使用Maven"></a>5.6、在IDEA中使用Maven</h3><p><strong>Maven常规配置：</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220921224717351.png"></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220922083517875.png"></p>
<h3 id="5-7、在IDEA中配置Tomcat"><a href="#5-7、在IDEA中配置Tomcat" class="headerlink" title="5.7、在IDEA中配置Tomcat"></a>5.7、在IDEA中配置Tomcat</h3><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220922231100674.png"></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220922085311119.png"></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220922085415283.png"></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220922085432687.png"></p>
<h3 id="5-8、pom配置文件"><a href="#5-8、pom配置文件" class="headerlink" title="5.8、pom配置文件"></a>5.8、pom配置文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.guiyi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javaweb-01-maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javaweb-01-maven Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 具体依赖的jar包配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Maven的高级之处在于，他会帮你导入这个jar包所依赖的其他jar包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--在build中配置resource，来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="5-9、Maven仓库"><a href="#5-9、Maven仓库" class="headerlink" title="5.9、Maven仓库"></a>5.9、Maven仓库</h3><p><a href="https://search.maven.org/">https://search.maven.org/</a></p>
<h3 id="5-10、常见问题"><a href="#5-10、常见问题" class="headerlink" title="5.10、常见问题"></a>5.10、常见问题</h3><ol>
<li>maven默认web项目中的web.xml版本问题：maven自动添加的版本较老，替换成本地Tomcat中的web.xml配置</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;https://jakarta.ee/xml/ns/jakartaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;https://jakarta.ee/xml/ns/jakartaee</span></span></span><br><span class="line"><span class="string"><span class="tag">                      https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;5.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">metadata-complete</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Welcome to Tomcat<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">    Welcome to Tomcat</span><br><span class="line">  <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>网页开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-HTTP协议</title>
    <url>/p/d8ad1f04/</url>
    <content><![CDATA[<h2 id="4、HTTP"><a href="#4、HTTP" class="headerlink" title="4、HTTP"></a>4、HTTP</h2><h3 id="4-1、什么是HTTP"><a href="#4-1、什么是HTTP" class="headerlink" title="4.1、什么是HTTP"></a>4.1、什么是HTTP</h3><p>HTTP（超文本传输协议）是一个简单的请求-响应协议，它通常运行在TCP之上。</p>
<ul>
<li>文本：html，字符串，…</li>
<li>超文本：图片、音乐、视频、定位、地图</li>
<li>默认端口号：80</li>
</ul>
<span id="more"></span>

<h3 id="4-2、两个时代"><a href="#4-2、两个时代" class="headerlink" title="4.2、两个时代"></a>4.2、两个时代</h3><ul>
<li>http1.0<ul>
<li>HTTP&#x2F;1.0：客户端与web服务器连接后，只能获得一个资源，断开连接</li>
</ul>
</li>
<li>http2.0<ul>
<li>HTTP&#x2F;1.1：客户端与web服务器连接后，可以获得多个资源</li>
</ul>
</li>
</ul>
<h3 id="4-3、HTTP请求"><a href="#4-3、HTTP请求" class="headerlink" title="4.3、HTTP请求"></a>4.3、HTTP请求</h3><ul>
<li>客户端—发请求—服务器</li>
</ul>
<p>百度：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">请求网址: https:<span class="comment">//www.baidu.com/    请求地址</span></span><br><span class="line">请求方法: GET  		get方法、post方法</span><br><span class="line">状态代码: <span class="number">200</span> OK		状态码：<span class="number">200</span></span><br><span class="line">远程地址: <span class="number">110.242</span><span class="number">.68</span><span class="number">.4</span>:<span class="number">443</span>		</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Accept:text/html</span><br><span class="line">Accept-Encoding: gzip, deflate, br  编码</span><br><span class="line">Accept-Launguage:zh-CN,zh;q=<span class="number">0.9</span>		语言</span><br><span class="line">Cache-Control:max-age=<span class="number">0</span></span><br><span class="line">Connection: keep-alive 	连接</span><br></pre></td></tr></table></figure>

<h4 id="1、请求行"><a href="#1、请求行" class="headerlink" title="1、请求行"></a>1、请求行</h4><ul>
<li>请求行中的请求方式：GET</li>
<li>请求方式：GET, POST…<ul>
<li>get：请求能携带的参数比较少，大小有限制，会在浏览器的URL地址栏显示数据内容，不安全，但高效</li>
<li>post：请求能够携带的参数没有限制，大小没有限制，不会在浏览器的URL地址栏显示数据内容，安全，但不高效</li>
</ul>
</li>
</ul>
<h4 id="2、消息头"><a href="#2、消息头" class="headerlink" title="2、消息头"></a>2、消息头</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Accept: 告诉浏览器，它所支持的数据类型</span><br><span class="line">Accept-Encoding：支持哪种编码格式</span><br><span class="line">Accept-Launguage：告诉浏览器它的语言环境</span><br><span class="line">Cache-Control：缓存控制</span><br><span class="line">Connection：告诉浏览器，请求完成是断开还是保持连接</span><br><span class="line">HOST：主机</span><br><span class="line">......</span><br></pre></td></tr></table></figure>



<h3 id="4-4、HTTP响应"><a href="#4-4、HTTP响应" class="headerlink" title="4.4、HTTP响应"></a>4.4、HTTP响应</h3><ul>
<li>服务器—响应—客户端</li>
</ul>
<p>百度：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Cache-Control:<span class="keyword">private</span>	缓存控制</span><br><span class="line">Connection: keep-alive 	连接</span><br><span class="line">Content-Encoding: gzip  编码</span><br><span class="line">Content-Type: text/html; charset=utf-<span class="number">8</span>   类型</span><br></pre></td></tr></table></figure>

<h4 id="1、响应体"><a href="#1、响应体" class="headerlink" title="1、响应体"></a>1、响应体</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Accept: 告诉浏览器，它所支持的数据类型</span><br><span class="line">Accept-Encoding：支持哪种编码格式</span><br><span class="line">Accept-Launguage：告诉浏览器它的语言环境</span><br><span class="line">Cache-Control：缓存控制</span><br><span class="line">Connection：告诉浏览器，请求完成是断开还是保持连接</span><br><span class="line">HOST：主机</span><br><span class="line">Refresh: 告诉客户端，多久刷新一次</span><br><span class="line">Location: 让网页重新定位</span><br></pre></td></tr></table></figure>

<h4 id="2、响应状态码"><a href="#2、响应状态码" class="headerlink" title="2、响应状态码"></a>2、响应状态码</h4><p>200：请求响应成功	</p>
<p>3××：请求重定向	</p>
<ul>
<li>重定向：你重新到我给你的新位置去</li>
</ul>
<p>4××：找不到资源  404</p>
<ul>
<li>资源不存在</li>
</ul>
<p>5××：服务器代码错误	500	</p>
<ul>
<li>502：网关错误</li>
</ul>
<p><strong>常见面试题：</strong></p>
<p>当你的浏览器中地址栏输入地址并回车的一瞬间到页面能够展示回来，经历了什么？</p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>网页开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-Tomcat</title>
    <url>/p/9ecb83c3/</url>
    <content><![CDATA[<h2 id="3、Tomcat"><a href="#3、Tomcat" class="headerlink" title="3、Tomcat"></a>3、Tomcat</h2><h3 id="3-1、安装Tomcat"><a href="#3-1、安装Tomcat" class="headerlink" title="3.1、安装Tomcat"></a>3.1、安装Tomcat</h3><p><a href="https://tomcat.apache.org/download-10.cgi">https://tomcat.apache.org/download-10.cgi</a></p>
<h3 id="3-2、Tomcat启动和配置"><a href="#3-2、Tomcat启动和配置" class="headerlink" title="3.2、Tomcat启动和配置"></a>3.2、Tomcat启动和配置</h3><p><strong>文件夹作用</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220904104902961.png" alt="image-20220904104902961"></p>
<span id="more"></span>

<p><strong>启动、关闭Tomcat</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220904105115898.png"></p>
<p>访问测试：<a href="http://localhost:8080/">http://localhost:8080/</a></p>
<p>可能遇到的问题：</p>
<ol>
<li>Java环境变量没有配置</li>
<li>闪退问题：需要配置兼容性</li>
<li>乱码问题：配置文件中设置</li>
</ol>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220904105356656.png"></p>
<p>可以配置启动的端口号</p>
<ul>
<li>tomcat的默认端口号为：8080</li>
<li>MySQL：3306</li>
<li>http：80</li>
<li>https：443</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以配置主机的名称</p>
<ul>
<li>默认的主机名为：localhost –&gt; 127.0.0.1</li>
<li>默认网站应用存放的位置为：webapps</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-3、高难度面试题："><a href="#3-3、高难度面试题：" class="headerlink" title="3.3、高难度面试题："></a>3.3、高难度面试题：</h3><p>请你谈谈网站是如何访问的？</p>
<ol>
<li><p>输入域名；回车</p>
</li>
<li><p>检查本机的<code>C:\Windows\System32\drivers\etc\hosts</code>配置文件下有没有这个域名的映射；</p>
<ol>
<li>有：直接返回对应的ip地址，这个地址中，有我们需要访问的web程序，可以直接访问</li>
<li>没有：去DNS服务器找，找到的话就返回，找不到就返回找不到；</li>
</ol>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220918103409720.png"></p>
</li>
</ol>
<h3 id="3-4、发布一个web网站"><a href="#3-4、发布一个web网站" class="headerlink" title="3.4、发布一个web网站"></a>3.4、发布一个web网站</h3><ul>
<li>将自己写的网站，放到服务器（Tomcat）中指定的web应用的文件夹（webapps）下，就可以访问了</li>
</ul>
<p>网站应该有的结构</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">-- webapps: Tomcat服务器的web目录</span><br><span class="line">    -ROOT</span><br><span class="line">    -kuangstudy: 网站的目录名</span><br><span class="line">        - WEB-INF</span><br><span class="line">        	-classes: java程序</span><br><span class="line">            -lib: web应用所依赖的jar包</span><br><span class="line">            -web.xml: 网站配置文件</span><br><span class="line">		- index.html 默认的首页</span><br><span class="line">        - <span class="keyword">static</span></span><br><span class="line">           - css</span><br><span class="line">                - style.css</span><br><span class="line">           - js </span><br><span class="line">           - img</span><br><span class="line">        - .....</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>网页开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-Web服务器</title>
    <url>/p/c4e645ce/</url>
    <content><![CDATA[<p>Web服务器是使用HTTP（超文本传输协议）和其他协议来响应通过万维网发出的客户端请求的软件和硬件。Web服务器的主要工作是通过存储，处理和向用户交付网页来显示网站内容。除了HTTP，Web服务器还支持SMTP（简单邮件传输协议）和FTP（文件传输协议），用于电子邮件，文件传输和存储。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/b219ebc4b74543a95d384898aa9e6e88b80114d3.jpeg@f_auto" alt="img"></p>
<span id="more"></span>

<h2 id="2、web服务器"><a href="#2、web服务器" class="headerlink" title="2、web服务器"></a>2、web服务器</h2><h3 id="2-1、技术讲解"><a href="#2-1、技术讲解" class="headerlink" title="2.1、技术讲解"></a>2.1、技术讲解</h3><p><strong>ASP：</strong></p>
<ul>
<li>微软：国内最早流行的就是ASP；</li>
<li>在HTML中嵌入了VB的脚本，ASP + COML；</li>
<li>在ASP开发中，基本一个页面都有几千行的业务代码，页面及其混乱</li>
<li>维护成本高！</li>
<li>C#</li>
<li>IIS</li>
</ul>
<p><strong>PHP：</strong></p>
<ul>
<li>PHP开发速度很快，功能很强大，跨平台，代码很简单</li>
<li>无法承载大访问量的情况（局限性）</li>
</ul>
<p><strong>JSP&#x2F;Servlet：</strong></p>
<p>B&#x2F;S：浏览器和服务器</p>
<p>C&#x2F;S：客户端和服务器</p>
<ul>
<li>sun公司主推的B&#x2F;S架构</li>
<li>基于Java语言的（所有的大公司，或一些开源的组件，都是用Java写的）</li>
<li>可以承载三高问题（高并发、高可用、高性能）带来的影响</li>
<li>语法像ASP</li>
</ul>
<h3 id="2-2、web服务器"><a href="#2-2、web服务器" class="headerlink" title="2.2、web服务器"></a>2.2、web服务器</h3><p>服务器是一种被动的操作，用来处理用户的一些请求和给用户一些响应信息；</p>
<p><strong>IIS</strong></p>
<p>微软的；ASP…, Windows中自带的</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220904102844012.png"></p>
<p><strong>Tomcat</strong></p>
<p>百度百科：</p>
<p>Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，由<a href="https://baike.baidu.com/item/Apache/6265?fromModule=lemma_inlink">Apache</a>、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为比较流行的Web 应用服务器。</p>
<p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用<a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8?fromModule=lemma_inlink">服务器</a>，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个初学者来说，可以这样认为，当在一台机器上配置好Apache 服务器，可利用它响应<a href="https://baike.baidu.com/item/HTML?fromModule=lemma_inlink">HTML</a>（<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/6805073?fromModule=lemma_inlink">标准通用标记语言</a>下的一个应用）页面的访问请求。实际上Tomcat是Apache 服务器的扩展，但运行时它是独立运行的，所以当你运行tomcat 时，它实际上作为一个与Apache 独立的进程单独运行的。</p>
<p>诀窍是，当配置正确时，Apache 为HTML页面服务，而Tomcat 实际上运行JSP 页面和Servlet。另外，Tomcat和<a href="https://baike.baidu.com/item/IIS?fromModule=lemma_inlink">IIS</a>等Web服务器一样，具有处理HTML页面的功能，另外它还是一个Servlet和JSP容器，独立的Servlet容器是Tomcat的默认模式。不过，Tomcat处理静态<a href="https://baike.baidu.com/item/HTML?fromModule=lemma_inlink">HTML</a>的能力不如Apache服务器。Tomcat最新版本为10.0.14<strong>。</strong></p>
<p>下载tomcat：</p>
<ol>
<li>安装 or 解压</li>
<li>了解配置文件及目录结构</li>
<li>这个东西的作用</li>
</ol>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>网页开发</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-基本概念</title>
    <url>/p/82a91f4e/</url>
    <content><![CDATA[<h2 id="1、基本概念"><a href="#1、基本概念" class="headerlink" title="1、基本概念"></a>1、基本概念</h2><h3 id="1-1、前言"><a href="#1-1、前言" class="headerlink" title="1.1、前言"></a>1.1、前言</h3><p>web开发：</p>
<ul>
<li>web，网页的意思，<a href="http://www.baidu.com/">www.baidu.com</a></li>
<li>静态web<ul>
<li><code>html</code>，<code>css</code></li>
<li>提供给所有人看的数据始终不会发生变化！</li>
</ul>
</li>
<li>动态web<ul>
<li>几乎所有的网站</li>
<li>提供给所有人看的数据始终会发生变化，每个人在不同时间，不同地点看到的信息各不相同！</li>
<li>技术栈：<code>Servlet</code>、<code>JSP</code>、<code>ASP</code>、<code>PHP</code></li>
</ul>
</li>
</ul>
<p>在Java中，动态web资源开发的技术统称为JavaWeb</p>
<span id="more"></span>

<h3 id="1-2、web应用程序"><a href="#1-2、web应用程序" class="headerlink" title="1.2、web应用程序"></a>1.2、web应用程序</h3><p>web应用程序：可以提供浏览器访问的程序；</p>
<ul>
<li>a.html、b.html……多个web资源，这些web资源可以被外界访问，对外界提供服务；</li>
<li>你们能访问到的任何一个页面或资源，都存在于这个世界的某一个角度的计算机上。</li>
<li>URL</li>
<li>这些统一的web资源会被放在同一个文件夹下，web应用程序 –&gt; Tomcat：服务器</li>
<li>一个web应用由多部份组成（静态web，动态web）<ul>
<li>html，css，js</li>
<li>jsp，servlet</li>
<li>Java程序</li>
<li>jar包</li>
<li>配置文件（Properties）</li>
</ul>
</li>
</ul>
<p>web应用程序编写完后，若想提供给外界访问：需要一个服务器来统一管理；</p>
<h3 id="1-3、静态web"><a href="#1-3、静态web" class="headerlink" title="1.3、静态web"></a>1.3、静态web</h3><ul>
<li>*.htm, *.html, 这些都是网页的后缀，如果服务器上一直存在这些东西，我们就可以直接进行读取。</li>
</ul>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220904100048425.png"></p>
<ul>
<li>静态web存在的缺点<ul>
<li>web页面无法动态更新，所有用户看到的都是同一个页面<ul>
<li>轮播图，点击特效：伪动态</li>
<li>JavaScript【实际开发中，用的最多】</li>
<li>VBScript</li>
</ul>
</li>
<li>它无法和数据库交互（数据无法持久化，用户无法交互）</li>
</ul>
</li>
</ul>
<h3 id="1-4、动态web"><a href="#1-4、动态web" class="headerlink" title="1.4、动态web"></a>1.4、动态web</h3><p>页面会动态展示：“Web的页面展示的效果因人而异”；</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220904100552721.png"></p>
<p>缺点：</p>
<ul>
<li>假如服务器的动态web资源出现了错误，我们需要重新编写我们的后台程序，重新发布。<ul>
<li>停机维护</li>
</ul>
</li>
</ul>
<p>优点：</p>
<ul>
<li>web页面可以动态更新，所有用户看到的不是同一个页面</li>
<li>它可以和数据库交互（数据持久化：注册，商品信息，用户信息……）</li>
</ul>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220904100826164.png"></p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>网页开发</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML基础</title>
    <url>/p/e173abca/</url>
    <content><![CDATA[<h3 id="什么是HTML"><a href="#什么是HTML" class="headerlink" title="什么是HTML"></a>什么是HTML</h3><p><strong>HTML：</strong>Hyper Text Markup Language（超文本标记语言）</p>
<p>超文本包括：文字、图片、音频、视频、动画等。</p>
<p>浏览器打开网页，右键-检查，即可查看</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220827145402886.png" alt="image-20220827145402886"></p>
<span id="more"></span>

<h4 id="W3C标准"><a href="#W3C标准" class="headerlink" title="W3C标准"></a>W3C标准</h4><p><strong>W3C：</strong>World Wide Web Consortium（万维网联盟）</p>
<p>成立于1944年，Web技术领域最权威和最具影响力的国际中立性技术标准机构</p>
<p><a href="http://www.w3.org/">http://www.w3.org/</a></p>
<p><a href="http://www.chinaw3c.org/">http://www.chinaw3c.org/</a></p>
<p><strong>W3C标准包括：</strong></p>
<ul>
<li>结构化标准语言（HTML、XML）</li>
<li>表现标准语言（CSS）</li>
<li>行为标准（DOM、ECMAScript）</li>
</ul>
<h4 id="网页的基本信息"><a href="#网页的基本信息" class="headerlink" title="网页的基本信息"></a>网页的基本信息</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--DOCTYPE声明：告诉浏览器我们要使用什么规范，默认html--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--head标签代表网页头部--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- meta描述性标签，它用来描述我们网站的一些信息 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- meta 一般用来做SEO --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;归一的个人博客&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;数据分析师&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- title标签：网页标题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--body标签代表网页主体--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">Hello,world!</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="页面结构分析"><a href="#页面结构分析" class="headerlink" title="页面结构分析"></a>页面结构分析</h4><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220827123551284.png"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面结构学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>网页头部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>网页主体<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>网页脚步<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="网页的基本标签"><a href="#网页的基本标签" class="headerlink" title="网页的基本标签"></a>网页的基本标签</h3><ol>
<li>标题标签</li>
<li>段落标签</li>
<li>换行标签</li>
<li>水平线标签</li>
<li>字体样式标签</li>
<li>注释和特殊符号</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基本标签学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--标题标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--段落标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>青花瓷-周杰伦<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>作词 方文山 作曲 周杰伦<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>素胚勾勒出青花笔锋浓转淡<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>瓶身描绘的牡丹一如你初妆<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>冉冉檀香透过窗心事我了然<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>宣纸上走笔至此搁一半<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--水平线标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--换行标签--&gt;</span></span><br><span class="line">青花瓷-周杰伦<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">作词 方文山 作曲 周杰伦<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">素胚勾勒出青花笔锋浓转淡<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">瓶身描绘的牡丹一如你初妆<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">冉冉檀香透过窗心事我了然<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">宣纸上走笔至此搁一半<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--粗体，斜体--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>字体样式标签<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">粗体：<span class="tag">&lt;<span class="name">strong</span>&gt;</span>i love you<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">斜体：<span class="tag">&lt;<span class="name">em</span>&gt;</span>i love you<span class="tag">&lt;/<span class="name">em</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--特殊符号--&gt;</span></span><br><span class="line">空      格 <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">空<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>格 <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="symbol">&amp;gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="symbol">&amp;lt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="symbol">&amp;copy;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>图像标签学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">src: 图片地址（必填，推荐使用相对地址）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">alt：图片名字（必填，图片加载不出时显示）</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resource/image/微信头像.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;微信头像&quot;</span> <span class="attr">title</span>=<span class="string">&quot;悬停文字&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;down&quot;</span>&gt;</span>down<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>链接标签学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--使用name作为锚标志--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;top&quot;</span>&gt;</span>顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--a标签</span></span><br><span class="line"><span class="comment">href:必填，表示要跳转到哪个页面</span></span><br><span class="line"><span class="comment">target: 表示窗口在哪里打开</span></span><br><span class="line"><span class="comment">    _blank 在新标签中打开</span></span><br><span class="line"><span class="comment">    _self 在自己的网页中打开</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;1.我的第一个页面.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>点击我跳转到页面1<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_self&quot;</span>&gt;</span>点击我跳转到百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--锚链接：可以定位到页面指定位置</span></span><br><span class="line"><span class="comment">1.需要一个标记（当前页或其他页都可以）</span></span><br><span class="line"><span class="comment">2.跳转到标记处</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#top&quot;</span>&gt;</span>回到顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--跳转到3.图像标签.html页中的down标记处--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;3.图像标签.html#down&quot;</span>&gt;</span>跳转<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--功能性链接</span></span><br><span class="line"><span class="comment">邮件链接：mailto:</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:342342342@qq.com&quot;</span>&gt;</span>点击联系我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表标签学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--有序列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Linux<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--无序列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Linux<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--自定义列表</span></span><br><span class="line"><span class="comment">dl:标签</span></span><br><span class="line"><span class="comment">dt:列表名称</span></span><br><span class="line"><span class="comment">dd:列表内容</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>学科<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Linux<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>位置<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>长沙<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h4><p><strong>输出如下表格：</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220827123017993.png"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>表格标签学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--表格table</span></span><br><span class="line"><span class="comment">tr: 表格行 table row</span></span><br><span class="line"><span class="comment">td: 表格单元 table data cell</span></span><br><span class="line"><span class="comment">th: 表头 table head</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 第1行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Month<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Savings<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 第2行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>January<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--示例--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 第1行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>学生成绩<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;td&gt;&lt;/td&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;td&gt;&lt;/td&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 第2行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>基础科目<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>80<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 第3行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;td&gt;&lt;/td&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>98<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 第4行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>计算机<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>98<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 第5--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;td&gt;&lt;/td&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>89<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="媒体标签"><a href="#媒体标签" class="headerlink" title="媒体标签"></a>媒体标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--音频和视频</span></span><br><span class="line"><span class="comment">src: 资源路径</span></span><br><span class="line"><span class="comment">controls: 控制条</span></span><br><span class="line"><span class="comment">autoplay: 自动播放</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;../resource/video/1.mp4&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;../resource/video/1.mp4&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h3 id="iframe内联框架"><a href="#iframe内联框架" class="headerlink" title="iframe内联框架"></a>iframe内联框架</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内联框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://www.hao123.com&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;800&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--通过a标签跳转--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hao123&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;800&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.hao123.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;hao123&quot;</span>&gt;</span>点击跳转<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><h4 id="表单的基本元素"><a href="#表单的基本元素" class="headerlink" title="表单的基本元素"></a>表单的基本元素</h4><ol>
<li>text文本框</li>
<li>password密码框</li>
<li>radio单选框</li>
<li>checkbox多选框</li>
<li>下拉框</li>
<li>文本域</li>
<li>文件域</li>
<li>邮件（自带合规验证）</li>
<li>URL（自带合规验证）</li>
<li>数字</li>
<li>滑块</li>
<li>搜索框</li>
<li>按钮</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录注册<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--表单from</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">action: 表单提交的位置，可以是网站，也可以是一个请求处理地址</span></span><br><span class="line"><span class="comment">method: post, get 提交方式 --》 提交name=value键值对</span></span><br><span class="line"><span class="comment">    get方式提交：我们可以在url中看到我们提交的消息</span></span><br><span class="line"><span class="comment">    post方式提交：比较安全，可以传输大文件</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;1.我的第一个网页.html&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- input标签 type , name , value 必备参数</span></span><br><span class="line"><span class="comment">    初级验证：</span></span><br><span class="line"><span class="comment">    1）placeholder 提示信息，用于输入框中</span></span><br><span class="line"><span class="comment">    2）required 非空判断</span></span><br><span class="line"><span class="comment">    3）patten 正则表达式判断，如用于邮箱规范的判断</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    隐藏域：hidden</span></span><br><span class="line"><span class="comment">    只读：readonly</span></span><br><span class="line"><span class="comment">    禁用：disabled</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 1.text文本框 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>名字：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 2.password密码框 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 3.radio单选框 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>性别：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;boy&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;girl&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 4.checkbox多选框 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>课程：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Python&quot;</span> <span class="attr">name</span>=<span class="string">&quot;subject&quot;</span>&gt;</span>Python</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Java&quot;</span> <span class="attr">name</span>=<span class="string">&quot;subject&quot;</span>&gt;</span>Java</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;C&quot;</span> <span class="attr">name</span>=<span class="string">&quot;subject&quot;</span>&gt;</span>C</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;C++&quot;</span> <span class="attr">name</span>=<span class="string">&quot;subject&quot;</span>&gt;</span>C++</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 5.下拉框</span></span><br><span class="line"><span class="comment">    selected 默认选项</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>下拉框</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;月份&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Jan&quot;</span>&gt;</span>1月份<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Feb&quot;</span>&gt;</span>2月份<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Mar&quot;</span> <span class="attr">selected</span>&gt;</span>3月份<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Apr&quot;</span>&gt;</span>4月份<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 6.文本域--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>反馈</span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;50&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span>文本内容<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 7.文件域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;files&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span> <span class="attr">name</span>=<span class="string">&quot;upload&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 8.邮件（自带合规验证） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>邮箱：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 9.URL（自带合规验证） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>URL：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 10.数字 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>商品数量：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;num&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">min</span>=<span class="string">&quot;5&quot;</span> <span class="attr">step</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 11.滑块 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>音量：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">name</span>=<span class="string">&quot;range&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">min</span>=<span class="string">&quot;5&quot;</span> <span class="attr">step</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 12.搜索框 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>搜索：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">name</span>=<span class="string">&quot;search&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 13.按钮</span></span><br><span class="line"><span class="comment">    input type=&quot;button&quot;  普通按钮</span></span><br><span class="line"><span class="comment">    input type=&quot;image&quot;   图像按钮</span></span><br><span class="line"><span class="comment">    input type=&quot;submit&quot;  重置按钮</span></span><br><span class="line"><span class="comment">    input type=&quot;reset&quot;   提交按钮</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;btn1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点击跳转&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../resource/image/微信头像.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>输出结果</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220827144825570.png" alt="image-20220827144825570"></p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HDFS的API操作</title>
    <url>/p/16dc59bd/</url>
    <content><![CDATA[<h3 id="HDFS的API操作"><a href="#HDFS的API操作" class="headerlink" title="HDFS的API操作"></a>HDFS的API操作</h3><p>在 Java 中操作 HDFS, 主要涉及以下 Class</p>
<ol>
<li><code>Configuration</code>：该类的对象封装了客户端或者服务器的配置</li>
<li><code>FileSystem</code>：该类的对象是一个文件系统对象，可以用该对象的一些方法来对文件进行操作, 通过<code>FileSystem</code>的静态方法 <code>get</code> 获得该对象</li>
</ol>
<span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在 Java 中操作 HDFS, 主要涉及以下 Class</span></span><br><span class="line"><span class="comment">1. Configuration：该类的对象封装了客户端或者服务器的配置</span></span><br><span class="line"><span class="comment">2. FileSystem：该类的对象是一个文件系统对象, 可以用该对象的一些方法来对文件进行操作, 通过FileSystem 的静态方法 get 获得该对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.compress.utils.IOUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.net.URISyntaxException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HdfsClientOpt</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HdfsClientOpt</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HdfsClientOpt</span>();</span><br><span class="line">        client.getFileSystem();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//=================================================================//</span></span><br><span class="line">    <span class="comment">// 获取FileSystem</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方式一：set+get</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getFileSystem</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//1.创建一个Configuration实例化对象</span></span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        <span class="comment">//2.设置文件系统类型</span></span><br><span class="line">        configuration.set(<span class="string">&quot;fs.defaultFS&quot;</span>, <span class="string">&quot;hdfs://hadoop10:8020&quot;</span>);</span><br><span class="line">        <span class="comment">//3.获取文件系统</span></span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.get(configuration);</span><br><span class="line">        <span class="comment">//4.打印输出</span></span><br><span class="line">        System.out.println(fileSystem);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方式二：set方式+通过newInstance</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getFileSystem2</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//1:创建Configuration对象</span></span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        <span class="comment">//2:设置文件系统类型</span></span><br><span class="line">        conf.set(<span class="string">&quot;fs.defaultFS&quot;</span>, <span class="string">&quot;hdfs://hadoop10:8020&quot;</span>);</span><br><span class="line">        <span class="comment">//3:获取指定文件系统</span></span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.newInstance(conf);</span><br><span class="line">        <span class="comment">//4:输出测试</span></span><br><span class="line">        System.out.println(fileSystem);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方式三：new URI+get</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getFileSystem3</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop10:8020&quot;</span>), <span class="keyword">new</span> <span class="title class_">Configuration</span>());</span><br><span class="line">        System.out.println(<span class="string">&quot;fileSystem:&quot;</span> + fileSystem);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方式四：newInstance+get</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getFileSystem4</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.newInstance(<span class="keyword">new</span></span><br><span class="line">                <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop10:8020&quot;</span>), <span class="keyword">new</span> <span class="title class_">Configuration</span>());</span><br><span class="line">        System.out.println(<span class="string">&quot;fileSystem:&quot;</span> + fileSystem);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//=================================================================//</span></span><br><span class="line">    <span class="comment">//文件的遍历</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * hdfs文件的遍历</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> URISyntaxException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">listFiles</span><span class="params">()</span> <span class="keyword">throws</span> URISyntaxException, IOException &#123;</span><br><span class="line">        <span class="comment">//1、获取FileSystem实例</span></span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop10:8020&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Configuration</span>());</span><br><span class="line">        <span class="comment">//2、调用方法listFiles 获取 /目录下所有的文件信息</span></span><br><span class="line">        RemoteIterator&lt;LocatedFileStatus&gt; iterator = fileSystem.listFiles(<span class="keyword">new</span></span><br><span class="line">                <span class="title class_">Path</span>(<span class="string">&quot;/&quot;</span>), <span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//3、遍历迭代器</span></span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            <span class="type">LocatedFileStatus</span> <span class="variable">fileStatus</span> <span class="operator">=</span> iterator.next();</span><br><span class="line">            <span class="comment">//获取文件的绝对路径 : hdfs://hadoop10:8020/xxx</span></span><br><span class="line">            System.out.println(fileStatus.getPath() + <span class="string">&quot;======&quot;</span></span><br><span class="line">                    + fileStatus.getPath().getName());</span><br><span class="line">            System.out.println(fileStatus.getPermission());</span><br><span class="line">            System.out.println(fileStatus.getOwner());</span><br><span class="line">            System.out.println(fileStatus.getGroup());</span><br><span class="line">            System.out.println(fileStatus.getLen());</span><br><span class="line">            System.out.println(fileStatus.getModificationTime());</span><br><span class="line">            System.out.println(fileStatus.getReplication());</span><br><span class="line">            System.out.println(fileStatus.getBlockSize());</span><br><span class="line">            System.out.println(fileStatus.getPath().getName());</span><br><span class="line">            <span class="comment">//文件的block信息</span></span><br><span class="line">            BlockLocation[] blockLocations = fileStatus.getBlockLocations();</span><br><span class="line">            <span class="keyword">for</span> (BlockLocation blockLocation : blockLocations) &#123;</span><br><span class="line">                String[] hosts = blockLocation.getHosts();</span><br><span class="line">                System.out.println(<span class="string">&quot;block数量为: &quot;</span> + hosts.length);</span><br><span class="line">                <span class="keyword">for</span> (String host : hosts) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;主机为: &quot;</span> + host);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//=================================================================//</span></span><br><span class="line">    <span class="comment">//创建文件夹</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建文件夹</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> URISyntaxException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mkdirs</span><span class="params">()</span> <span class="keyword">throws</span> URISyntaxException, IOException,</span><br><span class="line">            InterruptedException &#123;</span><br><span class="line">        <span class="comment">//1:获取FileSystem实例</span></span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop10:8020&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Configuration</span>(), <span class="string">&quot;root&quot;</span>);</span><br><span class="line">        <span class="comment">//2:创建文件夹</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">bl</span> <span class="operator">=</span> fileSystem.mkdirs(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/aaa/bbb/ccc&quot;</span>));</span><br><span class="line">        System.out.println(bl);</span><br><span class="line">        <span class="comment">//3: 关闭FileSystem</span></span><br><span class="line">        fileSystem.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//=================================================================//</span></span><br><span class="line">    <span class="comment">//文件的上传</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件的上传</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> URISyntaxException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">uploadFile</span><span class="params">()</span> <span class="keyword">throws</span> URISyntaxException, IOException,</span><br><span class="line">            InterruptedException &#123;</span><br><span class="line">        <span class="comment">//1:获取FileSystem</span></span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop10:8020&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Configuration</span>(), <span class="string">&quot;root&quot;</span>);</span><br><span class="line">        <span class="comment">//2:调用方法，实现上传</span></span><br><span class="line">        fileSystem.copyFromLocalFile(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;D://test1.txt&quot;</span>), <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/&quot;</span>));</span><br><span class="line">        <span class="comment">//3:关闭FileSystem</span></span><br><span class="line">        fileSystem.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//=================================================================//</span></span><br><span class="line">    <span class="comment">//文件的下载</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件的下载方式一：使用copyToLocalFile</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> URISyntaxException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">downloadFile1</span><span class="params">()</span> <span class="keyword">throws</span> URISyntaxException, IOException &#123;</span><br><span class="line">        <span class="comment">//1:获取FileSystem</span></span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop10:8020&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Configuration</span>());</span><br><span class="line">        <span class="comment">//2:调用方法，实现文件的下载</span></span><br><span class="line">        <span class="comment">// boolean delSrc 指是否将原文件删除</span></span><br><span class="line">        <span class="comment">// Path src 指要下载的文件路径</span></span><br><span class="line">        <span class="comment">// Path dst 指将文件下载到的路径</span></span><br><span class="line">        <span class="comment">// boolean useRawLocalFileSystem 是否开启文件校验 就是是否生成windows系统是上</span></span><br><span class="line">        <span class="comment">//面那个crc文件, 设置true，不会有crc文件。设置false在本地会有crc文件。</span></span><br><span class="line">        fileSystem.copyToLocalFile(<span class="literal">false</span>, <span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/bb/cc/test1.txt&quot;</span>), <span class="keyword">new</span></span><br><span class="line">                <span class="title class_">Path</span>(<span class="string">&quot;D://test1_down1.txt&quot;</span>), <span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//3:关闭FileSystem</span></span><br><span class="line">        fileSystem.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件的下载方式二：通过输入输出流</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> URISyntaxException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">downloadFile2</span><span class="params">()</span> <span class="keyword">throws</span> URISyntaxException, IOException &#123;</span><br><span class="line">        <span class="comment">//1:获取FileSystem</span></span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop10:8020&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Configuration</span>());</span><br><span class="line">        <span class="comment">//2:获取hdfs的输入流</span></span><br><span class="line">        <span class="type">FSDataInputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> fileSystem.open(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/test1.txt&quot;</span>));</span><br><span class="line">        <span class="comment">//3:获取本地路径的输出流</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span></span><br><span class="line">                <span class="title class_">FileOutputStream</span>(<span class="string">&quot;D://test1_down2.txt&quot;</span>);</span><br><span class="line">        <span class="comment">//4:文件的拷贝</span></span><br><span class="line">        IOUtils.copy(inputStream, outputStream);</span><br><span class="line">        <span class="comment">//5:关闭流</span></span><br><span class="line">        IOUtils.closeQuietly(inputStream);</span><br><span class="line">        IOUtils.closeQuietly(outputStream);</span><br><span class="line">        fileSystem.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//=================================================================//</span></span><br><span class="line">    <span class="comment">//删除文件或文件夹</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteFileOrDir</span><span class="params">()</span> <span class="keyword">throws</span> URISyntaxException, IOException,</span><br><span class="line">            InterruptedException &#123;</span><br><span class="line">        <span class="comment">//1:获取FileSystem（分布式文件系统）</span></span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop10:8020&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Configuration</span>(),<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        <span class="comment">//2、删除操作</span></span><br><span class="line">        <span class="comment">//boolean b = fileSystem.delete(new Path(&quot;/test_big.txt&quot;));</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> fileSystem.delete(<span class="keyword">new</span> <span class="title class_">Path</span>(<span class="string">&quot;/aa&quot;</span>));</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        <span class="comment">//3、关闭FileSystem</span></span><br><span class="line">        fileSystem.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//=================================================================//</span></span><br><span class="line">    <span class="comment">//文件的合并上传</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 小文件的合并上传</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> URISyntaxException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mergeFile</span><span class="params">()</span> <span class="keyword">throws</span> URISyntaxException, IOException,</span><br><span class="line">            InterruptedException &#123;</span><br><span class="line">        <span class="comment">//1:获取FileSystem（分布式文件系统）</span></span><br><span class="line">        <span class="type">FileSystem</span> <span class="variable">fileSystem</span> <span class="operator">=</span> FileSystem.get(<span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;hdfs://hadoop10:8020&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Configuration</span>(),<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        <span class="comment">//2:获取hdfs大文件的输出流</span></span><br><span class="line">        <span class="type">FSDataOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> fileSystem.create(<span class="keyword">new</span></span><br><span class="line">                <span class="title class_">Path</span>(<span class="string">&quot;/test_big.txt&quot;</span>));</span><br><span class="line">        <span class="comment">//3:获取一个本地文件系统</span></span><br><span class="line">        <span class="type">LocalFileSystem</span> <span class="variable">localFileSystem</span> <span class="operator">=</span> FileSystem.getLocal(<span class="keyword">new</span></span><br><span class="line">                <span class="title class_">Configuration</span>());</span><br><span class="line">        <span class="comment">//4:获取本地文件夹下所有文件的详情</span></span><br><span class="line">        FileStatus[] fileStatuses = localFileSystem.listStatus(<span class="keyword">new</span></span><br><span class="line">                <span class="title class_">Path</span>(<span class="string">&quot;D:\\input&quot;</span>));</span><br><span class="line">        <span class="comment">//5:遍历每个文件，获取每个文件的输入流</span></span><br><span class="line">        <span class="keyword">for</span> (FileStatus fileStatus : fileStatuses) &#123;</span><br><span class="line">            <span class="type">FSDataInputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span></span><br><span class="line">                    localFileSystem.open(fileStatus.getPath());</span><br><span class="line">        <span class="comment">//6:将小文件的数据复制到大文件</span></span><br><span class="line">            IOUtils.copy(inputStream, outputStream);</span><br><span class="line">            IOUtils.closeQuietly(inputStream);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//7:关闭流</span></span><br><span class="line">        IOUtils.closeQuietly(outputStream);</span><br><span class="line">        localFileSystem.close();</span><br><span class="line">        fileSystem.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>Hadoop</tag>
        <tag>HDFS</tag>
        <tag>分布式文件系统</tag>
      </tags>
  </entry>
  <entry>
    <title>HDFS分布式文件系统</title>
    <url>/p/c9904293/</url>
    <content><![CDATA[<p>HDFS采用了主从（Master&#x2F;Slave）结构模型，一个HDFS集群是由一个NameNode和若干个DataNode组成的。</p>
<p>其中，NameNode作为主服务器，管理文件系统的命名空间和客户端对文件的访问操作；集群中的DataNode管理存储的数据。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220417133316685.png"></p>
<span id="more"></span>

<h2 id="HDFS分布式文件系统"><a href="#HDFS分布式文件系统" class="headerlink" title="HDFS分布式文件系统"></a>HDFS分布式文件系统</h2><h3 id="HDFS设计思想"><a href="#HDFS设计思想" class="headerlink" title="HDFS设计思想"></a>HDFS设计思想</h3><h4 id="HDFS核心设计思想：分散存储、冗余备份"><a href="#HDFS核心设计思想：分散存储、冗余备份" class="headerlink" title="HDFS核心设计思想：分散存储、冗余备份"></a>HDFS核心设计思想：分散存储、冗余备份</h4><p>1、如果一个文件中有10个数值（一行一个，并且都是可以用int来度量）， 现在求10个数值的和。</p>
<p>思路：<br>    （1）一行一行读取文件的内容<br>    （2）帮读取到的文本内容转化为Int类型<br>    （3）帮转化之后的值进行累加<br>    （4）输出</p>
<p>2、假如，这样的文件有很大一堆， 并且每个文件都很大，而且每个文件里面的内容都很多。</p>
<p>例如：现在有10000个文件，每个文件2T，文件里面的内容依然是每行一个数值，要求这一堆文件的所有数值的和。</p>
<pre><code>如果说用1的思路来说，最终可能也可以计算出来结果，但是效率比较低，大概率算不来。

一行一行读取文件的内容   串行！！！

改进方案： 串行 --》 并行

分布式计算：
    1、第一个阶段：先将大的任务切分成多个小的任务，然后让集群中的每个节点来对这些小的任务来执行计算
    2、第二个阶段：需要将第一个阶段的中间临时结果进行最终的汇总
</code></pre>
<p>3、又有个问题：该10000个2T的文件应该怎么分布， 才能让这10000个任务的执行效率达到最高？</p>
<p>​	如果集群有10000个节点，这样每个节点上面存放一个文件，然后在对应的节点上面启动对应的计算任务，这样效率最高。</p>
<pre><code>计算在a节点， 数据存在b节点
数据传输   效率问题
</code></pre>
<p><strong>4、数据的处理：存储和计算是怎么设计的？</strong></p>
<p>​	谷歌在设计大数据解决方案的时候，存储和计算两个方案是相互依赖的</p>
<ul>
<li><p><strong>存储：HDFS</strong> </p>
</li>
<li><p><strong>计算：MapReduce</strong></p>
</li>
<li><p><strong>在设计存储的时候，必须要考虑计算的问题</strong></p>
</li>
<li><p><strong>在设计计算的时候，必须要考虑存储的问题</strong></p>
<p>  HDFS的设计思路：<br>  要帮存储到HDFS集群中的数据均匀的分散的存储到整个集群中<br>  举个例子：<br>      100g数据，集群有100个节点，按照1g的大小进行切分存储，每个节点要存储1g的数据量<br><br><br>      100g数据，集群有90个节点，按照1g的大小进行切分存储，其中90台服务器中有10台需要存储2g的数据，其余80台服务器需要存储1g的数据<br>      假设1g的数据需要1秒钟的计算时间，那么整个任务需要 2 秒钟的计算时间<br><br>      100g数据，集群有90个节点，按照512M的大小进行切分存储，其中90台服务器中有20台需要存储1.5g的数据，其余70台服务器需要存储1g的数据<br>      假设1g的数据需要1秒钟的计算时间，那么整个任务需要 1.5 秒钟的计算时间<br><br>      从上面的结果来看，切分的块是不是越小越好<br><br>      但是： 小文件如果多，会有问题<br>          access.log 100g<br>              block0 50g<br>              block1 50g<br><br>          access.log 100g<br>              block0 20g<br>              block1 20g<br>              block2 20g<br>              block3 20g<br>              block4 20g<br>      对于用户来说，一个文件存储进来的时候被HDFS切分了，当用户下载这个大文件的时候，还需要给完整的合并回来。也就是需要给拼装回来，并且拼装的顺序不能错。<br><br>      从上面的结果来看，切分的块是不是越大越好<br><br>      中庸思想<br><br>      不大不小 ： HDFS在设计的时候就考虑到了不同的应用场景中的情况，在不同的场景中，有可能需要的块的大小不一样，可以配置。<br><br>      这个块的大小的配置，可以自行配置<br>      有默认的大小：<br>      Hadoop2.x版本以前，默认的是64M<br>      Hadoop2.x（含）版本以后，默认的是128M<br><br>  到目前为止：<br>      让大数据能够存入到HDFS，并且需要考虑到计算的效率问题，让这个文件进行切分存储，并且需要让这些切分存储的文件块能够比较均匀的分散的存储到集群中。<br><br>  解决存问题:<br>      数据量大，一台集群放不下，使用多态集群存储<br>      一个节点存不下，加节点。<br><br>  HDFS集群，理论上，可以通过无限制的加集群来完成存储。<br>  但是，加到一定的时候是有上限的<br>  1、HDFS集群是主从架构<br>      主从架构也就意味着主节点能够管理的从节点的个数是有上限的。<br>  2、无限制的加集群，能加的机器的可靠性不是特别高。成本和效率<br>      给数据存储到集群中中，有可能会出现数据丢失的情况。</p>
</li>
</ul>
<p><strong>5、HDFS是怎么保障数据的安全的？</strong></p>
<p>HDFS使用了一种最有效也是最笨重的方式：存储多份 </p>
<p>数据节点hadoop1、hadoop2、hadoop3，只要有一个节点存活，数据就安全。</p>
<p><strong>多份数据的存储有原则的：</strong></p>
<ul>
<li>数据的备份的个数由客户端指定的</li>
<li>如果一份数据存储多份，这些多份的数据完全没有必要在一个节点上</li>
</ul>
<p><strong>也就是：</strong></p>
<ul>
<li><p>如果集群有3个数据存储节点，数据指定存储4份，结果HDFS只会存储3份。</p>
</li>
<li><p>HDFS的集群中的任意一个数据节点，肯定没有两份完全一模一样的数据。</p>
</li>
</ul>
<p><strong>6、HDFS核心思想</strong></p>
<p><strong>总结：分散存储、冗余备份</strong></p>
<ul>
<li>大文件被切割成小文件，使用分而治之的思想对同一个文件进行管理</li>
<li>每个切分之后的块都进行冗余存储，高可用不丢失</li>
</ul>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220417133157053.png"></p>
<pre><code>真实文件存储的参考位置： /software/hadoop/data/datanode/current/BP-1075021137-192.168.22.136-1630242976706/current/finalized/subdir0/subdir30 

一个节点能否存一个文件的多个数据块？可以
如果只有3个节点，结果存储的那个文件被切分成了4个块。所以一定有一个数据节点存储了其中的2个数据块。

一个文件存储了多份，只需要关注某个数据块的多个 副本 的分布就可以啦

blk_01: hadoop02 hadoop03 
blk_02: hadoop03 hadoop04
blk_03: hadoop02 hadoop03 
blk_04: hadoop03 hadoop04 

给上面的数据反过来看：

hadoop02： blk_01 blk_03
hadoop03： blk_01 blk_02 blk_03 blk_04
hadoop04： blk_02 blk_04

如果是上面的情况，怎么样保证安全？
只要宕机的节点的数量少于副本冗余的数量，就一定能保证安全。
</code></pre>
<h4 id="HDFS架构"><a href="#HDFS架构" class="headerlink" title="HDFS架构"></a>HDFS架构</h4><p><strong>1、namenode：</strong>掌管文件系统的目录树，处理客户端的请求，保存元数据信息 </p>
<p><strong>2、datanode：</strong>存储实际的数据的，处理真正的读写 </p>
<p><strong>3、secondnamenode：</strong>分担namenode压力的，协助合并元数据信息</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220417133316685.png"></p>
<p><strong>详细补充解释：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、NameNode（nn）：是Master，管理者节点。</span><br><span class="line">（1）管理HDFS的名称空间</span><br><span class="line">（2）配置副本策略</span><br><span class="line">（3）管理数据块（Block）映射信息</span><br><span class="line">（4）处理客户端读写请求</span><br><span class="line">2、DataNode：是Work，NameNode下达命令，DataNode执行实际的操作。</span><br><span class="line">（1）存储实际的数据块</span><br><span class="line">（2）执行数据块的读/写操作</span><br><span class="line">3、Client：是客户端。</span><br><span class="line">（1）文件切分。文件上传HDFS的时候，Client将文件切分成一个一个的Block，然后进行上传</span><br><span class="line">（2）与NameNode交互，获取文件的位置信息</span><br><span class="line">（3）与DataNode交互，读取或者写入数据</span><br><span class="line">（4）Client提供一些命令来管理HDFS，比如NN格式化</span><br><span class="line">（5）Client提供一些命令来访问HDFS，比如对HDFS查询操作</span><br><span class="line">4、Secondary NameNode：不是NameNode的热备。当NameNode挂掉的时候，它并不能马上替换</span><br><span class="line">NameNode并提供服务。</span><br><span class="line">帮助NameNode，分担其工作量，比如定期合并Fsimage和Edits，并返回给NameNode</span><br></pre></td></tr></table></figure>



<h4 id="HDFS使用注意事项"><a href="#HDFS使用注意事项" class="headerlink" title="HDFS使用注意事项"></a>HDFS使用注意事项</h4><p><strong>HDFS不适于以下操作：</strong></p>
<ol>
<li>要求高的数据访问：比如毫秒级</li>
<li>小文件存取：寻道时间超过读取时间</li>
<li>并发写入、文件随机修改：一个文件只能有一个写，仅仅支持append追加</li>
<li>不适合存储小文件：存储一个1亿个小文件，大小仅仅1t，但是消耗掉20g左右的内存</li>
</ol>
<h3 id="HDFS三大机制"><a href="#HDFS三大机制" class="headerlink" title="HDFS三大机制"></a>HDFS三大机制</h3><h4 id="心跳机制"><a href="#心跳机制" class="headerlink" title="心跳机制"></a>心跳机制</h4><p><strong>HDFS的心跳：</strong></p>
<p>集群分布式、跨网络。 跨网络有数据延迟和丢失问题。</p>
<p>datanode每间隔一段时间就会跟namenode去联系一次，证明自己还活着，让namenode能够识别到当前的集群还有多少个datanode存活。</p>
<p>每次间隔一个固定的时长，datanode都会发送一个心跳数据给namenode，如果过了很长一段时间namenode没有接受到datanode的心跳数据包，那么namenode就要有一个标准来判断datanode是否真的宕机掉。</p>
<p><strong>作用：</strong></p>
<ol>
<li>让namenode能够识别到datanode的存活状态</li>
<li>心跳数据包</li>
</ol>
<p>​	（1）从节点的自身状态：磁盘使用量、块的数量、块的状态</p>
<p>​	（2）这个从节点所保存的所有的块的信息：file1.txt   blk_001  blk_002</p>
<p>​		每一个从节点上线之后，会帮自身所持有的的数据块通过心跳汇报给namenode，当namenode接收到所有的datanode的汇报信息之后，就能统计出来，哪些文件的哪些数据块的多个副本的分布情况。<br>​		blk_001： hadoop01 hadoop02<br>​		blk_002： hadoop02 hadoop03 </p>
<p><strong>HDFS启动流程：</strong></p>
<ol>
<li>先启动namenode进程</li>
<li>加载namenode文件夹当中存储的磁盘元数据信息（fsimage  edits ）</li>
<li>namenode在启动完毕之后，会在namenode节点启动一个服务，等待所有的datanode上线 并汇报他们的数据块的内容</li>
<li>datanode一旦上线，就会通过心跳机制帮自身所持有的block块信息全部汇报给namenode</li>
<li>只有当namenode等到了所有的datanode的上线，并且帮所有的块信息都汇报完毕之后，最后namenode才能够得知，整个集群的所有的文件的数据块的副本都存储。</li>
</ol>
<p><strong>元数据：</strong></p>
<ol>
<li>目录树结构</li>
<li>每个文件的数据块的存储的节点位置</li>
</ol>
<p><strong>假如hdfs集群非常大，会出现下面情况：</strong></p>
<ol>
<li>元数据信息fsimage文件特别大，加载到内存所需要的时间会变长</li>
<li>datanode节点多，并且每个datanode节点保存的数据块的个数也变多</li>
</ol>
<p>因此，随着hdfs集群的增大，集群启动的时候所消耗的资源也越来越多。</p>
<p><strong>总结：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">心跳：</span><br><span class="line">汇报：是datanode给namenode发信息</span><br><span class="line">命令：是namenode给datanode发信息</span><br><span class="line"></span><br><span class="line">namenode判断datanode是否存活有个标准： 超时标准</span><br><span class="line">timeout = 10 * 心跳时长 + 2 * 检测心跳机制是否正常工作的时间</span><br><span class="line"></span><br><span class="line">心跳时长：dfs.heartbeat.interval 3秒</span><br><span class="line">检测心跳机制是否正常工作的时间：dfs.recheck.interval 5分钟</span><br><span class="line">总数是： 630 秒</span><br></pre></td></tr></table></figure>



<h4 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h4><p>在集群没有完全启动的这个时间段内，客户端可不可以进行上传下载呢？ 不可以。</p>
<p>在正常的启动范围内，HDFS集群会进入安全模式，在安全模式中，hdfs集群不能正常对外提供服务。</p>
<p><strong>Namenode进入安全模式：</strong></p>
<ol>
<li>当hdfs集群中的datanode宕机之后，hdfs后台会启动一些服务，做自我恢复</li>
<li>当丢失的数据块的比例超过 0.1% 的时候会自动的进入安全模式</li>
</ol>
<p><strong>Namenode退出安全模式：</strong></p>
<ol>
<li>找出问题所在 ，进行修复 （比如修复宕机的 datanode）</li>
<li>手动通过命令强行退出（但是并没有真正解决数据丢失问题）</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">安全模式相关命令：</span><br><span class="line">hdfs dfsadmin -safemode get   查看</span><br><span class="line">hdfs dfsadmin -safemode enter 进入</span><br><span class="line">hdfs dfsadmin -safemode leave 离开</span><br><span class="line">hdfs dfsadmin -safemode wait  等待</span><br></pre></td></tr></table></figure>



<h4 id="副本存放策略"><a href="#副本存放策略" class="headerlink" title="副本存放策略"></a>副本存放策略</h4><p>副本存放策略：就是决定一个数据块的多个副本（默认是3个） 到底应该选取哪些服务器的节点进行存储。</p>
<p><strong>存储原则：</strong></p>
<ol>
<li>任意的一个节点上面不要存储两个一样的副本块</li>
<li>如果一个数据块要保存完整的3个副本，至少需要3个数据节点</li>
</ol>
<p><strong>副本存放策略：</strong></p>
<ol>
<li>第一个副本块选取和客户端相同的节点上</li>
<li>第二个副本块选取跟第一个副本的存储节点相邻机架的任意一个节点</li>
<li>第三个副本存储在和第二个副本块所在机架不同的节点上</li>
</ol>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220417143531505.png"></p>
<h3 id="HDFS的读写流程"><a href="#HDFS的读写流程" class="headerlink" title="HDFS的读写流程"></a>HDFS的读写流程</h3><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220425213439330.png"></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220425213332004.png" alt="image-20220425213332004"></p>
<h4 id="NameNode和SecondaryNameNode联合工作流程"><a href="#NameNode和SecondaryNameNode联合工作流程" class="headerlink" title="NameNode和SecondaryNameNode联合工作流程"></a>NameNode和SecondaryNameNode联合工作流程</h4><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220425221317725.png"></p>
<h3 id="HDFS的shell操作"><a href="#HDFS的shell操作" class="headerlink" title="HDFS的shell操作"></a>HDFS的shell操作</h3><h4 id="启动Hadoop集群"><a href="#启动Hadoop集群" class="headerlink" title="启动Hadoop集群"></a>启动Hadoop集群</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sbin/start-dfs.sh</span><br><span class="line">sbin/start-yarn.sh</span><br><span class="line">sbin/start-all.sh</span><br></pre></td></tr></table></figure>



<h4 id="查看-dfs-集群工作状态"><a href="#查看-dfs-集群工作状态" class="headerlink" title="查看 dfs 集群工作状态"></a>查看 dfs 集群工作状态</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hdfs dfsadmin -report</span><br></pre></td></tr></table></figure>



<h4 id="mkdir：创建-x2F-zz文件夹"><a href="#mkdir：创建-x2F-zz文件夹" class="headerlink" title="-mkdir：创建&#x2F;zz文件夹"></a>-mkdir：创建&#x2F;zz文件夹</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -mkdir /zz</span><br></pre></td></tr></table></figure>



<h4 id="appendToFile：追加文件操作"><a href="#appendToFile：追加文件操作" class="headerlink" title="-appendToFile：追加文件操作"></a>-appendToFile：追加文件操作</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -put wordcount.txt /bb/cc</span><br><span class="line">hadoop fs -appendToFile aa.txt /bb/cc/wordcount.txt</span><br></pre></td></tr></table></figure>



<h4 id="moveFromLocal：从本地剪切到HDFS"><a href="#moveFromLocal：从本地剪切到HDFS" class="headerlink" title="-moveFromLocal：从本地剪切到HDFS"></a>-moveFromLocal：从本地剪切到HDFS</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim aa.txt</span><br><span class="line">输入：</span><br><span class="line">aa</span><br><span class="line">具体命令：</span><br><span class="line">hadoop fs -moveFromLocal ./aa.txt /zz</span><br></pre></td></tr></table></figure>



<h4 id="moveToLocal：从-hdfs-剪切到本地"><a href="#moveToLocal：从-hdfs-剪切到本地" class="headerlink" title="-moveToLocal：从 hdfs 剪切到本地"></a>-moveToLocal：从 hdfs 剪切到本地</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：从 hdfs 剪切到本地</span><br><span class="line">示例：hadoop fs - moveToLocal /aa/bb/cc/dd /home/hadoop/a.txt</span><br></pre></td></tr></table></figure>



<h4 id="copyFromLocal：从本地拷贝到HDFS"><a href="#copyFromLocal：从本地拷贝到HDFS" class="headerlink" title="-copyFromLocal：从本地拷贝到HDFS"></a>-copyFromLocal：从本地拷贝到HDFS</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：从本地文件系统中拷贝文件到HDFS路径去</span><br><span class="line">vim bb.txt</span><br><span class="line">bb</span><br><span class="line">hadoop fs -copyFromLocal bb.txt /zz</span><br></pre></td></tr></table></figure>



<h4 id="copyToLocal：从-hdfs-拷贝到本地"><a href="#copyToLocal：从-hdfs-拷贝到本地" class="headerlink" title="-copyToLocal：从 hdfs 拷贝到本地"></a>-copyToLocal：从 hdfs 拷贝到本地</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：从 hdfs 拷贝到本地</span><br><span class="line">示例：hadoop fs -copyToLocal /aaa/jdk.tar.gz</span><br></pre></td></tr></table></figure>



<h4 id="put：等同于copyFromLocal"><a href="#put：等同于copyFromLocal" class="headerlink" title="-put：等同于copyFromLocal"></a>-put：等同于copyFromLocal</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim cc.txt</span><br><span class="line">cc</span><br><span class="line">hadoop fs -put ./cc.txt /zz</span><br></pre></td></tr></table></figure>



<h4 id="get：从hdfs下载文件到本地"><a href="#get：从hdfs下载文件到本地" class="headerlink" title="-get：从hdfs下载文件到本地"></a>-get：从hdfs下载文件到本地</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：等同于copyToLocal，就是从 hdfs 下载文件到本地</span><br><span class="line">示例：hadoop fs -get /aaa/jdk.tar.gz</span><br></pre></td></tr></table></figure>



<h4 id="appendToFile：-追加文件"><a href="#appendToFile：-追加文件" class="headerlink" title="-appendToFile： 追加文件"></a>-appendToFile： 追加文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim dd.txt</span><br><span class="line">dd</span><br><span class="line">[root@hadoop10 data]# hadoop fs -appendToFile dd.txt /zz/bb.txt</span><br></pre></td></tr></table></figure>



<h4 id="ls-显示目录信息"><a href="#ls-显示目录信息" class="headerlink" title="-ls: 显示目录信息"></a>-ls: 显示目录信息</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -ls /zz</span><br></pre></td></tr></table></figure>



<h4 id="cat：显示文件内容"><a href="#cat：显示文件内容" class="headerlink" title="-cat：显示文件内容"></a>-cat：显示文件内容</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -cat /zz/aa.txt</span><br></pre></td></tr></table></figure>



<h4 id="chgrp、-chmod、-chown：修改文件权限"><a href="#chgrp、-chmod、-chown：修改文件权限" class="headerlink" title="-chgrp、-chmod、-chown：修改文件权限"></a>-chgrp、-chmod、-chown：修改文件权限</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -chmod 666 /zz/aa.txt</span><br></pre></td></tr></table></figure>



<h4 id="mkdir：创建路径"><a href="#mkdir：创建路径" class="headerlink" title="-mkdir：创建路径"></a>-mkdir：创建路径</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -mkdir /yy</span><br></pre></td></tr></table></figure>



<h4 id="cp：从HDFS拷贝到HDFS"><a href="#cp：从HDFS拷贝到HDFS" class="headerlink" title="-cp：从HDFS拷贝到HDFS"></a>-cp：从HDFS拷贝到HDFS</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：从HDFS的一个路径拷贝到HDFS的另一个路径</span><br><span class="line">hadoop fs -cp /zz/aa.txt /yy</span><br></pre></td></tr></table></figure>



<h4 id="mv：在HDFS目录中移动文件"><a href="#mv：在HDFS目录中移动文件" class="headerlink" title="-mv：在HDFS目录中移动文件"></a>-mv：在HDFS目录中移动文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -mv /zz/aa.txt /yy</span><br><span class="line">hadoop fs -mv /zz/bb.txt /yy</span><br></pre></td></tr></table></figure>



<h4 id="tail：显示一个文件的末尾1kb的数据"><a href="#tail：显示一个文件的末尾1kb的数据" class="headerlink" title="-tail：显示一个文件的末尾1kb的数据"></a>-tail：显示一个文件的末尾1kb的数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -tail /yy/dd.txt</span><br></pre></td></tr></table></figure>



<h4 id="rm：删除文件或文件夹"><a href="#rm：删除文件或文件夹" class="headerlink" title="-rm：删除文件或文件夹"></a>-rm：删除文件或文件夹</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -rm /zz/dd.txt</span><br></pre></td></tr></table></figure>



<h4 id="rm-r：递归删除目录及目录里面内容"><a href="#rm-r：递归删除目录及目录里面内容" class="headerlink" title="-rm -r：递归删除目录及目录里面内容"></a>-rm -r：递归删除目录及目录里面内容</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -rm -r /zz</span><br></pre></td></tr></table></figure>



<h4 id="du：统计文件夹的大小信息"><a href="#du：统计文件夹的大小信息" class="headerlink" title="-du：统计文件夹的大小信息"></a>-du：统计文件夹的大小信息</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -du -s -h /yy</span><br><span class="line">3 6 /yy</span><br><span class="line">hadoop fs -du -h /zz</span><br><span class="line">3 3 /zz/aa.txt</span><br><span class="line">6 6 /zz/bb.txt</span><br><span class="line"></span><br><span class="line">说明：第一个3表示文件大小；第二个3表示3*1个副本；/yy表示查看的目录</span><br></pre></td></tr></table></figure>



<h4 id="setrep：设置HDFS中文件的副本数量"><a href="#setrep：设置HDFS中文件的副本数量" class="headerlink" title="-setrep：设置HDFS中文件的副本数量"></a>-setrep：设置HDFS中文件的副本数量</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -setrep 5 /yy/aa.txt</span><br><span class="line"></span><br><span class="line">这里设置的副本数只是记录在NameNode的元数据中，是否真的会有这么多副本，还得看DataNode的数量。</span><br><span class="line">目前只有2个datanode节点，最多也就2个副本，只有从节点数的增加到5台时，副本数才能达到5</span><br><span class="line"></span><br><span class="line">页面上拷贝剪切的时候的出错</span><br><span class="line">Couldn&#x27;t move file aa.txt. Forbidden</span><br><span class="line">给文件夹属性也改成777</span><br></pre></td></tr></table></figure>



<h4 id="help：输出这个命令参数手册"><a href="#help：输出这个命令参数手册" class="headerlink" title="-help：输出这个命令参数手册"></a>-help：输出这个命令参数手册</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：输出这个命令参数手册</span><br><span class="line">hadoop fs -help</span><br><span class="line">-ls</span><br><span class="line">功能：显示目录信息</span><br><span class="line">示例： hadoop fs -ls hdfs://hadoop0:9000/</span><br><span class="line">备注：这些参数中，所有的 hdfs 路径都可以简写成 hadoop fs -ls / 等同上条命令的效果</span><br></pre></td></tr></table></figure>



<h4 id="rmdir：删除空目录"><a href="#rmdir：删除空目录" class="headerlink" title="-rmdir：删除空目录"></a>-rmdir：删除空目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：删除空目录</span><br><span class="line">示例：hadoop fs -rmdir /aaa/bbb/ccc</span><br></pre></td></tr></table></figure>



<h4 id="text：以字符形式打印一个文件的内容"><a href="#text：以字符形式打印一个文件的内容" class="headerlink" title="-text：以字符形式打印一个文件的内容"></a>-text：以字符形式打印一个文件的内容</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：以字符形式打印一个文件的内容</span><br><span class="line">示例：hadoop fs -text /weblog/access_log.1</span><br></pre></td></tr></table></figure>



<h4 id="df：统计文件系统的可用空间信息"><a href="#df：统计文件系统的可用空间信息" class="headerlink" title="-df：统计文件系统的可用空间信息"></a>-df：统计文件系统的可用空间信息</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：统计文件系统的可用空间信息</span><br><span class="line">示例：hadoop fs -df -h /</span><br></pre></td></tr></table></figure>



<h4 id="count：统计指定目录下的文件节点数量"><a href="#count：统计指定目录下的文件节点数量" class="headerlink" title="-count：统计指定目录下的文件节点数量"></a>-count：统计指定目录下的文件节点数量</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：统计一个指定目录下的文件节点数量</span><br><span class="line">示例：hadoop fs -count /aaa/</span><br></pre></td></tr></table></figure>



<h4 id="setrep：设置-hdfs-中文件的副本数量"><a href="#setrep：设置-hdfs-中文件的副本数量" class="headerlink" title="-setrep：设置 hdfs 中文件的副本数量"></a>-setrep：设置 hdfs 中文件的副本数量</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：设置 hdfs 中文件的副本数量</span><br><span class="line">示例：hadoop fs -setrep 3 /aaa/jdk.tar.gz</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>Hadoop</tag>
        <tag>HDFS</tag>
        <tag>分布式文件系统</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop简介</title>
    <url>/p/982a2f8b/</url>
    <content><![CDATA[<p><strong>大数据（Big Data）</strong>：指的是传统数据处理应用软件不足以处理（存储和计算）它们的大而复杂的数据集。</p>
<p><strong>主要解决海量数据的存储和海量数据的运算问题。</strong></p>
<span id="more"></span>

<h2 id="Hadoop简介"><a href="#Hadoop简介" class="headerlink" title="Hadoop简介"></a>Hadoop简介</h2><h3 id="Hadoop产生背景"><a href="#Hadoop产生背景" class="headerlink" title="Hadoop产生背景"></a>Hadoop产生背景</h3><p>1、Hadoop 最早起源于Nutch。Nutch的设计目标是构建一个大型的全网搜索引擎，包括网页抓取、索引、查询等功能，但随着抓取网页数量的增加，遇到了严重的可扩展性问题 ——如何解决数十亿网页的存储和索引问题。</p>
<p>2、2003 -2004年谷歌发表的三篇论文为该问题提供了可行的解决方案</p>
<ul>
<li>分布式文件系统 GFS，可用于处理海量网页的存储；<strong>（HDFS）</strong></li>
<li>分布式计算框架 MapReduce，可用于处理海量网页的索引计算问题；<strong>（MapReduce）</strong></li>
<li>分布式数据库 BigTable，每一张表可以存储上 billions 行和 millions 列；<strong>（HBase）</strong></li>
</ul>
<p>3、Nutch的开发人员完成了相应的开源实现HDFS 和 MapReduce，并从Nutch中剥离成为独立项目Hadoop，到 2008 年 1 月，Hadoop 成为Apache 顶级项目，迎来了它的快速发展期。</p>
<h3 id="什么是Hadoop"><a href="#什么是Hadoop" class="headerlink" title="什么是Hadoop"></a>什么是Hadoop</h3><p>1、Hadoop 是 Apache 旗下的一套开源软件平台 。</p>
<p>2、Hadoop 提供的功能：利用服务器集群，根据用户的自定义业务逻辑，对海量数据进行分布式处理存储+运算。</p>
<p><strong>3、Hadoop 的核心组件有：</strong></p>
<ul>
<li><p>Common（基础功能组件）</p>
</li>
<li><p>HDFS（Hadoop Distributed File System 分布式文件系统） </p>
</li>
<li><p>YARN（Yet Another Resources Negotiator 运算资源调度系统） </p>
</li>
<li><p>MapReduce（Map 和 Reduce 分布式运算编程框架）</p>
</li>
</ul>
<p>4、广义上来说，Hadoop 通常是指一个更广泛的概念–Hadoop 生态圈</p>
<p>5、官网介绍：<a href="http://hadoop.apache.org/">http://hadoop.apache.org/</a></p>
<p>6、Hadoop 三大发行版本：Apache、Cloudera、Hortonworks</p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>Java学习笔记-Day4</title>
    <url>/p/cabdc1d2/</url>
    <content><![CDATA[<h2 id="Part5：面向对象编程"><a href="#Part5：面向对象编程" class="headerlink" title="Part5：面向对象编程"></a>Part5：面向对象编程</h2><h3 id="什么是面向对象"><a href="#什么是面向对象" class="headerlink" title="什么是面向对象"></a>什么是面向对象</h3><p>面向对象编程（Object-Oriented Programming, OOP）</p>
<p>面向对象编程的本质就是：<strong>以类的方式组织代码，以对象的方式封装数据。</strong></p>
<p>从现实的角度：先有对象，再有类。对象是具体的事物，类是对对象的抽象。</p>
<p>从代码的角度：先有类，再有对象。类是抽象的模板，对象是类具体的实例。</p>
<span id="more"></span>

<p><strong>类的基本构成：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">修饰符 class 类名&#123; <span class="comment">//类名一般用大写字母开头</span></span><br><span class="line">	<span class="comment">// 属性：静态的属性</span></span><br><span class="line">	修饰符 属性类型 属性名 = 属性值;  </span><br><span class="line"></span><br><span class="line">	<span class="comment">// 方法：动态的行为；构造器（构造方法：与类名相同的方法）默认自动生成</span></span><br><span class="line">	<span class="comment">// 构造器</span></span><br><span class="line">	修饰符 类名()&#123;</span><br><span class="line">	<span class="comment">// 用于类的初始化</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 其他方法</span></span><br><span class="line">	修饰符 返回值类型 方法名()&#123;</span><br><span class="line">	<span class="comment">// 代码块</span></span><br><span class="line">	<span class="keyword">return</span> ...;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="类与对象的创建"><a href="#类与对象的创建" class="headerlink" title="类与对象的创建"></a>类与对象的创建</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 学生类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">// 属性：字段</span></span><br><span class="line">    String name; <span class="comment">//null</span></span><br><span class="line">    <span class="type">int</span> age; <span class="comment">//0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法，通过类名可以直接调用：Student.study()</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">study</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;学习~&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 非静态方法，需先实例化对象，通过对象调用</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     Student student = new Student();</span></span><br><span class="line"><span class="comment">     student.sleep();</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sleep</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;睡觉~&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 一个项目应该只有一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//类是抽象的，需要先实例化</span></span><br><span class="line">        <span class="comment">//类实例化后会返回一个自己的对象！</span></span><br><span class="line">        <span class="comment">//xiaoming对象就是一个Student类的具体实例！</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">xiaoming</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Student</span> <span class="variable">xiaohong</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        xiaoming.name = <span class="string">&quot;小明&quot;</span>;</span><br><span class="line">        xiaoming.age = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(xiaoming.name);</span><br><span class="line">        System.out.println(xiaoming.age);</span><br><span class="line"></span><br><span class="line">        xiaohong.name = <span class="string">&quot;小红&quot;</span>;</span><br><span class="line">        xiaohong.age = <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(xiaohong.name);</span><br><span class="line">        System.out.println(xiaohong.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="方法的定义和调用"><a href="#方法的定义和调用" class="headerlink" title="方法的定义和调用"></a>方法的定义和调用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop.Demo05;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 学生类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">// 属性：字段</span></span><br><span class="line">    String name; <span class="comment">//null</span></span><br><span class="line">    <span class="type">int</span> age; <span class="comment">//0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法，通过类名可以直接调用：Student.study()</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">study</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;学习~&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 非静态方法，需先实例化对象，通过对象调用</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     Student student = new Student();</span></span><br><span class="line"><span class="comment">     student.sleep();</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sleep</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;睡觉~&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zhou.oop.Demo05.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法的定义和调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="comment">// main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> max(<span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">        System.out.println(max);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 静态方法，通过类名可以直接调用：Student.study()</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> Student.study();</span><br><span class="line">        System.out.println(s1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 非静态方法，需先实例化对象，通过对象调用</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> student.study();</span><br><span class="line">        System.out.println(s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    修饰符 返回值类型 方法名(...)&#123;</span></span><br><span class="line"><span class="comment">        // 方法体</span></span><br><span class="line"><span class="comment">        return 返回值;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a&gt;b ? a:b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 抛出异常</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readFile</span><span class="params">(String file)</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法的重载</span></span><br><span class="line"><span class="comment">// 方法名相同，但参数不同</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">max</span> <span class="operator">=</span> max(<span class="number">20</span>, <span class="number">10</span>);</span><br><span class="line">        System.out.println(max);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 比大小</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (num1 &gt; num2) &#123;</span><br><span class="line">            result = num1;</span><br><span class="line">            System.out.println(<span class="string">&quot;num1&gt;num2&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num1 == num2) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;num1==num2&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result = num2;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">max</span><span class="params">(<span class="type">double</span> num1, <span class="type">double</span> num2)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (num1 &gt; num2) &#123;</span><br><span class="line">            result = num1;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num1 == num2) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;num1==num2&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result = num2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可变参数（不定项参数）</span></span><br><span class="line"><span class="comment">// 在方法声明中，在指定参数类型后加一个省略号(...)</span></span><br><span class="line"><span class="comment">// 一个方法中只能有一个可变参数，它必须是方法的最后一个参数。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">            <span class="type">Demo03</span> <span class="variable">demo03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo03</span>();</span><br><span class="line">            demo03.test(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span>...i)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; i.length; j++) &#123;</span><br><span class="line">            System.out.println(i[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">s</span> <span class="operator">=</span> f(<span class="number">4</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;10!=&quot;</span>+s);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> n*f(n-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="构造器详解"><a href="#构造器详解" class="headerlink" title="构造器详解"></a>构造器详解</h3><p>使用new关键字创建对象时，除了分配内存空间外，还会给创建好的对象进行默认的初始化，以及对类中构造器的调用。</p>
<p>类中的构造器也称为构造方法，是在进行创建对象时必须要调用的。并且构造器有以下两个特点：</p>
<ol>
<li>必须和类的名字相同</li>
<li>必须没有返回类型，也不能写void</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop.Demo05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一个类即使什么都不写，也会默认存在一个方法，即构造器</span></span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示定义一个构造器</span></span><br><span class="line">    <span class="comment">//1. 使用new关键字，本质是在调用构造器</span></span><br><span class="line">    <span class="comment">//2. 用来初始化值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 实例化初始值</span></span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&quot;guiyi&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造：一旦定义了有参构造，无参构造就必须显示定义</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// alt+insert快捷键 生成有参构造器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop.Demo05;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只有一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//类是抽象的，需要先实例化</span></span><br><span class="line">        <span class="comment">//类实例化后会返回一个自己的对象！</span></span><br><span class="line">        <span class="comment">//xiaoming对象就是一个Student类的具体实例！</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">xiaoming</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Student</span> <span class="variable">xiaohong</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        xiaoming.name = <span class="string">&quot;小明&quot;</span>;</span><br><span class="line">        xiaoming.age = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(xiaoming.name);</span><br><span class="line">        System.out.println(xiaoming.age);</span><br><span class="line"></span><br><span class="line">        xiaohong.name = <span class="string">&quot;小红&quot;</span>;</span><br><span class="line">        xiaohong.age = <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(xiaohong.name);</span><br><span class="line">        System.out.println(xiaohong.age);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        System.out.println(person.name);</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">zhangfei</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;张飞&quot;</span>,<span class="number">13</span>);</span><br><span class="line">        System.out.println(zhangfei.name);</span><br><span class="line">        System.out.println(zhangfei.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="封装、继承和多态"><a href="#封装、继承和多态" class="headerlink" title="封装、继承和多态"></a>封装、继承和多态</h3><h4 id="封装（数据的隐藏）"><a href="#封装（数据的隐藏）" class="headerlink" title="封装（数据的隐藏）"></a><strong>封装（数据的隐藏）</strong></h4><p>通常，应禁止直接访问一个对象中数据的实际表示，而应通过操作接口来访问，这称为信息隐藏。</p>
<p><strong>封装的好处：</strong></p>
<ol>
<li>提高程序的安全性，保护数据</li>
<li>隐藏代码的实现细节</li>
<li>统一接口</li>
<li>系统可维护性增加了</li>
</ol>
<p><strong>概况一句话就是：属性私有，get&#x2F;set</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop.Demo05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> &#123;</span><br><span class="line">    <span class="comment">// 属性私有</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get/set 快捷键：alt+insert</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过封装，使用set可以帮助判断参数设置的合理性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (age&gt;=<span class="number">0</span> &amp;&amp; age&lt;=<span class="number">120</span>)&#123;</span><br><span class="line">            <span class="built_in">this</span>.age = age;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;年龄错误&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop.Demo05;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只有一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>();</span><br><span class="line">        teacher.setAge(<span class="number">130</span>);</span><br><span class="line">        System.out.println(teacher.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="继承和多态"><a href="#继承和多态" class="headerlink" title="继承和多态"></a>继承和多态</h4><p><strong>继承</strong>是类和类之间的一种关系。除此之外，类和类之间的关系还有依赖、组合、聚合等。</p>
<p>继承关系的两个类，一个为子类（派生类），一个为父类（基类）。子类继承父类，使用关键字<code>extends</code>来表示。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop.Demo05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开放权限从大到小：public &gt; protected &gt; default &gt; private</span></span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> age;  <span class="comment">// 继承树中的类可以使用</span></span><br><span class="line">    <span class="type">char</span> sex;  <span class="comment">// default</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">1000_000_000</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="variable">height</span> <span class="operator">=</span> <span class="number">1.7</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Person无参构造执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMoney</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMoney</span><span class="params">(<span class="type">int</span> money)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.money = money;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop.Demo05;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ctrl + H 查看继承树</span></span><br><span class="line"><span class="comment">// object类是所有类共同的祖先</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">height</span> <span class="operator">=</span> <span class="number">1.9</span>;</span><br><span class="line">    <span class="keyword">private</span> String subject;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 隐藏代码：调用了父类的无参构造</span></span><br><span class="line">        <span class="comment">// this()和super()不能同时调用，因为他们都要放在构造器里第一行！</span></span><br><span class="line">        <span class="built_in">super</span>(); <span class="comment">// 调用父类的构造器，必须放在子类构造器的第一行</span></span><br><span class="line">        <span class="comment">//this(&quot;语文&quot;); // 调用自己的有参构造</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Teacher无参构造执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">(String subject)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.subject = subject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">teach</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;教你学java~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 比较this、super</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">double</span> height)</span>&#123;</span><br><span class="line">        System.out.println(height);  <span class="comment">// 方法传递过来的参数</span></span><br><span class="line">        System.out.println(<span class="built_in">this</span>.height);  <span class="comment">// 当前类下的height属性：1.9</span></span><br><span class="line">        System.out.println(<span class="built_in">super</span>.height); <span class="comment">// 父类中的height属性：1.7</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop.Demo05;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只有一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>();</span><br><span class="line">        teacher.name = <span class="string">&quot;zhou&quot;</span>;</span><br><span class="line">        teacher.age = <span class="number">20</span>;</span><br><span class="line">        teacher.sex = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="comment">// teacher.money; // 报错，私有属性无法被继承！！</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过方法调用父类中的私有属性</span></span><br><span class="line">        System.out.println(teacher.getMoney());</span><br><span class="line"></span><br><span class="line">        teacher.test(<span class="number">1.5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出内容：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Person无参构造执行了</span></span><br><span class="line"><span class="comment">Teacher无参构造执行了</span></span><br><span class="line"><span class="comment">1000000000</span></span><br><span class="line"><span class="comment">1.5</span></span><br><span class="line"><span class="comment">1.9</span></span><br><span class="line"><span class="comment">1.7</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>super注意点：</strong></p>
<ol>
<li><code>super()</code>调用父类的构造方法，必须在子类构造方法中的第一行，且不能和<code>this()</code>同时调用</li>
<li><code>super.方法</code>或<code>super.属性</code>必须只能出现在子类的方法或构造方法中</li>
</ol>
<h4 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h4><p>Java的方法调用总是作用于运行期对象的实际类型，这种行为称为<strong>多态</strong>。</p>
<p>一个对象的实际类型是确定的，但可以指向对象的引用类型有很多（父类，有关系的类）。</p>
<p><strong>多态存在的条件</strong></p>
<ol>
<li>有继承关系</li>
<li>子类重写父类的方法</li>
<li>父类引用指向子类对象</li>
</ol>
<p>注意：多态是方法的多态，属性没有多态性</p>
<p><strong>方法的重写</strong></p>
<p>重写都是方法的重写，跟属性无关！</p>
<p>重写需要有继承关系，子类重写父类的方法！</p>
<ol>
<li>方法名必须相同</li>
<li>参数列表必须相同</li>
<li>修饰符：范围可以扩大但不能缩小（<code>private</code>和<code>final</code>无法被重写）： <code>public &gt; Protected &gt; Default &gt; private</code></li>
<li>抛出的异常：范围可以被缩小，但不能扩大：<code>ClassNotFoundException(小) --&gt; Exception(大)</code></li>
</ol>
<p>为什么需要重写：</p>
<ol>
<li>父类的功能，子类不一定需要，或者不一定满足</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop.Demo05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;B=&gt;test()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop.Demo05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @Override 重写</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     注意：</span></span><br><span class="line"><span class="comment">     1. 只能重写不带static关键字的非静态方法</span></span><br><span class="line"><span class="comment">     因为static静态方法是类的方法，可通过类名直接调用，而不需要通过对象调用</span></span><br><span class="line"><span class="comment">     2. 重写的方法关键字不能为</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A=&gt;test()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop.Demo05;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只有一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 父类的引用指向了子类</span></span><br><span class="line">        <span class="comment">// 方法的调用只和左边（即定义的数据类型）有关</span></span><br><span class="line">        <span class="comment">// Java的方法调用总是作用于运行期对象的实际类型，这种行为称为多态</span></span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;static静态方法无法被重写&quot;</span>);</span><br><span class="line">        a.test1();</span><br><span class="line">        b.test1();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 父类的方法被子类重写，执行子类的方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;父类方法被子类重写后：&quot;</span>);</span><br><span class="line">        a.test2();</span><br><span class="line">        b.test2();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出结果：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">static静态方法无法被重写</span></span><br><span class="line"><span class="comment">A=&gt;test()</span></span><br><span class="line"><span class="comment">B=&gt;test()</span></span><br><span class="line"><span class="comment">父类方法被子类重写后：</span></span><br><span class="line"><span class="comment">A=&gt;test()</span></span><br><span class="line"><span class="comment">A=&gt;test()</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>



<h3 id="抽象类和接口"><a href="#抽象类和接口" class="headerlink" title="抽象类和接口"></a>抽象类和接口</h3><h4 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a><strong>抽象类</strong></h4><p><code>abstract</code>修饰符可以用来修饰方法，也可以修饰类，如果修饰方法，那么该方法就是抽象方法；如果修饰类，那么该类就是抽象类。</p>
<p>抽象类中可以没有抽象方法，但抽象方法的类一定要声明为抽象类。</p>
<p>抽象类，不能使用new关键字来创建对象，它是用来让子类继承的。</p>
<p>抽象方法，只有方法的声明，没有方法的实现，它是用来让子类实现的。</p>
<p>子类继承抽象类，那么就必须要实现抽象类没有实现的抽象方法，否则该子类也要声明为抽象类。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop;</span><br><span class="line"></span><br><span class="line"><span class="comment">// abstract 抽象类：类 extend:单继承   （接口可以多继承）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Demo06</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">doSomething</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="接口"><a href="#接口" class="headerlink" title="接口"></a><strong>接口</strong></h4><p><strong>普通类</strong>：只有具体实现</p>
<p><strong>抽象类</strong>：具体实现和规范（抽象方法）都有！</p>
<p><strong>接口</strong>：只有规范！</p>
<p>接口就是规范，定义的是一组规则。</p>
<p>声明类的关键字是<code>class</code>，声明接口的关键字是<code>interface</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.oop.demo07;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 接口中的所有定义的方法其实都是抽象的 public abstract</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(String name)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(String name)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(String name)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">query</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="Part6：异常处理"><a href="#Part6：异常处理" class="headerlink" title="Part6：异常处理"></a>Part6：异常处理</h2><p>异常包括：抛出异常、捕获异常</p>
<p>异常处理五个关键字：<code>try</code>, <code>catch</code>, <code>finally</code>, <code>throw</code>, <code>throws</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">         <span class="keyword">new</span> <span class="title class_">Demo01</span>().test(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (b==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ArithmeticException</span>(); <span class="comment">// 主动抛出异常，一般在方法中</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// try catch finally</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        int a = 1;</span></span><br><span class="line"><span class="comment">        int b = 0;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        // 假设要捕获多个异常：从小到大！</span></span><br><span class="line"><span class="comment">        // 快捷键：ctrl + alt + t</span></span><br><span class="line"><span class="comment">        try &#123; // try监控区域</span></span><br><span class="line"><span class="comment">            System.out.println(a / b);</span></span><br><span class="line"><span class="comment">        &#125; catch (Error e) &#123; // catch(想要捕获的异常类型) 捕获异常</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;Error&quot;);</span></span><br><span class="line"><span class="comment">        &#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;Exception&quot;);</span></span><br><span class="line"><span class="comment">        &#125; catch (Throwable t) &#123;</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;Throwable&quot;);</span></span><br><span class="line"><span class="comment">        &#125; finally &#123;  // finally可以不要，用于处理善后工作</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;finally&quot;);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>JavaSE</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Java学习笔记-Day3</title>
    <url>/p/54d95471/</url>
    <content><![CDATA[<h2 id="Part4：数组操作"><a href="#Part4：数组操作" class="headerlink" title="Part4：数组操作"></a>Part4：数组操作</h2><h3 id="数组的声明和创建"><a href="#数组的声明和创建" class="headerlink" title="数组的声明和创建"></a>数组的声明和创建</h3><p><strong>数组的四个基本特点</strong></p>
<ol>
<li>其长度是确定的。数组一旦被创建，它的大小就是不可以改变的；</li>
<li>其元素必须是相同类型，不允许出现混合类型；</li>
<li>数组中的元素可以是任何数据类型，包括基本类型和引用类型；</li>
<li>数组变量属引用类型，数组也可以看成是对象，数组中的每个元素相当于该对象的成员变量，数组本身就是对象，Java中对象是在堆中的，因此数组无论保存原始类型还是其他对象类型，<strong>数组对象本身是在堆中的。</strong></li>
</ol>
<span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.arr;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组的声明和创建</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 动态声明，默认值为0</span></span><br><span class="line">        <span class="type">int</span>[] arr1;  <span class="comment">// 声明</span></span><br><span class="line">        arr1 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];  <span class="comment">// 创建</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];  <span class="comment">// 声明和创建一起</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">            arr1[i] = i+<span class="number">1</span>;</span><br><span class="line">            arr2[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 静态声明</span></span><br><span class="line">        <span class="type">int</span>[] arr3 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;arr1[&quot;</span> + <span class="string">&quot;]:&quot;</span> + arr1[i]);</span><br><span class="line"><span class="comment">//            System.out.println(&quot;arr2[&quot; + &quot;]:&quot; + arr2[i]);</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;arr3[&quot; + &quot;]:&quot; + arr3[i]);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="内存分析"><a href="#内存分析" class="headerlink" title="内存分析"></a>内存分析</h3><p>参考博客：<a href="https://blog.csdn.net/qq_44038822/article/details/108918945">https://blog.csdn.net/qq_44038822/article/details/108918945</a></p>
<p>在说堆和栈之前，我们先说一下JVM（虚拟机）内存的划分：</p>
<p>Java程序在运行时都要开辟空间，任何软件在运行时都要在内存中开辟空间，Java虚拟机运行时也是要开辟空间的。JVM运行时在内存中开辟一片内存区域，启动时在自己的内存区域中进行更细致的划分，因为虚拟机中每一片内存处理的方式都不同，所以要单独进行管理。</p>
<p>   <strong>JVM内存的划分有五片：</strong></p>
<ol>
<li>寄存器——寄存命令所在的地址；</li>
<li>本地方法区（栈）——和栈相同但是用于执行本地方法；</li>
<li>方法区——存储类的信息、常量、静态变量、编译后的代码；</li>
<li>栈内存——存储局部变量；</li>
<li>堆内存——存储对象、数组。</li>
</ol>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220510103622755.png"></p>
<p> <strong>比如主函数里的语句<code>int[] arr=new int[3];</code>在内存中是怎么被定义的：</strong></p>
<p>主函数先进栈，在栈中定义一个变量arr，接下来为arr赋值。实体（对象）创建在堆里，在堆里首先通过new关键字开辟一个空间，然后给这个实体分配一个内存地址（内存在存储数据的时候都是通过地址来体现的，地址是一块连续的二进制）。数组都有一个索引，数组这个<strong>实体（对象arr）</strong>在堆内存中产生之后每一个空间都会进行默认的初始化（数组默认为0），不同的类型初始化的值不一样。</p>
<p>在堆和栈里分别创建了变量和实体：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220814123041233.png"></p>
<p>  <strong>那么堆和栈是怎么联系起来的呢?</strong></p>
<p>我们刚刚说过给堆分配了一个地址，把堆的地址赋给arr，arr就通过地址指向了数组。所以arr想操纵数组时，就通过地址，而不是直接把实体都赋给它。这种我们不再叫他基本数据类型，而叫引用数据类型。称为arr引用了堆内存当中的实体。（可以理解为c或c++的指针，Java成长自c++和c++很像，优化了c++）  </p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220814123051117.png"></p>
<h3 id="Arrays类"><a href="#Arrays类" class="headerlink" title="Arrays类"></a>Arrays类</h3><p><strong>数组的工具类：java.util.Arrays</strong></p>
<p>由于数组对象本身没有什么方法可以供我们调用，但API中提供了一个工具类Arrays供我们使用，从而可以对数据对象进行一些基本的操作。</p>
<p>Arrays类中的方法都是static修饰的静态方法，在使用的时候可以直接使用类目进行调用，而“不用”使用对象来调用（注意：是“不用”而不是“不能”）。</p>
<ul>
<li><p><strong>Arrays类具有以下常用功能：</strong></p>
<ul>
<li><p>给数组赋值：通过fill方法；</p>
</li>
<li><p>对数组排序：通过sort方法，默认升序；</p>
</li>
<li><p>比较数组：通过equals方法比较数组中元素值是否相等；</p>
</li>
<li><p>查找数组元素：通过binarySearch方法能对排序号的数组进行二分法查找操作。</p>
</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.arr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Arrays类的使用</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] nums = &#123;<span class="number">10</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;;</span><br><span class="line"></span><br><span class="line">        System.out.println(nums);  <span class="comment">// 打印结果：[I@1b6d3586</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印数组元素 Arrays.toString</span></span><br><span class="line">        System.out.println(Arrays.toString(nums));</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        <span class="comment">// for each 循环，打印数组元素，print不会换行</span></span><br><span class="line">        System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i : nums) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i != nums[nums.length - <span class="number">1</span>]) &#123;</span><br><span class="line">                System.out.print(i + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(i + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 对数组进行排序，升序</span></span><br><span class="line">        Arrays.sort(nums); <span class="comment">//Arrays类只是提供了默认的升序排列，没有提供相应的降序排列方法。</span></span><br><span class="line">        System.out.println(Arrays.toString(nums));</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 降序：先升序再降序</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="type">int</span>[] tmp = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            tmp[i] = nums[n-<span class="number">1</span>-i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Arrays.toString(tmp));</span><br><span class="line">        nums = tmp;</span><br><span class="line">        System.out.println(Arrays.toString(nums));</span><br><span class="line"></span><br><span class="line"><span class="comment">//        Arrays.sort(nums);</span></span><br><span class="line"><span class="comment">//        for (int i=0,j=nums.length-1; i&lt;j; i++,j--)&#123;</span></span><br><span class="line"><span class="comment">//            int tmp = nums[i];</span></span><br><span class="line"><span class="comment">//            nums[i] = nums[j];</span></span><br><span class="line"><span class="comment">//            nums[j] = tmp;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        System.out.println(Arrays.toString(nums));</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h3><p>在矩阵（数组）中，若数值为0的元素数目远远多于非0元素的数目，并且非0元素分布没有规律时，则称该矩阵为稀疏矩阵；与之相反，若非0元素数目占大多数时，则称该矩阵为稠密矩阵。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.arr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 稀疏数组的压缩存储</span></span><br><span class="line"><span class="comment">// 将n*m稀疏数组用N*3的数组存储每个非0元素的地址和值（行、列、值）</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    第0行        n                     m                     非0元素个数</span></span><br><span class="line"><span class="comment">    第1行        第1个非0元素的行号       第1个非0元素的列号       第1个非0元素的值</span></span><br><span class="line"><span class="comment">    第2行        第2个非0元素的行号       第2个非0元素的列号       第2个非0元素的值</span></span><br><span class="line"><span class="comment">    第3行        第3个非0元素的行号       第3个非0元素的列号       第3个非0元素的值</span></span><br><span class="line"><span class="comment">    ...</span></span><br><span class="line"><span class="comment">    第N行        第N个非0元素的行号       第N个非0元素的列号       第N个非0元素的值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] nums = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">        nums[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">1</span>;  <span class="comment">// 第2行第3列，行号和列号从0开始</span></span><br><span class="line">        nums[<span class="number">5</span>][<span class="number">6</span>] = <span class="number">2</span>;</span><br><span class="line">        nums[<span class="number">9</span>][<span class="number">9</span>] = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印稀疏数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            System.out.println(Arrays.toString(nums[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;===============================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 压缩存储稀疏数组</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> nums[<span class="number">0</span>].length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    N++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;N=&quot;</span>+N);</span><br><span class="line">        System.out.println(<span class="string">&quot;===============================&quot;</span>);</span><br><span class="line">        <span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[N+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        N = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    N++;</span><br><span class="line">                    arr[N][<span class="number">0</span>] = i;</span><br><span class="line">                    arr[N][<span class="number">1</span>] = j;</span><br><span class="line">                    arr[N][<span class="number">2</span>] = nums[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[<span class="number">0</span>][<span class="number">0</span>] = n;</span><br><span class="line">        arr[<span class="number">0</span>][<span class="number">1</span>] = m;</span><br><span class="line">        arr[<span class="number">0</span>][<span class="number">2</span>] = N;</span><br><span class="line">        <span class="comment">// 打印</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; N+<span class="number">1</span>; i++) &#123;</span><br><span class="line">            System.out.println(Arrays.toString(arr[i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>JavaSE</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Java学习笔记-Day2</title>
    <url>/p/23de64e7/</url>
    <content><![CDATA[<h2 id="Part3：Java流程控制"><a href="#Part3：Java流程控制" class="headerlink" title="Part3：Java流程控制"></a>Part3：Java流程控制</h2><h3 id="Scanner对象"><a href="#Scanner对象" class="headerlink" title="Scanner对象"></a>Scanner对象</h3><ul>
<li><p><strong>next()：</strong></p>
<ul>
<li>一定要读取到有效字符后才可以结束输入；</li>
<li>对输入有效字符之前遇到的空白，next()方法会自动将其去掉；</li>
<li>只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符；</li>
<li>next()不能得到带有空格的字符串。</li>
</ul>
</li>
<li><p><strong>nextLine():</strong></p>
<ul>
<li>以Enter为结束符，也就是说nextLine()方法返回的是输入回车之前的所有字符；</li>
<li>可以获得空白。</li>
</ul>
<span id="more"></span></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.process;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Scanner对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建一个扫描对象，用于接收键盘数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);   <span class="comment">// 思考：此处为什么要加 new 关键字？它的作用是什么？</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用nextLine方法接收数据</span></span><br><span class="line">        System.out.println(<span class="string">&quot;遇到换行符后停止接收！&quot;</span>);</span><br><span class="line">        String str1= scanner.nextLine();</span><br><span class="line">        System.out.println(str1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用next方法接收数据</span></span><br><span class="line">        System.out.println(<span class="string">&quot;遇到空格后停止接收！&quot;</span>);</span><br><span class="line">        String str2= scanner.next();</span><br><span class="line">        System.out.println(str2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 凡是属于IO流的类如果不关掉会一直占用资源，要养成习惯关掉</span></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.process;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">// new 关键字：创建一个新的对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scan</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">// 定义一个对象scan，拥有Scanner类中的System.in方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h3><p><strong>if判断</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.process;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">// if条件判断</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入您的年龄：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (age &lt;= <span class="number">18</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;未成年！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (age &lt;= <span class="number">35</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;996ICU&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;退休吧！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>判断引用类型相等</strong></p>
<p>在Java中，判断值类型的变量是否相等，可以使用<code>==</code>运算符。但是，判断引用类型的变量是否相等，<code>==</code>表示“引用是否相等”，或者说，是否指向同一个对象。例如，下面的两个String类型，它们的内容是相同的，但是，分别指向不同的对象，用<code>==</code>判断，结果为<code>false</code>：</p>
<p><strong>要判断引用类型的变量内容是否相等，必须使用<code>equals()</code>方法：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.process;</span><br><span class="line"></span><br><span class="line"><span class="comment">// equals方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;cba&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str3</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (str1.equals(str2))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;str1 == str2&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (str1.equals(str3)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;str1 == str3&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>switch多重选择</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.process;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">// switch多重选择</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">option</span> <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line">        <span class="keyword">switch</span> (option)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;吃饭！&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 判断成功则跳出switch块，不写break的话会按顺序执行每个分支</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;睡觉！&quot;</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;学习！&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;无该选项！&quot;</span>);;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// JDK7的新特性，表达式结果可以是字符串！</span></span><br><span class="line">        <span class="comment">// 字符的本质还是数字</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;休假&quot;</span>;</span><br><span class="line">        <span class="keyword">switch</span> (str)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;上班&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;8点起床！&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;休假&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;10点起床！&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;无该选项！&quot;</span>);;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><p><strong>while循环和do while循环</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.process;</span><br><span class="line"></span><br><span class="line"><span class="comment">// while , do while 循环语句</span></span><br><span class="line"><span class="comment">// 区别：while循环是先判断循环条件，再执行循环。而另一种do while循环则是先执行循环，再判断条件！</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo06</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------while-------------&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (n&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            n++;</span><br><span class="line">            System.out.println(<span class="string">&quot;执行&quot;</span>+n+<span class="string">&quot;次&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------do while-------------&quot;</span>);</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            m++;</span><br><span class="line">            System.out.println(<span class="string">&quot;执行&quot;</span>+m+<span class="string">&quot;次&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">while</span> (m&lt;<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 两者差异对比</span></span><br><span class="line">        System.out.println(<span class="string">&quot;--------------------------------------&quot;</span>);</span><br><span class="line">        n = <span class="number">10</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------while-------------&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (n&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            n++;</span><br><span class="line">            System.out.println(<span class="string">&quot;执行成功&quot;</span>);  <span class="comment">// 不会执行</span></span><br><span class="line">        &#125;;</span><br><span class="line">        m = <span class="number">10</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------do while-------------&quot;</span>);</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            m++;</span><br><span class="line">            System.out.println(<span class="string">&quot;执行成功&quot;</span>);  <span class="comment">// 会执行</span></span><br><span class="line">        &#125;<span class="keyword">while</span> (m&lt;<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>for循环</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.process;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for 循环</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo07</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// for 循环 1+2+3+...+100</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> n=<span class="number">1</span>;n&lt;=<span class="number">100</span>;n++)&#123;</span><br><span class="line">            s1+=n;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(s1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// for each 循环</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span>[] n2 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i:n2)&#123;</span><br><span class="line">            s2+=i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>break和continue</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.process;</span><br><span class="line"></span><br><span class="line"><span class="comment">// break 和 continue</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo08</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;-----------------break---------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> n=<span class="number">0</span>; n&lt;<span class="number">10</span>; n++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (n==<span class="number">5</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;break终止循环&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 终止循环</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;n=&quot;</span>+n);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;-----------------continue---------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> m=<span class="number">0</span>; m&lt;<span class="number">10</span>; m++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (m==<span class="number">5</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;continue跳出本次循环&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>; <span class="comment">// 跳出本次循环</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;m=&quot;</span>+m);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="打印一个三角形"><a href="#打印一个三角形" class="headerlink" title="打印一个三角形"></a>打印一个三角形</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.process;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印一个三角形</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo09</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">5</span>; j &gt;= i; j--) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>; k &lt;= i; k++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">1</span>; m &lt; i; m++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>JavaSE</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Java学习笔记-Day1</title>
    <url>/p/bad7355d/</url>
    <content><![CDATA[<p>学习地址：<a href="https://www.kuangstudy.com/course">https://www.kuangstudy.com/course</a></p>
<h2 id="Part-1：Java入门"><a href="#Part-1：Java入门" class="headerlink" title="Part 1：Java入门"></a>Part 1：Java入门</h2><h3 id="什么是计算机？"><a href="#什么是计算机？" class="headerlink" title="什么是计算机？"></a>什么是计算机？</h3><p>计算机是能够按照程序运行，自动、高速处理海量数据的现代化智能电子设备，由硬件和软件组成。</p>
<ul>
<li><strong>计算机硬件</strong>：CPU、IO设备、内存……</li>
</ul>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220216112111310.png" alt="image-20220216112111310"></p>
<ul>
<li><strong>计算机软件</strong>：可以使计算机按照事先预定好的顺序完成特定的功能，按其功能可划分为<strong>系统软件</strong>与<strong>应用软件</strong>。<ul>
<li>系统软件：DOS（Disk Operating System）、Windows、Linux、Unix、Mac、Android、iOS</li>
<li>应用软件：WPA、QQ、微信、英雄联盟……</li>
</ul>
</li>
</ul>
<span id="more"></span>

<h3 id="windows常用快捷键"><a href="#windows常用快捷键" class="headerlink" title="windows常用快捷键"></a>windows常用快捷键</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 复制	ctrl + C</span><br><span class="line"># 粘贴	ctrl + V</span><br><span class="line"># 剪切	ctrl + X</span><br><span class="line"># 放大镜	win + &#x27;+&#x27;</span><br></pre></td></tr></table></figure>



<h3 id="基本的Dos命令"><a href="#基本的Dos命令" class="headerlink" title="基本的Dos命令"></a>基本的Dos命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 盘符切换 		E:</span><br><span class="line"># 查看当前目录   dir</span><br><span class="line"># 切换目录 		cd /d E:\Java</span><br><span class="line"># 返回到上级目录 cd..</span><br><span class="line"># 清除屏幕  	cls(clear screan)</span><br><span class="line"># 退出终端 		exit</span><br><span class="line"># 查看电脑ip 	ipconfig</span><br><span class="line"># 用于验证与远程计算机的连接 ping www.baidu.com</span><br><span class="line"># 文件操作 </span><br><span class="line"># 创建文件夹    md 目录名</span><br><span class="line"># 删除文件夹    rd 目录名</span><br><span class="line"># 创建文件		cd&gt;文件名</span><br><span class="line"># 删除文件		del&gt;文件名</span><br></pre></td></tr></table></figure>



<h3 id="Java三大版本"><a href="#Java三大版本" class="headerlink" title="Java三大版本"></a>Java三大版本</h3><ul>
<li>JavaSE：标准版（桌面程序、控制台开发……）</li>
<li>JavaME：嵌入式开发（手机、小家电……）</li>
<li>JavaEE：企业级开发（Web端、服务器开发……）</li>
</ul>
<h3 id="JDK、JRE、JVM"><a href="#JDK、JRE、JVM" class="headerlink" title="JDK、JRE、JVM"></a>JDK、JRE、JVM</h3><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220216115920056.png" alt="image-20220216115920056"></p>
<h3 id="Java环境准备"><a href="#Java环境准备" class="headerlink" title="Java环境准备"></a>Java环境准备</h3><ul>
<li>JDK下载安装、添加环境变量（…jdk&#x2F;bin和…jdk&#x2F;jre&#x2F;bin）</li>
</ul>
<p><a href="https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html">https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html</a></p>
<p>​		环境测试：打开cmd，输入：java -version</p>
<ul>
<li>IDEA集成环境安装</li>
</ul>
<p><a href="https://www.jetbrains.com/idea/">https://www.jetbrains.com/idea/</a></p>
<h3 id="Hello-World详解"><a href="#Hello-World详解" class="headerlink" title="Hello World详解"></a>Hello World详解</h3><ul>
<li><strong>cmd执行java程序</strong></li>
</ul>
<ol>
<li>新建一个文件夹，存放代码</li>
<li>新建java文件：Hello.java<strong>（文件名要与类名保持一致！）</strong></li>
<li>编写java程序</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.hello;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 学习摘要：</span></span><br><span class="line"><span class="comment">1. 基本代码块：类&#123;主方法&#125;</span></span><br><span class="line"><span class="comment">2. 主方法快捷键：psvm</span></span><br><span class="line"><span class="comment">3. 打印快捷键：sout</span></span><br><span class="line"><span class="comment">4. Java运行流程：先将java文件编译生成class文件，再执行class文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;  <span class="comment">// 类定义</span></span><br><span class="line">    <span class="comment">// 定义主方法，快捷键psvm</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">// 打印输出：Hello World！</span></span><br><span class="line">        System.out.print(<span class="string">&quot;Hello World!&quot;</span>); <span class="comment">// 不换行打印</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>); <span class="comment">// 换行打印，快捷键sout</span></span><br><span class="line">        System.out.print(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>编译生成class文件：打开cmd（与java文件路径保持一致），输入：javac Hello.java</li>
<li>运行class文件：java Hello</li>
</ol>
<ul>
<li><strong>执行过程</strong></li>
</ul>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220216122418415.png" alt="image-20220216122418415"></p>
<ul>
<li><strong>编译型和解释型语言的区别</strong></li>
</ul>
<p>编译型：高级语言——&gt;编译器——&gt;翻译成可执行文件——&gt;机器执行</p>
<p>解释型：高级语言——&gt;解释器一句一句“翻译”成机器语言来一句一句执行</p>
<p>参考资料：<a href="https://blog.csdn.net/xwx_100/article/details/83212067">https://blog.csdn.net/xwx_100/article/details/83212067</a></p>
<h2 id="Part2：Java基础"><a href="#Part2：Java基础" class="headerlink" title="Part2：Java基础"></a>Part2：Java基础</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.base;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 注释</span></span><br><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这是</span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;好的代码从学会写注释开始！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="标识符和关键字"><a href="#标识符和关键字" class="headerlink" title="标识符和关键字"></a>标识符和关键字</h3><h4 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h4><ol>
<li>所有的标识符都应该以字母（A-Z或a-z）、美元符（$）、下划线（_）开始；</li>
<li>首字符之后可以是字母（A-Z或a-z）、美元符（$）、下划线（_）或数字的任何字符组合；</li>
<li>不能使用关键字作为变量名或方法名；</li>
<li><strong>标识符是大小写敏感的；</strong></li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.base;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 标识符和关键字</span></span><br><span class="line"><span class="comment">// 关键字解释</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. public：一种控制方式，表示共用模式</span></span><br><span class="line"><span class="comment">2. class：用于类的声明</span></span><br><span class="line"><span class="comment">3. static：变量修饰符，全局（静态）变量</span></span><br><span class="line"><span class="comment">4. void：声明当前成员没有返回值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  <span class="comment">// 翻译：共用的全局的没有返回值的主方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        <span class="comment">// 标识符命名规则</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        1. 首字符只能为字母（大小写均可）、下划线&quot;_&quot;、美元符&quot;$&quot;</span></span><br><span class="line"><span class="comment">        2. 首字符外可以为字母（大小写均可）、下划线&quot;_&quot;、美元符&quot;$&quot;、数字</span></span><br><span class="line"><span class="comment">        3. 不能为关键字</span></span><br><span class="line"><span class="comment">        4. 大小写敏感</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">Name</span> <span class="operator">=</span> <span class="string">&quot;Guiyi&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;guiyi&quot;</span>;</span><br><span class="line">        System.out.println(Name);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h4><ul>
<li><strong>访问控制</strong></li>
</ul>
<table>
<thead>
<tr>
<th>Java关键字</th>
<th>关键字含义</th>
</tr>
</thead>
<tbody><tr>
<td>private</td>
<td>一种访问控制方式：私用模式，访问控制修饰符，可以应用于类、方法或字段（在类中声明的变量）</td>
</tr>
<tr>
<td>protected</td>
<td>一种访问控制方式：保护模式，可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符</td>
</tr>
<tr>
<td>public</td>
<td>一种访问控制方式：共用模式，可以应用于类、方法或字段（在类中声明的变量）的访问控制修饰符。</td>
</tr>
</tbody></table>
<ul>
<li><strong>类、方法和变量修饰符</strong></li>
</ul>
<table>
<thead>
<tr>
<th>Java关键字</th>
<th>关键字含义</th>
</tr>
</thead>
<tbody><tr>
<td>abstract</td>
<td>表明类或者成员方法具有抽象属性，用于修改类或方法</td>
</tr>
<tr>
<td>class</td>
<td>声明一个类，用来声明新的Java类</td>
</tr>
<tr>
<td>extends</td>
<td>表明一个类型是另一个类型的子类型。对于类，可以是另一个类或者抽象类；对于接口，可以是另一个接口</td>
</tr>
<tr>
<td>final</td>
<td>用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变，用来定义常量</td>
</tr>
<tr>
<td>implements</td>
<td>表明一个类实现了给定的接口</td>
</tr>
<tr>
<td>interface</td>
<td>接口</td>
</tr>
<tr>
<td>native</td>
<td>用来声明一个方法是由与计算机相关的语言（如C&#x2F;C++&#x2F;FORTRAN语言）实现的</td>
</tr>
<tr>
<td>new</td>
<td>用来创建新实例对象</td>
</tr>
<tr>
<td>static</td>
<td>表明具有静态属性</td>
</tr>
<tr>
<td>strictfp</td>
<td>用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE 754算术规范</td>
</tr>
<tr>
<td>synchronized</td>
<td>表明一段代码需要同步执行</td>
</tr>
<tr>
<td>transient</td>
<td>声明不用序列化的成员域</td>
</tr>
<tr>
<td>volatile</td>
<td>表明两个或者多个变量必须同步地发生变化</td>
</tr>
</tbody></table>
<ul>
<li><strong>程序控制</strong></li>
</ul>
<table>
<thead>
<tr>
<th>Java关键字</th>
<th>关键字含义</th>
</tr>
</thead>
<tbody><tr>
<td>break</td>
<td>提前跳出一个块</td>
</tr>
<tr>
<td>continue</td>
<td>回到一个块的开始处</td>
</tr>
<tr>
<td>return</td>
<td>从成员方法中返回数据</td>
</tr>
<tr>
<td>do</td>
<td>用在do-while循环结构中</td>
</tr>
<tr>
<td>while</td>
<td>用在循环结构中</td>
</tr>
<tr>
<td>if</td>
<td>条件语句的引导词</td>
</tr>
<tr>
<td>else</td>
<td>用在条件语句中，表明当条件不成立时的分支</td>
</tr>
<tr>
<td>for</td>
<td>一种循环结构的引导词</td>
</tr>
<tr>
<td>instanceof</td>
<td>用来测试一个对象是否是指定类型的实例对象</td>
</tr>
<tr>
<td>switch</td>
<td>分支语句结构的引导词</td>
</tr>
<tr>
<td>case</td>
<td>用在switch语句之中，表示其中的一个分支</td>
</tr>
<tr>
<td>default</td>
<td>默认，例如：用在switch语句中，表明一个默认的分支。Java8 中也作用于声明接口函数的默认实现</td>
</tr>
</tbody></table>
<ul>
<li><strong>错误处理</strong></li>
</ul>
<table>
<thead>
<tr>
<th>Java关键字</th>
<th>关键字含义</th>
</tr>
</thead>
<tbody><tr>
<td>try</td>
<td>尝试一个可能抛出异常的程序块</td>
</tr>
<tr>
<td>catch</td>
<td>用在异常处理中，用来捕捉异常</td>
</tr>
<tr>
<td>throw</td>
<td>抛出一个异常</td>
</tr>
<tr>
<td>throws</td>
<td>声明在当前定义的成员方法中所有需要抛出的异常</td>
</tr>
</tbody></table>
<ul>
<li><strong>包相关</strong></li>
</ul>
<table>
<thead>
<tr>
<th>Java关键字</th>
<th>关键字含义</th>
</tr>
</thead>
<tbody><tr>
<td>import</td>
<td>表明要访问指定的类或包</td>
</tr>
<tr>
<td>package</td>
<td>包</td>
</tr>
</tbody></table>
<ul>
<li><strong>基本类型</strong></li>
</ul>
<table>
<thead>
<tr>
<th>Java关键字</th>
<th>关键字含义</th>
</tr>
</thead>
<tbody><tr>
<td>boolean</td>
<td>基本数据类型之一，声明布尔类型的关键字</td>
</tr>
<tr>
<td>byte</td>
<td>基本数据类型之一，字节类型</td>
</tr>
<tr>
<td>char</td>
<td>基本数据类型之一，字符类型</td>
</tr>
<tr>
<td>double</td>
<td>基本数据类型之一，双精度浮点数类型</td>
</tr>
<tr>
<td>float</td>
<td>基本数据类型之一，单精度浮点数类型</td>
</tr>
<tr>
<td>int</td>
<td>基本数据类型之一，整数类型</td>
</tr>
<tr>
<td>long</td>
<td>基本数据类型之一，长整数类型</td>
</tr>
<tr>
<td>short</td>
<td>基本数据类型之一,短整数类型</td>
</tr>
<tr>
<td>null</td>
<td>空，表示无值，不能将null赋给原始类型（byte、short、int、long、char、float、double、boolean）变量</td>
</tr>
<tr>
<td>TRUE</td>
<td>真，boolean变量的两个合法值中的一个</td>
</tr>
<tr>
<td>FALSE</td>
<td>假，boolean变量的两个合法值之一</td>
</tr>
</tbody></table>
<ul>
<li><strong>变量引用</strong></li>
</ul>
<table>
<thead>
<tr>
<th>Java关键字</th>
<th>关键字含义</th>
</tr>
</thead>
<tbody><tr>
<td>super</td>
<td>表明当前对象的父类型的引用或者父类型的构造方法</td>
</tr>
<tr>
<td>this</td>
<td>指向当前实例对象的引用，用于引用当前实例</td>
</tr>
<tr>
<td>void</td>
<td>声明当前成员方法没有返回值，void可以用作方法的返回类型，以指示该方法不返回值</td>
</tr>
</tbody></table>
<ul>
<li><strong>保留字</strong></li>
</ul>
<table>
<thead>
<tr>
<th>Java关键字</th>
<th>关键字含义</th>
</tr>
</thead>
<tbody><tr>
<td>goto</td>
<td>保留关键字，没有具体含义</td>
</tr>
<tr>
<td>const</td>
<td>保留关键字，没有具体含义，是一个类型修饰符，使用const声明的对象不能更新</td>
</tr>
</tbody></table>
<h3 id="变量和数据类型"><a href="#变量和数据类型" class="headerlink" title="变量和数据类型"></a>变量和数据类型</h3><ul>
<li><p><strong>强类型语言</strong></p>
<p>要求变量的使用严格规定，<strong>所有变量都必须先定义后才能使用</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.base;<span class="comment">// 3. 变量和数据类型</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. Java为强类型语言，所有的变量必须先定义后才能使用；</span></span><br><span class="line"><span class="comment">2. Java数据类型分两大类：基础类型（整型、浮点型、字符型、布尔型）和引用类型（类、接口、数组）；</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 变量的定义：1）声明和初始化同时进行</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">name1</span> <span class="operator">=</span> <span class="string">&quot;Guiyi&quot;</span>;</span><br><span class="line">        <span class="comment">// 变量的定义：2）先声明，后初始化</span></span><br><span class="line">        String name2;</span><br><span class="line">        name2 = <span class="string">&quot;xiaoming&quot;</span>;  <span class="comment">// 必须初始化变量，否则会报错！</span></span><br><span class="line">        System.out.println(name1);</span><br><span class="line">        System.out.println(name2);</span><br><span class="line">        System.out.println(<span class="string">&quot;--------------------------------------------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------八大基础类型-----------------------&quot;</span>);</span><br><span class="line">        <span class="type">byte</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">10</span>;  <span class="comment">//常用</span></span><br><span class="line">        <span class="type">short</span> <span class="variable">num3</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">num4</span> <span class="operator">=</span> <span class="number">10000</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">num5</span> <span class="operator">=</span> <span class="number">1.1f</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">num6</span> <span class="operator">=</span> <span class="number">1.111111</span>;  <span class="comment">//常用</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------强制转化（高转低）----------------------&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> (<span class="type">int</span>)<span class="number">1.1</span> + <span class="number">2</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------自动转化（低转转）----------------------&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">2</span> + <span class="number">5</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        System.out.println(<span class="string">&quot;c1=&quot;</span>+c1);</span><br><span class="line">        System.out.println(<span class="string">&quot;c1=&quot;</span>+(<span class="type">int</span>)c1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Java的数据类型分为两大类</strong></p>
<ol>
<li><strong>基本类型（primitive type）</strong><ul>
<li>整型：byte占1个字节、short占2个字节、int占4个字节、long占8个字节</li>
<li>浮点型：float占4个字节、double占8个字节</li>
<li>字符型：char占2个字节</li>
<li>布尔型：boolean<strong>占1位</strong>，其值只有true和false两个</li>
</ul>
</li>
<li><strong>引用类型（reference type）</strong><ul>
<li>类</li>
<li>接口</li>
<li>数组</li>
</ul>
</li>
</ol>
</li>
<li><p><strong>什么是字节？</strong></p>
</li>
</ul>
<p>在计算机数据存储中，存储数据的基本单位是<strong>字节B(Byte)<strong>，最小单位是</strong>位bit</strong>。</p>
<p>8个bit组成1个Byte(字节)，能够容纳1个英文字符，不过一个汉字需要2个字节的存储空间。</p>
<p><strong>计算机常用的存储单位和换算如下：</strong></p>
<p>8 bit &#x3D; 1 Byte 一字节</p>
<p>1024 B &#x3D; 1 KB （KiloByte） 千字节</p>
<p>1024 KB &#x3D; 1 MB （MegaByte） 兆字节</p>
<p>1024 MB &#x3D; 1 GB （GigaByte） 吉字节</p>
<p>1024 GB &#x3D; 1 TB （TeraByte） 太字节</p>
<p>1024 TB &#x3D; 1 PB （PetaByte） 拍字节</p>
<p>1024 PB &#x3D; 1 EB （ExaByte） 艾字节</p>
<p>1024 EB &#x3D; 1 ZB （ZetaByte） 泽字节</p>
<p>1024 ZB &#x3D; 1 YB （YottaByte） 尧字节</p>
<p>1024 YB &#x3D; 1BB（Brontobyte）珀字节</p>
<p>1024 BB &#x3D; 1 NB （NonaByte） 诺字节</p>
<p>1024 NB &#x3D; 1 DB （DoggaByte）刀字节</p>
<ul>
<li><strong>数据类型拓展</strong></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">// 整数拓展：进制  二进制0b   十进制    八进制0   十六进制0x</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">010</span>; <span class="comment">// 八进制0</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i3</span> <span class="operator">=</span> <span class="number">0x10</span>; <span class="comment">// 十六进制0x    0~9 A~F 16</span></span><br><span class="line">        System.out.println(i);</span><br><span class="line">        System.out.println(i2);</span><br><span class="line">        System.out.println(i3);</span><br><span class="line">        System.out.println(<span class="string">&quot;======================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ==============================================================</span></span><br><span class="line">        <span class="comment">// 浮点数拓展    银行业务怎么表示？</span></span><br><span class="line">        <span class="comment">// BigDecimal   数学工具类</span></span><br><span class="line">        <span class="comment">// ==============================================================</span></span><br><span class="line">        <span class="comment">// float 有限 离散 舍入误差 接近但不等于</span></span><br><span class="line">        <span class="comment">// double</span></span><br><span class="line">        <span class="comment">// 最好完全避免使用浮点数进行比较！！！</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">0.1f</span>; <span class="comment">// 0.1</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">1.0</span>/<span class="number">10</span>; <span class="comment">// 0.1</span></span><br><span class="line">        System.out.println(f==d); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">234235234534534534534f</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">d2</span> <span class="operator">=</span> d1 + <span class="number">1</span>;</span><br><span class="line">        System.out.println(d1 == d2); <span class="comment">// true</span></span><br><span class="line">        System.out.println(<span class="string">&quot;======================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ==============================================================</span></span><br><span class="line">        <span class="comment">// 字符拓展</span></span><br><span class="line">        <span class="comment">// ==============================================================</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="string">&#x27;中&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="type">int</span>)c1); <span class="comment">// 强制转换</span></span><br><span class="line">        System.out.println((<span class="type">int</span>)c2); <span class="comment">// 数据类型的转换需注意内存溢出和精度问题！</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 所有的字符本质还是数字</span></span><br><span class="line">        <span class="comment">// 编码 Unicode 映射表（97 = a, 65 = A）   2字节 0-65536</span></span><br><span class="line">        <span class="comment">// u0000-uFFFF</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="string">&#x27;\u0061&#x27;</span>;</span><br><span class="line">        System.out.println(c3 + <span class="string">&quot;\n&quot;</span> + (<span class="type">int</span>)c3); <span class="comment">// a</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h3><p>Java中基本运算符分为以下七种（<strong>重点掌握前四种</strong>），分别为：</p>
<ul>
<li><strong>算数运算符</strong>：+，-，*，&#x2F;，%（取余数），++（自增），–（自减）</li>
<li><strong>赋值运算符</strong>：&#x3D;</li>
<li><strong>关系运算符</strong>：&gt;,&lt;,&gt;&#x3D;,&lt;&#x3D;,&#x3D;&#x3D;（等于）,!&#x3D;（不等于）,instanceof</li>
<li><strong>逻辑运算符</strong>：&amp;&amp;（逻辑与），||（逻辑或），!（逻辑非）</li>
<li>位运算符：：&amp;，|，^，~，&gt;&gt;，&lt;&lt;，&gt;&gt;&gt;</li>
<li>条件运算符：？：</li>
<li>扩展运算符：+&#x3D;，-&#x3D;，*&#x3D;，&#x2F;&#x3D;</li>
</ul>
<p><strong>Java中运算符优先级排序：</strong></p>
<p>指针最优，单目运算优于双目运算。如正负号。先乘除，后加减。先算术运算，后移位运算，最后位运算。逻辑运算最后计算。</p>
<p>以下运算符按从上到下，优先级从高到低排列，同行为相同优先级，相同优先级需要考虑结合性：</p>
<p>括号：()、[]</p>
<p>正负号：+、-</p>
<p>自增自减，非：++、–、!</p>
<p>乘除，取余：*、&#x2F;、%</p>
<p>加减：+、-</p>
<p>移位运算：&lt;&lt;、&gt;&gt;、&gt;&gt;&gt;</p>
<p>大小关系：&gt;、&gt;&#x3D;、&lt;、&lt;&#x3D;</p>
<p>相等关系：&#x3D;&#x3D;、!&#x3D;</p>
<p>按位与：&amp;</p>
<p>按位异或：^</p>
<p>按位或：|</p>
<p>逻辑与：&amp;&amp;</p>
<p>逻辑或：||</p>
<p>条件运算：?:</p>
<p>赋值运算：&#x3D;、+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、%&#x3D;</p>
<p>位赋值运算：&amp;&#x3D;、|&#x3D;、&lt;&lt;&#x3D;、&gt;&gt;&#x3D;、&gt;&gt;&gt;&#x3D;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhou.base;</span><br><span class="line"><span class="comment">// 运算符逻辑顺序：从高到低</span></span><br><span class="line"><span class="comment">// 指针最优，单目运算优于双目运算。如正负号。先乘除，后加减。先算术运算，后移位运算，最后位运算。逻辑运算最后计算。</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">()</span></span><br><span class="line"><span class="comment">一元运算符  ++  --  ！</span></span><br><span class="line"><span class="comment">算术运算符 先*  /  %  后  +  -</span></span><br><span class="line"><span class="comment">关系运算符    &gt;  &gt;=  &lt;    &lt;=</span></span><br><span class="line"><span class="comment">相等运算符    --    !=    ===    !==</span></span><br><span class="line"><span class="comment">逻辑运算符  先&amp;&amp;    后||</span></span><br><span class="line"><span class="comment">赋值运算符 =</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">// 算数运算符</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(a + b);</span><br><span class="line">        System.out.println(a - b);</span><br><span class="line">        System.out.println(a * b);</span><br><span class="line">        <span class="comment">// 在有可能出现小数点时候进行类型转换</span></span><br><span class="line">        System.out.println((<span class="type">double</span>)a / b);</span><br><span class="line">        System.out.println(a % b);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ++ --</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">d1</span> <span class="operator">=</span> a++;<span class="comment">// a++ ：a = a + 1，但是在这种情况下，先给b赋值，再自增</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">d2</span> <span class="operator">=</span> ++a;<span class="comment">// ++a：a = a + 1，在这种情况下，先自增，再将自增后的结果赋值给b</span></span><br><span class="line">        <span class="comment">//a--,--a可类比于此</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(d1);</span><br><span class="line">        System.out.println(d2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关系运算符</span></span><br><span class="line">        <span class="comment">// 返回的结果：正确、错误，即为布尔值</span></span><br><span class="line">        System.out.println(a &gt; b);</span><br><span class="line">        System.out.println(a &lt; b);</span><br><span class="line">        System.out.println(a == b);</span><br><span class="line">        System.out.println(a != b);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//逻辑运算符</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;b1 &amp;&amp; b2:&quot;</span> + (b1 &amp;&amp; b2));<span class="comment">// 逻辑与运算：两个变量都为真，结果为真</span></span><br><span class="line">        System.out.println(<span class="string">&quot;b1 || b2:&quot;</span> + (b1 || b2));<span class="comment">//逻辑非运算：两个变量有一个为真，结果为真</span></span><br><span class="line">        System.out.println(<span class="string">&quot;!(b1 &amp;&amp; b2):&quot;</span>+ !(b1 &amp;&amp; b2));<span class="comment">//如果是真，则为假，反之亦然</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 位运算符</span></span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		二进制数</span></span><br><span class="line"><span class="comment">		A = 0011 1100</span></span><br><span class="line"><span class="comment">		B = 0000 1101</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">		A&amp;B = 0000 1100 如果对应位都为1，则为1，如果不是则为0</span></span><br><span class="line"><span class="comment">		A|B = 0011 1101 如果对应位都为0，则为0，如果不是则为1</span></span><br><span class="line"><span class="comment">		A^B = 0011 0001 如果对应位相同，则为0，如果不相同则为1</span></span><br><span class="line"><span class="comment">		~B = 1111 0010 如果对应为为1，则为0，如果为0，则为1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">		0000 0010 2</span></span><br><span class="line"><span class="comment">		0001 0000 16  2*2*2*2</span></span><br><span class="line"><span class="comment">		*/</span></span><br><span class="line">        System.out.println(<span class="number">2</span> &lt;&lt; <span class="number">3</span>);   <span class="comment">// &lt;&lt; *2^n , &gt;&gt; /2^n</span></span><br><span class="line">        <span class="comment">// 结果为16，即将2的二进制数向左移3位，如上</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 条件运算符</span></span><br><span class="line">        <span class="comment">// x ? y : z</span></span><br><span class="line">        <span class="comment">//如果x为真，则返回y，否则返回z</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> <span class="number">80</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">type</span> <span class="operator">=</span> score &lt; <span class="number">60</span> ? <span class="string">&quot;不及格&quot;</span> : <span class="string">&quot;及格&quot;</span>;</span><br><span class="line">        System.out.println(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 扩展运算符</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        x += y;<span class="comment">// x = x + y</span></span><br><span class="line">        System.out.println(x);</span><br><span class="line">        x -= y;<span class="comment">// x = x - y;</span></span><br><span class="line">        System.out.println(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="包机制"><a href="#包机制" class="headerlink" title="包机制"></a>包机制</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 包语句的语法格式</span></span><br><span class="line"><span class="keyword">package</span> pkg1[.pkg2[.pkg3...]];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入包</span></span><br><span class="line"><span class="keyword">import</span> package1[.package2...].(classname|*);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一般利用公司域名倒置作为报名：com.zhou.×××</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>JavaSE</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统管理</title>
    <url>/p/6c72ecbc/</url>
    <content><![CDATA[<h2 id="Linux网络管理"><a href="#Linux网络管理" class="headerlink" title="Linux网络管理"></a>Linux网络管理</h2><h3 id="Linux网络管理：IP地址管理"><a href="#Linux网络管理：IP地址管理" class="headerlink" title="Linux网络管理：IP地址管理"></a>Linux网络管理：IP地址管理</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查询IP：ip addr</span><br></pre></td></tr></table></figure>

<p>配置静态IP：</p>
<ol>
<li>先设置vmware中的该centos7系统的网络连接方式为NAT模式</li>
<li>在vmware中，从“编辑” &gt; “虚拟网络编辑器” &gt; “NAT模式” &gt; “NAT设置” </li>
<li>进入到&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts，编辑ifcfg-ens33，如果是centos6的话，文件名则是ifcfg-ethX，X是一个数字，默认是0</li>
<li>使用vi命令编辑ifcfg-ens33文件，增加或者修改这些设置</li>
<li>重启网卡：service network restart</li>
</ol>
<span id="more"></span>

<p>关于网路配置模式的三种（我们使用的NAT）</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220415143926250.png" alt="image-20220415143926250"></p>
<h3 id="Linux网络管理：防火墙管理"><a href="#Linux网络管理：防火墙管理" class="headerlink" title="Linux网络管理：防火墙管理"></a>Linux网络管理：防火墙管理</h3><p>查看防火墙状态：systemctl status firewalld  如果看到avtive(running)就意味着防火墙开启<br>关闭防火墙： systemctl stop firewalld 如果看到inactive(dead)就意味着防火墙关闭了<br>开启防火墙： systemctl start firewalld<br>以上的开启和关闭，都是临时性的。如果重启，则又恢复原样。默认是开启了防火墙的</p>
<p>如果想永久开启或者关闭（跟重启无关）防火墙，则：<br>永久关闭防火墙： systemctl disable firewalld<br>永久开启防火墙： systemctl enable firewalld</p>
<p>当然如果作为专业的运维人员。其实也可以配置防火墙细则，例如一台机器只作为web服务器的话，就只需要开放80端口几口。</p>
<p>如果操作系统是centos6，那么相关命令为：</p>
<table>
<thead>
<tr>
<th><strong>动作</strong></th>
<th><strong>命令</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>查看防火墙状态</strong></td>
<td>service iptables  status</td>
</tr>
<tr>
<td><strong>开启防火墙</strong></td>
<td>service iptables  start</td>
</tr>
<tr>
<td><strong>关闭防火墙</strong></td>
<td>service iptables  stop</td>
</tr>
<tr>
<td><strong>关闭防火墙开机自启</strong></td>
<td>chkconfig iptables  off</td>
</tr>
<tr>
<td><strong>设置防火墙开机自启</strong></td>
<td>chkconfig iptables on</td>
</tr>
</tbody></table>
<h2 id="Linux权限管理"><a href="#Linux权限管理" class="headerlink" title="Linux权限管理"></a>Linux权限管理</h2><h3 id="Linux用户和组：用户和组的概念"><a href="#Linux用户和组：用户和组的概念" class="headerlink" title="Linux用户和组：用户和组的概念"></a>Linux用户和组：用户和组的概念</h3><p>Linux是一个多任务多用户的操作系统，为了保证系统中文件的安全，必须针对不同级别的用户要设置不同的权限。</p>
<p>账户实质上就是一个用户在系统上的标识，系统依据账户来区分每个用户的文件、进程、任务，给每个用户提供特定的工作环境（如用户的工作目录、shell版本、以及X-Windows环境的配置等），使每个用户的工作都能独立不受干扰地进行。</p>
<p>Linux中的账户包括“用户账户”和 “组账户”</p>
<p>在Linux中，用户是能够获取系统资源的权限的集合，组是权限的容器</p>
<p>通过执行ls -l命令能看到的结果：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220415144732569.png" alt="image-20220415144732569"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">anaconda-ks.cfg：表示文件或者目录，具体的文件类型是由该行最前面的那个符号表示</span><br><span class="line">-rw-------：该文件的类型和权限信息</span><br><span class="line">1：链接数，如果是文件则是1， 如果是文件夹则表示该文件夹下的子文件夹个数</span><br><span class="line">第一个root：文件或者目录的所属者</span><br><span class="line">第二个root：所属用户组</span><br><span class="line">1329：文件或者目录的大小，是目录的话一般都是4096</span><br><span class="line">Feb 22 09:46：文件的最后编辑时间</span><br></pre></td></tr></table></figure>



<h3 id="Linux用户和组：用户类型"><a href="#Linux用户和组：用户类型" class="headerlink" title="Linux用户和组：用户类型"></a>Linux用户和组：用户类型</h3><p>Linux中的用户类型分为三类：<br>1、超级管理员root：具有使用系统所有权限的用户,其UID 为0<br>2、系统用户：保障系统运行的用户,一般不提供密码登录系统,其UID为1-1000之间<br>3、普通用户：即一般用户,其使用系统的权限受限,其UID为1000往上</p>
<p>与Linux用户信息相关的文件有两个：分别是 &#x2F;etc&#x2F;passwd(用户) 和 &#x2F;etc&#x2F;shadow(密码)<br>查看文件&#x2F;etc&#x2F;passwd文件的内容，选取第一行：root: x:0:0:root:&#x2F;root:&#x2F;bin&#x2F;bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root：用户名</span><br><span class="line">x：密码占位符，密码保存在shadow文件内</span><br><span class="line">0：用户id，UID</span><br><span class="line">0：组id，GID</span><br><span class="line">root：注释信息</span><br><span class="line">/root：用户家目录/主目录</span><br><span class="line">/bin/bash：用户默认使用shell类型</span><br></pre></td></tr></table></figure>



<h3 id="Linux用户和组：组类型"><a href="#Linux用户和组：组类型" class="headerlink" title="Linux用户和组：组类型"></a>Linux用户和组：组类型</h3><p>Linux中的组类型分为三类：<br>1、系统组：一般加入一些系统用户<br>2、普通用户组：可以加入多个普通用户<br>3、私有组&#x2F;基本组：当创建用户时,如果没有为其指明所属组，则就为其定义一个私有的用户组，起名称与用户名同名，当把其他用户加入到该组中，则其就变成了普通组</p>
<p>与Linux用户组信息相关的文件有两个：分别是 &#x2F;etc&#x2F;group(组) 和 &#x2F;etc&#x2F;gshadow<br>查看文件&#x2F;etc&#x2F;group文件内容，选取一个普通组行： root: x:0:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root：组名</span><br><span class="line">x：组密码占位符</span><br><span class="line">0：组id</span><br><span class="line">“”：其实最后一个“:”后面还有值的</span><br></pre></td></tr></table></figure>



<h3 id="Linux文件权限：权限类别详解"><a href="#Linux文件权限：权限类别详解" class="headerlink" title="Linux文件权限：权限类别详解"></a>Linux文件权限：权限类别详解</h3><table>
<thead>
<tr>
<th></th>
<th><strong>文件</strong></th>
<th><strong>文件夹</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>r</strong></td>
<td>可读取内容</td>
<td>可以ls</td>
</tr>
<tr>
<td><strong>w</strong></td>
<td>可修改文件的内容</td>
<td>可以在其中创建或者删除子节点</td>
</tr>
<tr>
<td><strong>x</strong></td>
<td>能否运行这个文件</td>
<td>能否cd进入这个目录</td>
</tr>
</tbody></table>
<h2 id="Linux进程管理"><a href="#Linux进程管理" class="headerlink" title="Linux进程管理"></a>Linux进程管理</h2><h3 id="Linux进程管理：进程概念"><a href="#Linux进程管理：进程概念" class="headerlink" title="Linux进程管理：进程概念"></a>Linux进程管理：进程概念</h3><p>进程是操作系统中非常重要的一个概念，进程是程序的执行过程，是一个程序在其自身的虚拟地址空间中的一次执行活动，相对于程序，进程是动态的，在linux系统中，它与用户权限相关，程序与进程并没有一一对应，一个程序可能对应多个进程。</p>
<p>• 进程的类型<br>    – 交互进程：由一个Shell启动的进程。交互进程既可在前台运行，也以在后台运行。<br>     – 批处理进程：不与特定的终端相关联，提交到等待队列种顺序执行的进程。<br>     – 守护进程(Daemon)：在Linux在启动时初始化，一直运行于后台的进程。</p>
<p>• 进程的启动方式<br>    – 手工启动<br>    – 调度启动</p>
<h3 id="Linux进程管理：常用命令kill-x2F-pidof-x2F-pkill"><a href="#Linux进程管理：常用命令kill-x2F-pidof-x2F-pkill" class="headerlink" title="Linux进程管理：常用命令kill&#x2F;pidof&#x2F;pkill"></a>Linux进程管理：常用命令kill&#x2F;pidof&#x2F;pkill</h3><p>为什么要杀死进程？<br>– 该进程占用了过多的CPU时间或超出运行时间<br>– 该进程锁住了一个终端，使其他前台进程无法运行<br>– 运行时间过长，但没有预期效果<br>– 产生了过多到屏幕或磁盘文件的输出<br>– 无法正常退出</p>
<p>1、kill pid  直接杀死进程，但不能保证一定能杀死<br>2、kill -9 pid  强制杀死进程<br>3、pidof 命令用于查看某个进程的进程号（例如：pidof mysqld）<br>4、pkill 命令可以按照进程名杀死进程。pkill和killall应用方法差不多，也是直接杀死运行中的程序；如果您想杀掉单个进程，请用kill来杀掉</p>
<h3 id="Linux进程管理：进程切换"><a href="#Linux进程管理：进程切换" class="headerlink" title="Linux进程管理：进程切换"></a>Linux进程管理：进程切换</h3><p>前台进程指的是进程在执行时会将命令行阻塞，直到进程执行完毕；后台进程指的是进程在执行时不会阻塞当前命令行，而是在系统后台执行</p>
<p>1、ctrl + c 终止进程</p>
<p>2、ctrl + z 挂起进程</p>
<p>3、fg命令将进程转换到前台执行</p>
<p>4、bg命令将进程转换到后台执行</p>
<p>5、jobs命令查看任务</p>
<h2 id="Linux中SSH协议"><a href="#Linux中SSH协议" class="headerlink" title="Linux中SSH协议"></a>Linux中SSH协议</h2><h3 id="Linux中SSH协议：介绍"><a href="#Linux中SSH协议：介绍" class="headerlink" title="Linux中SSH协议：介绍"></a>Linux中SSH协议：介绍</h3><p>SSH为Secure Shell（安全外壳协议）的缩写，简单说，SSH只是一种网络协议，用于计算机之间的加密登录，很多ftp、pop和telnet在本质上都是不安全的，因为它们在网络上用明文传送口令和数据，别有用心的人非常容易就可以截获这些口令和数据。而SSH就是专为远程登录会话和其他网络服务提供安全性的协议。</p>
<p>SSH是由客户端和服务端的软件组成的<br>服务端是一个守护进程(sshd)，他在后台运行并响应来自客户端的连接请求。<br>客户端包含ssh程序以及像scp（远程拷贝）、slogin（远程登陆）、sftp（安全文件传输）等其他的应用程序。</p>
<p>首先确保服务器是否安装了ssh服务：<br> [root@mycentos7 ~]# yum list installed | grep openssh-server<br>正常情况下，CentOS7是安装了的。或者你只要能使用SecureCRT、Xshell等工具连接，那都是正常的。</p>
<h3 id="Linux中SSH协议：具体配置"><a href="#Linux中SSH协议：具体配置" class="headerlink" title="Linux中SSH协议：具体配置"></a>Linux中SSH协议：具体配置</h3><p>准备两台虚拟机：A和B，假如A要登陆B，或者安全访问B</p>
<p>1、首先各自生成密钥对，生成过程中，直接三次回车即可。会在当前用户的家目录中生成一个.ssh隐藏文件夹。公钥是id_rsa.pub ，私钥是id_rsa<br>    ssh-keygen 或者 ssh-keygen -t rsa<br>2、将A自己的公钥放置到授权列表文件authorized_keys中<br>    cat id_rsa.pub &gt; authorized_keys<br>3、将得到的authorized_keys发送给B机器对应的文件夹下，就相当于把自己的公钥发给对方<br>    scp -r authorized_keys <a href="mailto:&#x72;&#x6f;&#111;&#x74;&#64;&#49;&#x39;&#x32;&#x2e;&#x31;&#x36;&#x38;&#x2e;&#49;&#50;&#51;&#x2e;&#x31;&#53;&#50;">&#x72;&#x6f;&#111;&#x74;&#64;&#49;&#x39;&#x32;&#x2e;&#x31;&#x36;&#x38;&#x2e;&#49;&#50;&#51;&#x2e;&#x31;&#53;&#50;</a>:$PWD<br>4、这样，A就能访问机器B了<br>5、如果是自己访问自己的时候，也是需要把自己的公钥放在authorized_keys文件中</p>
<h3 id="Linux中SSH协议：原理"><a href="#Linux中SSH协议：原理" class="headerlink" title="Linux中SSH协议：原理"></a>Linux中SSH协议：原理</h3><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220415151926777.png" alt="image-20220415151926777"></p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>大数据</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令</title>
    <url>/p/d0edc1ed/</url>
    <content><![CDATA[<h3 id="Linux命令格式"><a href="#Linux命令格式" class="headerlink" title="Linux命令格式"></a>Linux命令格式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Linux的命令格式：命令 [命令选项]  [命令参数]，例如：ls -l /</span><br><span class="line">注意：三者之间要空格隔开，其中命令选项分为长格式和短格式。</span><br><span class="line">短格式用&#x27;-&#x27;表示，比如：-l，</span><br><span class="line">长格式用&quot;--&quot;表示，比如：--help，</span><br><span class="line">也可以使用组合格式，比如：-a -l  等价于 -la 或者 -al </span><br><span class="line"></span><br><span class="line">Linux的命令提示符：</span><br><span class="line">#：管理员用户</span><br><span class="line">$：普通用户</span><br><span class="line"></span><br><span class="line">Linux以回车键表示命令结束，如果linux命令需要折行输入，那么可以以\表示每行结束</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="Linux常用命令归纳汇总"><a href="#Linux常用命令归纳汇总" class="headerlink" title="Linux常用命令归纳汇总"></a>Linux常用命令归纳汇总</h3><table>
<thead>
<tr>
<th><strong>命令分类</strong></th>
<th><strong>常用命令列表</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>文件管理</strong></td>
<td>mkdir, rmdir,  mv, rm,  cp,  touch, cat, tac,  echo, more, less, head, tail, file, find, rename, ln,  pwd,  scp,  alias</td>
</tr>
<tr>
<td><strong>磁盘管理</strong></td>
<td>ls,  cd, du, df,  mount, unmounts, fdisk</td>
</tr>
<tr>
<td><strong>文档处理</strong></td>
<td>wc,  sort, uniq,  cut, sed,  awk,  grep,  vi, diff</td>
</tr>
<tr>
<td><strong>用户和组</strong></td>
<td>useradd, usermod, passwd, userdel, groupadd, groupdel, chgrp,  id, su, whoami,  groups, exit</td>
</tr>
<tr>
<td><strong>文件传输</strong></td>
<td>get,  put, wget</td>
</tr>
<tr>
<td><strong>网络通信</strong></td>
<td>telnet,  nc, ifconfig,  ping, netstat, ip, host, hostname, ifup, ifdown</td>
</tr>
<tr>
<td><strong>备份压缩</strong></td>
<td>gzip,  bzip2, bunzip2, tar, zip</td>
</tr>
<tr>
<td><strong>系统管理</strong></td>
<td>kill,  last, ps,  top, free, pstree,  reboot, halt, shutdown, sudo, who, w, whereis, which,  whatis</td>
</tr>
<tr>
<td><strong>系统设置</strong></td>
<td>clear,  set, unset, hwclock,  time, date, locale, uname, cal</td>
</tr>
<tr>
<td><strong>其他</strong></td>
<td>history,  nohup,  service, init,  rpm, ssh,  yum</td>
</tr>
</tbody></table>
<h3 id="Linux命令学习方式"><a href="#Linux命令学习方式" class="headerlink" title="Linux命令学习方式"></a>Linux命令学习方式</h3><p>对于不会使用的命令：可以使用man命令来查看它的帮助文档：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">man clear</span><br></pre></td></tr></table></figure>

<p><img src="/p/d0edc1ed/image-20220410163840831.png" alt="image-20220410163840831"></p>
<p><strong>命令学习网站</strong></p>
<ul>
<li><a href="http://man.linuxde.net/">http://man.linuxde.net/</a></li>
<li><a href="http://www.jb51.net/linux/">http://www.jb51.net/linux/</a></li>
<li><a href="https://jaywcjlove.github.io/linux-command/">https://jaywcjlove.github.io/linux-command/</a></li>
</ul>
<h3 id="Linux高频常用命令"><a href="#Linux高频常用命令" class="headerlink" title="Linux高频常用命令"></a>Linux高频常用命令</h3><h4 id="cd：切换工作目录"><a href="#cd：切换工作目录" class="headerlink" title="cd：切换工作目录"></a>cd：切换工作目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd：change directory 切换工作目录</span><br><span class="line"></span><br><span class="line">常使用方式：</span><br><span class="line">cd sourcedir   进入用户主目录</span><br><span class="line">cd ~   进入用户主目录</span><br><span class="line">cd -   返回进入此目录之前所在的目录</span><br><span class="line">cd ..   返回上级目录（若当前目录为&quot;/&quot;，则执行完后还在&quot;/&quot;；&quot;..&quot;为上级目录的意思）</span><br><span class="line">cd ../..  返回上两级目录</span><br></pre></td></tr></table></figure>



<h4 id="pwd：显示当前工作目录"><a href="#pwd：显示当前工作目录" class="headerlink" title="pwd：显示当前工作目录"></a>pwd：显示当前工作目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pwd：print working directory  显示当前工作目录</span><br><span class="line"></span><br><span class="line">常使用方式：</span><br><span class="line">pwd   显示当前工作目录</span><br></pre></td></tr></table></figure>



<h4 id="ls：显示目录内容列表"><a href="#ls：显示目录内容列表" class="headerlink" title="ls：显示目录内容列表"></a>ls：显示目录内容列表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls：list  显示目录内容列表</span><br><span class="line"></span><br><span class="line">使用格式：ls  [选项]...  [目录或文件名]</span><br><span class="line"></span><br><span class="line">常用选项</span><br><span class="line">-l：详细信息显示</span><br><span class="line">-a：显示所有子目录和文件的信息，包括隐藏文件</span><br><span class="line">-A：类似于“-a”，但不显示“.”和“..”目录的信息</span><br><span class="line">-R：递归显示内容</span><br><span class="line">-h：以友好方式显示文件大小(显示大小单位)</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">ls -l  ## 列出文件详细信息， 也可以写作 ll</span><br><span class="line">ls -lah  ## 以友好方式显示包括隐藏文件的详细信息</span><br></pre></td></tr></table></figure>



<h4 id="du：显示每个文件和目录的磁盘使用空间"><a href="#du：显示每个文件和目录的磁盘使用空间" class="headerlink" title="du：显示每个文件和目录的磁盘使用空间"></a>du：显示每个文件和目录的磁盘使用空间</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">du：disk usage：显示每个文件和目录的磁盘使用空间</span><br><span class="line"></span><br><span class="line">使用格式：du  [选项]...  [目录或文件名]</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-a：统计时包括所有的文件，而不仅仅只统计目录（目录和每个目录中每个文件的大小） </span><br><span class="line">-h：以更易读的字节单位（K、M等）显示信息</span><br><span class="line">-s：只统计每个参数所占用空间总的大小（目录大小）</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">du -sh  ## </span><br><span class="line">du -ah  ##</span><br></pre></td></tr></table></figure>



<h4 id="df：显示磁盘相关信息"><a href="#df：显示磁盘相关信息" class="headerlink" title="df：显示磁盘相关信息"></a>df：显示磁盘相关信息</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df：disk free：显示磁盘相关信息</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-h：以更易读的字节单位（K、M等）显示信息</span><br><span class="line">-T：显示分区格式</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">df -h    ## 显示磁盘信息，以友好方式</span><br><span class="line">df -T -h   ## 以友好格式显示磁盘信息，并且附加磁盘格式</span><br></pre></td></tr></table></figure>



<h4 id="touch：创建空文件，或更新文件时间标记"><a href="#touch：创建空文件，或更新文件时间标记" class="headerlink" title="touch：创建空文件，或更新文件时间标记"></a>touch：创建空文件，或更新文件时间标记</h4><h4 id="file：查看文件类型"><a href="#file：查看文件类型" class="headerlink" title="file：查看文件类型"></a>file：查看文件类型</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">touch：创建空文件，或更新文件时间标记</span><br><span class="line"></span><br><span class="line">使用格式：</span><br><span class="line">touch  文件名</span><br><span class="line"></span><br><span class="line">file：查看文件类型</span><br><span class="line"></span><br><span class="line">使用格式：</span><br><span class="line">file  文件名  根据文件内容格式判断文件类型。而不是根据后缀名</span><br></pre></td></tr></table></figure>



<h4 id="mkdir：创建文件夹"><a href="#mkdir：创建文件夹" class="headerlink" title="mkdir：创建文件夹"></a>mkdir：创建文件夹</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir：make directory 创建文件夹 </span><br><span class="line"></span><br><span class="line">使用格式：mkdir  [选项]  [参数]</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-p：已级联的方式创建文件夹</span><br><span class="line">例子：mkdir -p /root/a/b/c/d 		## 上级目录不存在自动创建上一级目录，常用</span><br></pre></td></tr></table></figure>



<h4 id="cp：复制文件"><a href="#cp：复制文件" class="headerlink" title="cp：复制文件"></a>cp：复制文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp：copy 复制文件</span><br><span class="line"></span><br><span class="line">使用格式：</span><br><span class="line">cp  [选项]  源文件或目录…  目标文件或目录</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-r：递归复制整个目录树</span><br><span class="line">-p：保持源文件的属性不变</span><br><span class="line">-f：强制覆盖目标同名文件或目录</span><br><span class="line">-i：需要覆盖文件或目录时进行提醒</span><br></pre></td></tr></table></figure>



<h4 id="rm：删除文件或目录"><a href="#rm：删除文件或目录" class="headerlink" title="rm：删除文件或目录"></a>rm：删除文件或目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm：remove 删除文件或目录</span><br><span class="line"></span><br><span class="line">使用格式：rm  [选项]  文件或目录</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-f：强行删除文件或目录，不进行提醒</span><br><span class="line">-i：删除文件或目录时提醒用户确认</span><br><span class="line">-r：递归删除整个目录树</span><br><span class="line"></span><br><span class="line">例子：rm -rf /root/ma/ 		## 不提醒递归删除整个目录，慎用慎用慎用</span><br></pre></td></tr></table></figure>



<h4 id="mv：移动文件"><a href="#mv：移动文件" class="headerlink" title="mv：移动文件"></a>mv：移动文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv：move 移动文件  如果与源文件位置一样，则相当于重命名</span><br><span class="line"></span><br><span class="line">使用格式：</span><br><span class="line">mv  [选项]...  源文件或目录…  目标文件或目录</span><br><span class="line">	</span><br><span class="line">常用选项：</span><br><span class="line">-f：若目标文件或目录与现有的文件或目录重复，则直接覆盖现有的文件或目录</span><br><span class="line">-u：当源文件比目标文件新或者目标文件不存在时，才执行移动操作</span><br></pre></td></tr></table></figure>



<h4 id="rmdir：删除空文件夹"><a href="#rmdir：删除空文件夹" class="headerlink" title="rmdir：删除空文件夹"></a>rmdir：删除空文件夹</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rmdir：remove directory 删除空文件夹</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-p或--parents：删除指定目录后，若该目录的上层目录已变成空目录，则将其一并删除；</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line">rmdir  -p  /root/aa/bb/cc/dd/ee</span><br><span class="line">删除文件夹ee，如果删除ee后，dd变为空，则删除dd，依次类推</span><br></pre></td></tr></table></figure>



<h4 id="cat：连接文件并打印到标准输出"><a href="#cat：连接文件并打印到标准输出" class="headerlink" title="cat：连接文件并打印到标准输出"></a>cat：连接文件并打印到标准输出</h4><h4 id="tac：倒序输出文件内容"><a href="#tac：倒序输出文件内容" class="headerlink" title="tac：倒序输出文件内容"></a>tac：倒序输出文件内容</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat：catenate 连接文件并打印到标准输出</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-n或--number：由1开始对所有输出的行数编号</span><br><span class="line"></span><br><span class="line">tac：倒序输出文件内容</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line">tac /root/abc.txt  倒序输出abc.txt文件中的内容</span><br></pre></td></tr></table></figure>



<h4 id="head：显示指定文件的开头若干行"><a href="#head：显示指定文件的开头若干行" class="headerlink" title="head：显示指定文件的开头若干行"></a>head：显示指定文件的开头若干行</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">head：在屏幕上显示指定文件的开头若干行，默认显示10行</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-n&lt;数字&gt;：指定显示头部内容的行数；</span><br><span class="line">	</span><br><span class="line">例子：</span><br><span class="line">head -n 5 install.log  ## 显示该文件前五行内容</span><br></pre></td></tr></table></figure>



<h4 id="tail：显示指定文件的尾部若干行"><a href="#tail：显示指定文件的尾部若干行" class="headerlink" title="tail：显示指定文件的尾部若干行"></a>tail：显示指定文件的尾部若干行</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail：在屏幕上显示指定文件的末尾若干行</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-f：显示文件最新追加的内容</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">tail file        ## 显示文件file的最后10行</span><br><span class="line">tail +20 file    ## 显示文件file的内容，从第20行至文件末尾</span><br><span class="line">tail -c 10 file    ## 显示文件file的最后10个字符</span><br><span class="line">tail -f install.log  ## 显示最新追加的内容</span><br></pre></td></tr></table></figure>



<h4 id="more：显示文件内容"><a href="#more：显示文件内容" class="headerlink" title="more：显示文件内容"></a>more：显示文件内容</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">more：显示文件内容，每次显示一屏</span><br><span class="line"></span><br><span class="line">使用方式：</span><br><span class="line">按Space键：显示文本的下一屏内容。</span><br><span class="line">按Enter键：只显示文本的下一行内容。</span><br><span class="line">按h键：显示帮助屏，该屏上有相关的帮助信息。</span><br><span class="line">按b键：显示上一屏内容。</span><br></pre></td></tr></table></figure>



<h4 id="less：分屏上下翻页浏览文件内容"><a href="#less：分屏上下翻页浏览文件内容" class="headerlink" title="less：分屏上下翻页浏览文件内容"></a>less：分屏上下翻页浏览文件内容</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">less：分屏上下翻页浏览文件内容</span><br><span class="line"></span><br><span class="line">使用方式：</span><br><span class="line">和more使用方式基本类似</span><br><span class="line">按e键：向上滚动一行</span><br><span class="line">按y键：向下滚动一行</span><br><span class="line">G：跳到文件末尾</span><br><span class="line">gg：跳到文件首行</span><br><span class="line">Space：向后翻一页</span><br><span class="line">b：向前翻一页</span><br></pre></td></tr></table></figure>



<h4 id="echo：输出指定的字符串或者变量"><a href="#echo：输出指定的字符串或者变量" class="headerlink" title="echo：输出指定的字符串或者变量"></a>echo：输出指定的字符串或者变量</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo：输出指定的字符串或者变量</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-e：若字符串中出现以下字符，则特别加以处理，而不会将它当成一般文字输出：</span><br><span class="line">\a 发出警告声；</span><br><span class="line">\b 删除前一个字符；</span><br><span class="line">\c 最后不加上换行符号；</span><br><span class="line">\f 换行但光标仍旧停留在原来的位置；</span><br><span class="line">\n 换行且光标移至行首；</span><br><span class="line">\r 光标移至行首，但不换行；</span><br><span class="line">\t 插入tab；</span><br><span class="line">\v 与\f相同；</span><br><span class="line">\ 插入\字符；</span><br><span class="line">\nnn 插入nnn（八进制）所代表的ASCII字符；</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">例子：</span><br><span class="line">echo &#x27;ma&#x27;          ## 输出ma</span><br><span class="line">echo -e &#x27;ma\n&#x27;       ## 打印ma之后换行</span><br><span class="line">echo -ne &#x27;aa&#x27; &#x27;bb&#x27;     ## 打印完不换行</span><br><span class="line"></span><br><span class="line">echo ‘aa&#x27; &gt; aa.dat      ## 覆盖</span><br><span class="line">echo ‘aa&#x27; &gt;&gt; aa.dat       ## 追加</span><br><span class="line">echo $PWD  	## 输出变量内容</span><br></pre></td></tr></table></figure>



<h4 id="ln：用来为文件创建连接"><a href="#ln：用来为文件创建连接" class="headerlink" title="ln：用来为文件创建连接"></a>ln：用来为文件创建连接</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln：link 用来为文件创件连接   软链接 -s 和 硬链接</span><br><span class="line"></span><br><span class="line">使用案例：</span><br><span class="line">ln /mnt/cdrom1 /var/www/html/centos/     ## 硬链接</span><br><span class="line">ln -s /mnt/cdrom2 /var/www/html/centos/  ## 软链接-符号链接</span><br><span class="line">        实际路径    链接路径</span><br></pre></td></tr></table></figure>



<h4 id="alias：别名"><a href="#alias：别名" class="headerlink" title="alias：别名"></a>alias：别名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alias：别名</span><br><span class="line"></span><br><span class="line">使用案例：</span><br><span class="line">查看别名：alias</span><br><span class="line">定义别名：alias la=&#x27;ll -a&#x27;</span><br><span class="line">取消别名：unalias la</span><br></pre></td></tr></table></figure>



<h3 id="Linux其他常用命令"><a href="#Linux其他常用命令" class="headerlink" title="Linux其他常用命令"></a>Linux其他常用命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">whatis：命令是什么</span><br><span class="line">whereis：在标准路径下搜索与名称相关的文件，whereis将所有搜索到的文件都显示</span><br><span class="line">which：which在设定的搜索路径下进行目录搜索，只显示搜索到的第一个文件</span><br><span class="line">su：切换用户</span><br><span class="line">history：显示历史命令</span><br><span class="line">hostname：显示主机名</span><br><span class="line">set：查看系统变量</span><br><span class="line">get：下载文件</span><br><span class="line">put：上传文件</span><br><span class="line">exit：退出登录状态</span><br><span class="line">w：显示当前连接的用户</span><br><span class="line">who：显示当前会话信息</span><br><span class="line">uptime：查看系统运行时间</span><br></pre></td></tr></table></figure>



<h3 id="Linux常用小技巧总结"><a href="#Linux常用小技巧总结" class="headerlink" title="Linux常用小技巧总结"></a>Linux常用小技巧总结</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">clear：清屏，或者按ctrl + l也行</span><br><span class="line">ctrl + c：退出当前进程</span><br><span class="line">ctrl + z：挂起当前前台进程</span><br><span class="line">ctrl + u：清除光标前的命令，相当于剪切</span><br><span class="line">ctrl + k：清除光标后的命令，相当于剪切</span><br><span class="line">ctrl + y：粘贴</span><br><span class="line">ctrl + t：把光标前面的那个字符往后挪动一位</span><br><span class="line">ctrl + l：清屏</span><br><span class="line">!!：执行上一次命令</span><br><span class="line">!$：上个命令的最后一个单词</span><br><span class="line">ctrl + w：删除光标前一个单词</span><br><span class="line">cd data; cat sed.txt：表示先执行cd，然后执行cat，工作目录会切换</span><br><span class="line">(cd data; cat sed.txt)：跟上个命令相比，不切换工作目录</span><br></pre></td></tr></table></figure>



<h3 id="Linux常用命令：重定向"><a href="#Linux常用命令：重定向" class="headerlink" title="Linux常用命令：重定向"></a>Linux常用命令：重定向</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">管道符，表示把前面命令内容的输出当做后面命令的输入</span><br><span class="line">	|</span><br><span class="line">标准输入、输出</span><br><span class="line">	Stdin Stdout Stderr</span><br><span class="line">输出重定向</span><br><span class="line">、&gt;&gt;</span><br><span class="line">错误输出重定向</span><br><span class="line">2&gt; 、&amp;&gt;、1&gt;</span><br><span class="line">输入重定向</span><br><span class="line">&lt; 、&lt;&lt;!…………! </span><br></pre></td></tr></table></figure>



<h3 id="Linux开机，关机，重启"><a href="#Linux开机，关机，重启" class="headerlink" title="Linux开机，关机，重启"></a>Linux开机，关机，重启</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">开机：开机键</span><br><span class="line">关机：shutdown，halt，init 0，poweroff</span><br><span class="line">重启：reboot，init 6</span><br><span class="line"></span><br><span class="line">shutdown命令详解：</span><br><span class="line">shutdown -h now  		##  立刻关机</span><br><span class="line">shutdown -h +10  		##  10分钟以后关机	</span><br><span class="line">shutdown -h 12:00:00  	##  12点整的时候关机</span><br></pre></td></tr></table></figure>





<h3 id="Linux文本编辑器vim"><a href="#Linux文本编辑器vim" class="headerlink" title="Linux文本编辑器vim"></a>Linux文本编辑器vim</h3><p><img src="/p/d0edc1ed/image-20220415143740795.png" alt="image-20220415143740795"></p>
<p>学会使用vi编辑器是学习Linux系统的必备技术之一，因为一般的Linux服务器是没有GUI界面的，Linux运维及开发人员基本上都是通过命令行的方式进行文本编辑或程序编写的。vi编辑器是Linux内置的文本编辑器，几乎所有的类unix系统中都内置了vi编辑器，而其它编辑器则不一定，另外很多软件会调用vi编辑进行内容编写，例如crontab定时任务。较之于其它编辑器或GUI编辑器，vi编辑速度是最快的。<strong>VIM是它的增强版本</strong>，VI有三种基本工作模式，分别是：</p>
<ul>
<li>命令模式（command mode）、或者叫一般模式</li>
<li>插入模式（insert mode）、或者叫编辑模式</li>
<li>底行模式（last line mode）、或者叫命令行模式</li>
</ul>
<p>linux中vim的用法：<a href="https://cloud.tencent.com/developer/article/1134818?from=15425">https://cloud.tencent.com/developer/article/1134818?from=15425</a></p>
<h3 id="Linux高级文本处理命令"><a href="#Linux高级文本处理命令" class="headerlink" title="Linux高级文本处理命令"></a>Linux高级文本处理命令</h3><h4 id="wc：统计文件行数、字节、字符数"><a href="#wc：统计文件行数、字节、字符数" class="headerlink" title="wc：统计文件行数、字节、字符数"></a>wc：统计文件行数、字节、字符数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能： 统计文件行数、字节、字符数</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-l：统计多少行</span><br><span class="line">-w：统计字数</span><br><span class="line">-c：统计文件字节数，一个英文字母1字节，一个汉字占2-4字节（根据编码）</span><br><span class="line">-m：统计文件字符数，一个英文字母1字符，一个汉字占1个字符</span><br><span class="line">-L：统计最长行的长度， 也可以统计字符串长度</span><br><span class="line">-help：显示帮助信息</span><br><span class="line">--version：显示版本信息</span><br><span class="line"></span><br><span class="line">统计文件信息：wc wc.txt</span><br><span class="line">统计字符串长度：echo &quot;hello&quot; | wc –L</span><br><span class="line">统计文件行数：wc -l mingxing.txt </span><br><span class="line">统计文件字数：wc -w mingxing.txt </span><br></pre></td></tr></table></figure>



<h4 id="sort：排序文本，默认对整列有效"><a href="#sort：排序文本，默认对整列有效" class="headerlink" title="sort：排序文本，默认对整列有效"></a>sort：排序文本，默认对整列有效</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：排序文本，默认对整列有效</span><br><span class="line"></span><br><span class="line">常用可选项：</span><br><span class="line">-f：忽略字母大小写，就是将小写字母视为大写字母排序</span><br><span class="line">-M：根据月份比较，比如 JAN、DEC</span><br><span class="line">-h：根据易读的单位大小比较，比如 2K、1G</span><br><span class="line">-g：按照常规数值排序</span><br><span class="line">-n：根据字符串数值比较</span><br><span class="line">-r：倒序排序</span><br><span class="line">-k：位置1,位置2根据关键字排序，在从第位置1开始，位置2结束</span><br><span class="line">-t：指定分隔符</span><br><span class="line">-u：去重重复行</span><br><span class="line">-o：将结果写入文件</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">准备数据：sort.txt</span><br><span class="line">aaa:10:1.1</span><br><span class="line">ccc:20:3.3</span><br><span class="line">bbb:40:4.4</span><br><span class="line">eee:40:5.5</span><br><span class="line">ddd:30:3.3</span><br><span class="line">bbb:40:4.4</span><br><span class="line">fff:30:2.2</span><br><span class="line"></span><br><span class="line">## 直接排序，把整行当做一列字符串，字典顺序</span><br><span class="line">sort sort.txt</span><br><span class="line"></span><br><span class="line">## 以:作为分隔符，取第二个字段按照数值进行排序</span><br><span class="line">sort -nk 2 -t : sort.txt  </span><br><span class="line">		</span><br><span class="line">## 和上一个不一样的是-u为了去重</span><br><span class="line">sort -nk 2 -u -t : sort.txt    </span><br><span class="line">		</span><br><span class="line">## 多列排序：以:分隔，按第二列数值排倒序，第三列正序</span><br><span class="line">sort -n -t: -k2,2r -k3 sort.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="uniq：去除重复行，只会统计相邻的"><a href="#uniq：去除重复行，只会统计相邻的" class="headerlink" title="uniq：去除重复行，只会统计相邻的"></a>uniq：去除重复行，只会统计相邻的</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能：去除重复行，只会统计相邻的</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">-c：打印出现的次数</span><br><span class="line">-d：只打印重复行</span><br><span class="line">-u：只打印不重复行</span><br><span class="line">-D：只打印重复行，并且把所有重复行打印出来</span><br><span class="line">-f N：比较时跳过前N列</span><br><span class="line">-i：忽略大小写</span><br><span class="line">-s N：比较时跳过前N个字符</span><br><span class="line">-w N：对每行第N个字符以后内容不做比较</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">准备数据：uniq.txt</span><br><span class="line">abc</span><br><span class="line">xyz</span><br><span class="line">cde</span><br><span class="line">cde</span><br><span class="line">xyz</span><br><span class="line">abd</span><br><span class="line"></span><br><span class="line">## 直接去重，只能在相邻行去重：uniq uniq.txt </span><br><span class="line"></span><br><span class="line">## 先给文件排序，然后去重：sort uniq.txt | uniq</span><br><span class="line"></span><br><span class="line">## 打印每行重复次数：sort uniq.txt | uniq –c</span><br><span class="line"></span><br><span class="line">## 打印不重复行，并给出次数：sort uniq.txt | uniq -u –c</span><br><span class="line"></span><br><span class="line">## 打印重复行，并给出次数：sort uniq.txt | uniq -d -c</span><br><span class="line"></span><br><span class="line">## 以开头前两个字符去重：sort uniq.txt | uniq -w 2</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">准备数据：</span><br><span class="line">a.txt</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line"></span><br><span class="line">b.txt</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line">f</span><br><span class="line">求两个文件的交集：cat a.txt b.txt | sort | uniq –d</span><br><span class="line"></span><br><span class="line">求两个文件的并集：cat a.txt b.txt | sort | uniq</span><br><span class="line"></span><br><span class="line">求a.txt和b.txt的差集：cat a.txt b.txt b.txt | sort | uniq –u</span><br><span class="line"></span><br><span class="line">求b.txt和a.txt的差集：cat b.txt a.txt a.txt | sort | uniq -u</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="cut：提取文本列"><a href="#cut：提取文本列" class="headerlink" title="cut：提取文本列"></a>cut：提取文本列</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cut命令可以从一个文本文件或者文本流中提取文本列</span><br><span class="line"></span><br><span class="line">cut语法</span><br><span class="line">cut -d&#x27;分隔字符&#x27; -f fields     ## 用于有特定分隔字符</span><br><span class="line">cut -c 字符区间            ## 用于排列整齐的信息</span><br><span class="line"></span><br><span class="line">选项与参数：	</span><br><span class="line">-d：后面接分隔字符。与 -f 一起使用</span><br><span class="line">-f：依据 -d的分隔字符将一段信息分割成为数段，用 -f 取出第几段的意思</span><br><span class="line">-c：按照字符截取</span><br><span class="line">-b：按照字节截取</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先看PATH变量：</span><br><span class="line">echo $PATH</span><br><span class="line">将PATH变量取出，找出第五个路径：</span><br><span class="line">echo $PATH | cut -d &#x27;:&#x27; -f 5</span><br><span class="line">将PATH变量取出，找出第三和第五个路径，以下三种方式都OK</span><br><span class="line">echo $PATH | cut -d &#x27;:&#x27; -f 3,5</span><br><span class="line">echo $PATH | cut -d : -f 3,5</span><br><span class="line">echo $PATH | cut -d: -f3,5</span><br><span class="line">将PATH变量取出，找出第三到最后一个路径</span><br><span class="line">echo $PATH | cut -d &#x27;:&#x27; -f 3-</span><br><span class="line">将PATH变量取出，找出第一到第三，还有第五个路径</span><br><span class="line">echo $PATH | cut -d &#x27;:&#x27; -f 1-3,5</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="Lfind：搜索文件目录层次结构"><a href="#Lfind：搜索文件目录层次结构" class="headerlink" title="Lfind：搜索文件目录层次结构"></a>Lfind：搜索文件目录层次结构</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">功能： 搜索文件目录层次结构</span><br><span class="line">格式： find      path    -option    actions</span><br><span class="line">      find  	&lt;路径&gt;	&lt;选项&gt; 	 [表达式]</span><br><span class="line"></span><br><span class="line">常用可选项：</span><br><span class="line">-name 根据文件名查找，支持(&#x27;* &#x27; , &#x27;? &#x27;)</span><br><span class="line">-type  根据文件类型查找(f-普通文件，c-字符设备文件，b-块设备文件，l-链接文件，d-目录)</span><br><span class="line">-perm 根据文件的权限查找，比如 755</span><br><span class="line">-user  根据文件拥有者查找</span><br><span class="line">-group 根据文件所属组寻找文件</span><br><span class="line">-size   根据文件小大寻找文件</span><br><span class="line">-o     表达式 或</span><br><span class="line">-a     表达式 与</span><br><span class="line">-not   表达式 非</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## 查找文件名txt结尾的文件： find /root/txt/ -name &quot;*.txt“</span><br><span class="line"></span><br><span class="line">## 忽略大小写查找文件名包含linux：find /root/txt -iname &quot;*linux*“</span><br><span class="line"></span><br><span class="line">## 查找文件名结尾是.txt或者.jpg的文件：</span><br><span class="line">	find /root/txt/ \( -name &quot;*.txt&quot; -o -name &quot;*.jpg&quot; \)</span><br><span class="line">	find /root/txt/ -name &quot;*.txt&quot; -o -name &quot;*.jpg&quot;</span><br><span class="line"></span><br><span class="line">## 使用正则表达式的方式去查找上面条件的文件：</span><br><span class="line">	find /root/txt/ -regex &quot;.*\(\.txt\|\.jpg\)$&quot;</span><br><span class="line"></span><br><span class="line">## 查找.jpg结尾的文件，然后删掉</span><br><span class="line">	find /root/txt -type f -name &quot;*.jpg&quot; -delete</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="grep：文本搜索工具"><a href="#grep：文本搜索工具" class="headerlink" title="grep：文本搜索工具"></a>grep：文本搜索工具</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep是一种强大的文本搜索工具，他能使用正则表达式搜索文本，并把匹配的行统计出来，过滤数据流或文件内容。</span><br><span class="line"></span><br><span class="line">命令：grep [选项] [–color=auto] ”搜索字符串” filename </span><br><span class="line"></span><br><span class="line">常用参数： </span><br><span class="line">-c：统计符合条件的字符串出现的总行数。 </span><br><span class="line">-E：支持扩展正则表达式。 </span><br><span class="line">-i：忽略字符大小写。 </span><br><span class="line">-n：在显示匹配到的字符串前面加上行号。 </span><br><span class="line">-v：显示没有”搜索字符串”内容的那一行。 </span><br><span class="line">-l：列出文件内容中有搜索字符串的文件名称。 </span><br><span class="line">-o：只输出文件中匹配到的部分。 </span><br><span class="line">-color=auto：将匹配到的字符串高亮出来。</span><br></pre></td></tr></table></figure>



<h4 id="sed：流编辑器"><a href="#sed：流编辑器" class="headerlink" title="sed：流编辑器"></a>sed：流编辑器</h4><p>sed叫做流编辑器，在shell脚本和Makefile中作为过滤使用非常普遍，就是把前一个程序的输出引入sed的输入，经过一系列编辑命令转换成为另一种格式输出。</p>
<p>sed是一种在线编辑器，它一次处理一行内容，处理时，把当前处理的行存储在临时缓冲区中，称为”模式空间”,接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">选项: </span><br><span class="line">-n：一般sed命令会把所有数据都输出到屏幕，如果加入-n选项的话，则只会把经过sed命令处理的行输出到屏幕。 </span><br><span class="line">-e：允许对输入数据应用多条sed命令编辑。 </span><br><span class="line">-i：用sed的修改结果直接修改读取数据的文件，而不是由屏幕输出。</span><br></pre></td></tr></table></figure>



<h4 id="awk：文本处理编程语言工具"><a href="#awk：文本处理编程语言工具" class="headerlink" title="awk：文本处理编程语言工具"></a>awk：文本处理编程语言工具</h4><p>Awk是一个强大的处理文本的编程语言工具，其名称得自于它的创始人Alfred Aho、Peter Weinberger和Brian Kernighan 姓氏的首个字母，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。</p>
<p>AWK 提供了极其强大的功能：可以进行样式装入、流控制、数学运算符、进程控制语句甚至于内置的变量和函数。简单来说awk就是扫描文件中的每一行，查找与命令行中所给定内容相匹配的模式。如果发现匹配内容，则进行下一个编程步骤。如果找不到匹配内容，则继续处理下一行。</p>
<h4 id="date：日期时间"><a href="#date：日期时间" class="headerlink" title="date：日期时间"></a>date：日期时间</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date - print or set the system date and time</span><br><span class="line">linux系统为我们提供了一个命令date，专门用来显示或者设置系统日期时间的。</span><br><span class="line"></span><br><span class="line">语法格式为：</span><br><span class="line">date [OPTION]... [+FORMAT]   或者</span><br><span class="line">date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]</span><br><span class="line"></span><br><span class="line">常用的可选项有：</span><br><span class="line">--help：显示辅助信息</span><br><span class="line">--version：显示date命令版本信息</span><br><span class="line">-u：显示目前的格林威治时间</span><br><span class="line">-d：做日期时间相关的运算</span><br><span class="line">--date=&#x27;-dateStr&#x27;：做日期时间的相关运算</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>大数据</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux文件系统</title>
    <url>/p/a4b4101b/</url>
    <content><![CDATA[<p>Linux文件系统中的文件是数据的集合，文件系统不仅包含着文件中的数据而且还有文件系统的结构，所有Linux 用户和程序看到的文件、目录、软连接及文件保护信息等都存储在其中。Linux下的所有文件和目录。这些文件及目录构以一个树状的结构，构成了Linux中的文件系统。</p>
<span id="more"></span>

<p>在Linux中普通文件和目录文件保存在称为块物理设备的磁盘或者磁带上。<strong>一套Linux系统支持若干物理盘，每个物理盘可定义一个或者多个文件系统。</strong>每个文件系统由逻辑块的序列组成，一个逻辑盘空间一般划分为几个用途各不相同的部分，即引导块、超级块、inode区以及数据区等。操作系统用于明确磁盘分区上的文件的方法和数据结构，即文件在磁盘上的组织方法。</p>
<p>Linux最早引入的文件系统类型是MINIX。MINIX文件系统由MINIX操作系统定义，有一定的局限性，如文件名最长14个字符，文件最长64M字节。第一个专门为Linux设计的文件系统是EXT（Extended File System），但目前流行最广的是EXT4。但是因为EXT4的一些问题，出现了各方面细节更好的<strong>XFS类型文件系统</strong>，它也是现在的centos7系统默认的文件系统类型。</p>
<p>CentOS7可以通过命令查看文件系统的类型：<strong>cat &#x2F;etc&#x2F;fstab。Windows系统文件格式一般是NTFS，优盘文件格式一般是FAT32。</strong></p>
<p>Linux根据文件形式主要将文件分为目录和普通文件，以树的形式进行组织，如下图</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220410162320688.png" alt="image-20220410162320688"></p>
<p>目录或者文件的名称长度不超过255个字符，文件或者目录是由以下字符构成：</p>
<ul>
<li>Uppercase letters (A-Z)</li>
<li>Lowercase letters (a-z)</li>
<li>Numbers (0-9)</li>
<li>Underscore (_)</li>
<li>Period(.)</li>
<li>Comma(,)</li>
</ul>
<p><strong>注意： 1、文件和目录是区分大小写的； 2、Linux对文件的扩展名没有强制要求。</strong></p>
<h3 id="Linux文件系统核心目录结构"><a href="#Linux文件系统核心目录结构" class="headerlink" title="Linux文件系统核心目录结构"></a>Linux文件系统核心目录结构</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">执行命令：ll /</span><br></pre></td></tr></table></figure>

<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220410162413698.png" alt="image-20220410162413698"></p>
<h3 id="Linux目录结构详解"><a href="#Linux目录结构详解" class="headerlink" title="Linux目录结构详解"></a>Linux目录结构详解</h3><table>
<thead>
<tr>
<th>目录</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;</td>
<td>根目录，一般根目录下只存放目录，不要存放文件，&#x2F;etc、&#x2F;bin、&#x2F;dev、&#x2F;lib、&#x2F;sbin应该和根目录放置在一个分区中</td>
</tr>
<tr>
<td>&#x2F;bin:&#x2F;usr&#x2F;bin</td>
<td>可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等</td>
</tr>
<tr>
<td>&#x2F;boot</td>
<td>放置linux系统启动时用到的一些文件。&#x2F;boot&#x2F;vmlinuz为linux的内核文件，以及&#x2F;boot&#x2F;gurb。建议单独分区，分区大小100M即可</td>
</tr>
<tr>
<td>&#x2F;dev</td>
<td>存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱mount &#x2F;dev&#x2F;cdrom  &#x2F;mnt</td>
</tr>
<tr>
<td>&#x2F;etc</td>
<td>系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有&#x2F;etc&#x2F;inittab、&#x2F;etc&#x2F;gateways、&#x2F;etc&#x2F;resolv.conf、&#x2F;etc&#x2F;fstab、&#x2F;etc&#x2F;init.d、&#x2F;etc&#x2F;X11、&#x2F;etc&#x2F;sysconfig、&#x2F;etc&#x2F;xinetd.d修改配置文件之前记得备份。注：&#x2F;etc&#x2F;X11存放与x  windows有关的设置</td>
</tr>
<tr>
<td>&#x2F;home</td>
<td>系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，~表示当前用户的家目录，test表示用户test的家目录。建议单独分区，并设置较大的磁盘空间，方便用户存放数据</td>
</tr>
<tr>
<td>&#x2F;lib:&#x2F;lib64:&#x2F;usr&#x2F;lib:&#x2F;usr&#x2F;local&#x2F;lib</td>
<td>系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，比较重要的目录为&#x2F;lib&#x2F;modules</td>
</tr>
<tr>
<td>&#x2F;lost+found</td>
<td>系统异常产生错误时，会将一些遗失的片段放置于此目录下，通常这个目录会自动出现在装置目录下。如加载硬盘于&#x2F;disk  中，此目录下就会自动产生目录&#x2F;disk&#x2F;lost+found</td>
</tr>
<tr>
<td>&#x2F;mnt:&#x2F;media</td>
<td>光盘默认挂载点，通常光盘挂载于&#x2F;mnt&#x2F;cdrom下，也不一定，可以选择任意位置进行挂载</td>
</tr>
<tr>
<td>&#x2F;opt</td>
<td>给主机额外安装软件所摆放的目录。如：FC4使用的Fedora  社群开发软件，如果想要自行安装新的KDE桌面软件，可以将该软件安装在该目录下。以前的Linux系统中，习惯放置在 &#x2F;usr&#x2F;local目录下option</td>
</tr>
<tr>
<td>&#x2F;proc</td>
<td>此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有&#x2F;proc&#x2F;cpuinfo、&#x2F;proc&#x2F;interrupts、&#x2F;proc&#x2F;dma、&#x2F;proc&#x2F;ioports、&#x2F;proc&#x2F;net&#x2F;*等process</td>
</tr>
<tr>
<td>&#x2F;root</td>
<td>系统管理员root的家目录，系统第一个启动的分区为&#x2F;，所以最好将&#x2F;root和&#x2F;放置在一个分区下</td>
</tr>
<tr>
<td>&#x2F;sbin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;sbin</td>
<td>放置系统管理员使用的可执行命令，如fdisk、shutdown、mount等。与&#x2F;bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能”查看”而不能设置和使用。</td>
</tr>
<tr>
<td>&#x2F;srv</td>
<td>服务启动之后需要访问的数据目录，如www服务需要访问的网页数据存放在&#x2F;srv&#x2F;www内service</td>
</tr>
<tr>
<td>&#x2F;sys</td>
<td>类似于&#x2F;proc的特殊文件系统，存放内核数据信息</td>
</tr>
<tr>
<td>&#x2F;tmp</td>
<td>一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下</td>
</tr>
<tr>
<td>&#x2F;usr</td>
<td>应用程序存放目录，     &#x2F;usr&#x2F;bin 存放应用程序          &#x2F;usr&#x2F;share 存放共享数据     &#x2F;usr&#x2F;local:存放软件升级包     &#x2F;usr&#x2F;lib 存放不能直接运行的，却是许多程序运行所必需的一些函数库文件</td>
</tr>
<tr>
<td>&#x2F;var</td>
<td>放置系统执行过程中经常变化的文件，如：     &#x2F;var&#x2F;log：随时更改的日志文件          &#x2F;var&#x2F;log&#x2F;message：所有的登录文件存放目录     &#x2F;var&#x2F;spool&#x2F;mail：邮件存放的目录        &#x2F;var&#x2F;run：程序或服务启动     &#x2F;usr&#x2F;share&#x2F;doc: 系统说明文件存放目录    &#x2F;usr&#x2F;share&#x2F;man: 程序说明文件存放目录</td>
</tr>
</tbody></table>
<h3 id="Linux目录结构使用建议"><a href="#Linux目录结构使用建议" class="headerlink" title="Linux目录结构使用建议"></a>Linux目录结构使用建议</h3><p>1、用户应该将文件存储在自己的主目录及其子目录下</p>
<p>2、系统绝大多数设置&#x2F;配置都在&#x2F;etc目录下</p>
<p>3、不要修改“&#x2F;”或者“&#x2F;usr”目录下的任何内容，除非你真的清楚你在做什么，也就是说“&#x2F;”目录最好和安装好系统之初保持一致</p>
<p>4、大多数工具和应用软件程序都安装在&#x2F;bin，&#x2F;sbin，&#x2F;usr&#x2F;bin，&#x2F;usr&#x2F;sbin，&#x2F;usr&#x2F;local&#x2F;bin</p>
<p>5、文件或者目录都有唯一的绝对路径，没有盘符的概念</p>
<h3 id="Linux系统磁盘分区管理"><a href="#Linux系统磁盘分区管理" class="headerlink" title="Linux系统磁盘分区管理"></a>Linux系统磁盘分区管理</h3><p>对于分区表通常有<strong>MBR分区表</strong>和<strong>GPT分区表</strong>。对于磁盘大小小于2T的磁盘，我们可以使用fdisk和parted命令工具进行分区。</p>
<p>对于MBR分区表的特点（通常使用fdisk命令进行分区）所支持的最大磁盘大小：2T，<strong>最多支持4个主分区或者是3个主分区加上一个扩展分区。</strong></p>
<p>对于GPT分区表的特点（使用parted命令进行分区）支持最大卷：18EB（1EB&#x3D;1024TB），<strong>最多支持128个主分区</strong>，所以对于GPT的分区表来说，基本就<strong>没有什么主分区和逻辑分区的区别</strong>了。</p>
<ul>
<li><strong>MBR分区介绍</strong></li>
</ul>
<p>1、可以分为主分区、扩展分区、逻辑分区</p>
<p>2、硬盘采用hdX格式表示，X代表a.b.c.d（硬盘）</p>
<p>3、系统最多只有4个IDE设备，其中第一个IDE设备名称为hda，第4个为hdd</p>
<p><strong>主分区：</strong>一个硬盘最多只能有4个主分区，主分区采用hdXN的格式，hdX为硬盘，N是1-4的数字，分别表示4个主分区，第一个硬盘的第一个主分区，表示为hda1，以此类推</p>
<p><strong>扩展分区：</strong>扩展分区作为特殊的主分区需要占用硬盘分区表中4个分区记录中的1个记录</p>
<p><strong>逻辑分区：</strong>逻辑分区只能建立在扩展分区中，可以建立文件系统。逻辑分区同样采用了hdXN 的格式，区别在于，逻辑分区的N是从5开始算的，第一个硬盘的第2个逻辑分区就为hda6</p>
<p>注意：IDE设备： hda2, hdb3等等</p>
<p>SCSI设备&#x2F;SATA设备： sda2, sdb3等等</p>
<ul>
<li><strong>Linux和Windows分区对比</strong></li>
</ul>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220410161630812.png" alt="image-20220410161630812"></p>
<h3 id="Linux分区规划"><a href="#Linux分区规划" class="headerlink" title="Linux分区规划"></a>Linux分区规划</h3><p>重点关注这四个方面的分区情况：</p>
<p><strong>&#x2F;swap：</strong>交换分区，用来支持虚拟内存的分区，通常放在单独的分区，其大小为内存容量的1～2倍。</p>
<p><strong>&#x2F;：</strong>根分区，它只存放启动系统所需的文件和系统配置文件，应放置在ext3fs主分区中，单独分区。</p>
<p><strong>&#x2F;boot：</strong>启动分区，容量小于等于128MB，通常可以单独分区，存放Linux内核和其他与内核有关的文件。</p>
<p><strong>&#x2F;home：</strong>用户的宿主目录，通常将其设置在独立的分区中，为以后方便的磁盘定额做准备。</p>
<h3 id="Linux目录终端使用"><a href="#Linux目录终端使用" class="headerlink" title="Linux目录终端使用"></a>Linux目录终端使用</h3><p>如果有桌面版系统，则：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220410163327311.png" alt="image-20220410163327311"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@mycentos7701 ~]# </span><br><span class="line"></span><br><span class="line">root: 当前连接的用户名</span><br><span class="line">@： 固定符号</span><br><span class="line">mycentos7701  主机名称</span><br><span class="line">~ 代表家目录  /root     </span><br><span class="line"></span><br><span class="line">[a@mycentos7701 ~] </span><br><span class="line">~ /home/a/</span><br><span class="line"></span><br><span class="line">如果是root用户的话，就是#</span><br><span class="line">如果是普通用户的话，就是$</span><br><span class="line"></span><br><span class="line">如果是普通用户hadoop，那么家目录就是：/home/hadoop/</span><br><span class="line">如果是系统管理员root，那么家目录就是：/root/</span><br></pre></td></tr></table></figure>



<p><strong>Linux终端工具：</strong>SecureCRT、SFTP工具、Filezilla工具、Xshell</p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>大数据</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux简介</title>
    <url>/p/cf0ea7a1/</url>
    <content><![CDATA[<p>Linux系统是一套<strong>免费使用和自由传播的类UNIX操作系统</strong>（主要用在服务器上），是一个基于POSIX和UNIX的<strong>多用户、多任务、支持多线程和多CPU的操作系统</strong>。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了UNIX以网络为核心的设计思想，是一个性能稳定的<strong>多用户网络操作系统</strong>。</p>
<p>与目前流行的Windows相比，Linux是一个免费开放源代码的操作系统，其支持多用户多任务等优秀特点，吸引了一大批从事Linux研究和应用的爱好者。</p>
<span id="more"></span>

<h3 id="Linux系统的应用领域"><a href="#Linux系统的应用领域" class="headerlink" title="Linux系统的应用领域"></a>Linux系统的应用领域</h3><p><strong>1、Linux 服务器</strong><br>Linux最主要的应用领域是基础服务器应用，可以提供Web服务器 、FTP服务器、Gopher、SMTP&#x2F;POP3、Proxy&#x2F;Cache 、DHCP服务器 、DNS等服务器，支持服务器集群，支持虚拟主机、虚拟服务、VPN等，最著名的LAMP&#x2F;LNMP架构。</p>
<p><strong>2、嵌入式Linux系统</strong><br>Linux运行稳定、对网络的良好支持性、低成本，且可以根据需要进行软件裁剪，内核最小可以达到几百KB等特点，使其近些年来在嵌入式领域的应用得到非常大的提高。</p>
<p><strong>3、桌面应用</strong><br>关于此领域是传统Linux 领域最薄弱的环节，被windows所压制，近些年来随着ubuntu、fedora等优秀桌面环境的兴起，同时各大硬件厂商对其支持的加大，linux在个人桌面领域的占有率在逐渐的提高。典型代表：ubuntu、fedora、suse linux。</p>
<h3 id="Linux系统架构组成"><a href="#Linux系统架构组成" class="headerlink" title="Linux系统架构组成"></a>Linux系统架构组成</h3><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220415152356780.png" alt="image-20220415152356780"></p>
<p><strong>内核，Shell和文件系统一起形成了基本的操作系统结构。</strong></p>
<blockquote>
<p><strong>Linux内核作者介绍</strong></p>
</blockquote>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220410160330804.png" alt="image-20220410160330804"></p>
<p>林纳斯·本纳第克特·托瓦兹（Linus Benedict Torvalds, 1969-12-28，芬兰人），著名电脑程序员、黑客。Linux内核发明人以及GNU计划的合作者。托瓦兹利用个人时间及器材创造出了这套当今全球最流行的操作系统（作业系统）内核之一。</p>
<p>他毕业于赫尔辛基大学计算机科学系，1997年至2003年在美国加州硅谷任职于全美达公司（Transmeta Corporation）参与该公司芯片的code morph技术研发。后受聘于开放源码发展实验室（OSDL : Open Source Development Labs,Inc），全力开发Linux内核。现任职于Linux基金会。</p>
<h4 id="Linux内核及其版本"><a href="#Linux内核及其版本" class="headerlink" title="Linux内核及其版本"></a><strong>Linux内核及其版本</strong></h4><p>严格来讲，Linux不是一个操作系统，Linux只是一个操作系统中的内核。<strong>内核建立了计算机软件与硬件之间通讯的平台</strong>。内核提供系统服务，比如文件管理、虚拟内存、设备I&#x2F;O、进程管理等。</p>
<p><strong>1、Kernel实现操作系统的基本功能</strong></p>
<ul>
<li>​	硬件方面：控制硬件设备，内存管理，硬件接口，基本I&#x2F;O</li>
<li>​	软件方面：管理文件系统，为程序分配内存和CPU时间等</li>
</ul>
<p><strong>2、版本号有三个数字组成：r.x.y</strong></p>
<ul>
<li>​	r：目前发布的Kernel版本</li>
<li>​	x：偶数：稳定版本，奇数：开发中版本（现已不适用）</li>
<li>​	y：错误修补的次数</li>
</ul>
<p>3、范例：现在最新的linux内核版本是：5.5.6 <a href="https://www.kernel.org/">https://www.kernel.org/</a><br>     <strong>要注意区分linux发型版本和linux内核版本。两者不是同一个事物</strong></p>
<h4 id="Linux发行套件及版本"><a href="#Linux发行套件及版本" class="headerlink" title="Linux发行套件及版本"></a><strong>Linux发行套件及版本</strong></h4><p>1、Linux 发行套件（Distribution）</p>
<p>​	以Linux Kernel为核心，搭配各种应用程序和工具的软件集合。包括桌面环境，办公条件，媒体播放等</p>
<p>2、目前有200余种Linux Distribution</p>
<p>3、相对于内核版本，发行套件的版本号随发布者的不同而不同，与系统内核的版本号是相对独立的</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220410160838748.png" alt="image-20220410160838748"></p>
<h3 id="Linux系统下载"><a href="#Linux系统下载" class="headerlink" title="Linux系统下载"></a>Linux系统下载</h3><p>Linux系统有上百个不同的组织、公司、机构研发并发布出不同的版本，其中红帽公司作为一家成熟的操作系统厂商提供可靠的Linux系统和完善的求援服务：红帽企业linux系统（RedHat Enterprise Linux, RHEL），它的市场占有量很高，认可度也非常高。</p>
<p>主流：主流企业级Linux系统仍旧是RedHat（收费）或者CentOS。<br>免费：CentOS和RedHat差别不大，基于Red Hat Linux提供的可自由使用源代码的CentOS是一个企业级Linux发行版本。CentOS的yum命令支持在线升级，可以即时更新系统，不像RedHat那样需要花钱购买支持服务。</p>
<p>CentOS阿里云下载地址：<a href="http://mirrors.aliyun.com/centos/">http://mirrors.aliyun.com/centos/</a></p>
<p>CentOS北京理工大学下载：<a href="http://mirror.bit.edu.cn/centos/">http://mirror.bit.edu.cn/centos/</a></p>
<p>企业级的CentOS的主流的版本是centos-6.x，还有差不多一半的企业选择依旧使用的是centos6，开始陆续使用centos-7.x</p>
<h3 id="vmware介绍和安装"><a href="#vmware介绍和安装" class="headerlink" title="vmware介绍和安装"></a>vmware介绍和安装</h3><p><strong>Vmware软件介绍</strong></p>
<p>Vmware公司出品的一套虚拟化软件，可以在物理机上用软件的方式模拟出虚拟的计算机系统，而虚拟出的计算机系统可以像一台真实的机器一样，安装操作系统，运行软件等。类似的产品还有Oracle出品的免费版虚拟机软件VirtualBox</p>
<p>Vmware官网：<a href="http://www.vmware.com/">http://www.vmware.com</a></p>
<p>Vmware优点</p>
<p>​	A、不需要分区或重新开机就能在同一台PC机上使用两种以上的操作系统。</p>
<p>​	B、本机系统可以与虚拟机系统网络通信</p>
<p>​	C、可以随时修改虚拟机操作系统环境</p>
<blockquote>
<p><strong>虚拟机工作的原理：</strong><br>1、我们现在有一台计算机A<br>2、在A中安装了虚拟机软件S<br>3、通过S软件，把A的资源进行抽象细分。<br>4、从A中分离出来一些虚拟的资源来进行新的系统centos的安装和使用<br>5、A与S当中的B1和B2通过S当中的虚拟网卡来进行通信</p>
<p>最终简单的说：其实就是在A操作系统中安装了虚拟机软件S，通过S又在A中安装了另外一个操作系统B</p>
</blockquote>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220410171941613.png" alt="image-20220410171941613"></p>
<p><strong>通过VMWare安装Centos7操作系统</strong></p>
<p>在通过vmware安装centos7的时候分成两个环节：</p>
<p><strong>1、vmware设置centos7相关的资源的配置环节</strong></p>
<ul>
<li>​	内存</li>
<li>​	磁盘大小</li>
<li>​	磁盘类型</li>
<li>​	网络类型</li>
<li>​	ISO镜像地址</li>
<li>​	….<br>​	<strong>目的：配置安装什么操作系统，给定了多少资源</strong></li>
</ul>
<p><strong>2、进入到centos7的系统安装环节</strong></p>
<ul>
<li>​	指定时区和时间</li>
<li>​	指定网络IP</li>
<li>​	指定主机名</li>
<li>​	指定root账户</li>
<li>​	….</li>
</ul>
<h3 id="Vmware快照和克隆"><a href="#Vmware快照和克隆" class="headerlink" title="Vmware快照和克隆"></a>Vmware快照和克隆</h3><p><strong>快照的含义：</strong>对某一个特定文件系统在某一个特定时间内的一个具有只读属性的镜像。当你需要重复的返回到某一系统状态，又不想创建多个虚拟机的时候，就可以使用快照功能。</p>
<p><strong>克隆的含义：</strong>在VMware软件中，克隆和快照功能很像，但是不同。一个虚拟机的克隆就是原始虚拟机全部状态的一个拷贝，或者说一个镜像。克隆的过程并不影响原始虚拟机，克隆的操作一但完成，克隆的虚拟机就可以脱离原始虚拟机独立存在，而且在克隆的虚拟机中和原始虚拟机中的操作是相对独立的，不相互影响。克隆过程中，VMware会生成和原始虚拟机不同的MAC地址和UUID，这就允许克隆的虚拟机和原始虚拟机在同一网络中出现，并且不会产生任何冲突。 VMware支持两种类型的克隆：完整克隆和链接克隆。</p>
<p><strong>Vmware克隆虚拟机详细步骤：</strong></p>
<ol>
<li>准备一台你要克隆的虚拟机，保证是关闭状态。</li>
<li>在vmware中选中你的虚拟机，右键，选择“管理”，再选择“克隆”</li>
<li>在“克隆源”中，可以选择“当前状态”，如果有快照，也可以选择“快照”</li>
<li>在“克隆类型”中，最好选择“完整克隆”</li>
<li>在“新虚拟机名称”中，指定虚拟机名称，和存放路径，然后点击完成，进行克隆</li>
<li>重新生成MAC地址</li>
<li>修改IP地址</li>
<li>如果有配置主机名称的话，记得修改主机名称</li>
</ol>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>大数据</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>Git学习笔记</title>
    <url>/p/a91eaa72/</url>
    <content><![CDATA[<p>学习地址：<a href="https://www.liaoxuefeng.com/wiki/896043488029600">https://www.liaoxuefeng.com/wiki/896043488029600</a></p>
<span id="more"></span>

<h2 id="Git本地仓库"><a href="#Git本地仓库" class="headerlink" title="Git本地仓库"></a>Git本地仓库</h2><h3 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 创建版本库</span></span></span><br><span class="line">mkdir learngit</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 进入learngit目录</span></span></span><br><span class="line">cd learngit</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 指定仓库</span></span></span><br><span class="line">git init</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 新建文件：版本1</span></span></span><br><span class="line">vim readme.txt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># ins输入</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Git is a version control system.</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Git is a free software.</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Esc退出，:wq保存</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 把文件添加到仓库</span></span></span><br><span class="line">git add readme.txt</span><br><span class="line">git commit -m&quot;wrote a readme.txt&quot;</span><br></pre></td></tr></table></figure>



<h3 id="查看修改记录"><a href="#查看修改记录" class="headerlink" title="查看修改记录"></a>查看修改记录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 修改文件：版本2</span></span></span><br><span class="line">vim readme.txt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># ins输入，修改第一行为</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Git is a distributed version control system.</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Esc退出，:wq保存</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 查看仓库状态</span></span></span><br><span class="line">git status</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 查看修改内容</span></span></span><br><span class="line">git diff</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 把文件添加到仓库</span></span></span><br><span class="line">git add readme.txt</span><br><span class="line">git commit -m&quot;add distributed&quot;</span><br></pre></td></tr></table></figure>



<h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 修改文件：版本3</span></span></span><br><span class="line">vim readme.txt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># ins输入，修改第二行为</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Git is free software distributed under the GPL.</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Esc退出，:wq保存</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 查看版本历史记录：显示从最近到最远的提交日志</span></span></span><br><span class="line">git log</span><br><span class="line">git log --pretty=oneline</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 回退到上一版本（版本2）</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100</span></span></span><br><span class="line">git reset --hard HEAD^</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 重新回到版本1</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 找到版本1的commit id</span></span></span><br><span class="line">git reflog</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 根据版本1的commit id，重新回到版本1</span></span></span><br><span class="line">git reset --hard 150fa61</span><br></pre></td></tr></table></figure>



<h3 id="工作区和暂存区"><a href="#工作区和暂存区" class="headerlink" title="工作区和暂存区"></a>工作区和暂存区</h3><p><strong>工作区（Working Directory）</strong></p>
<p>就是你在电脑里能看到的目录，比如<code>learngit</code>文件夹就是一个工作区</p>
<p><strong>版本库（Repository）</strong></p>
<p>工作区有一个隐藏目录<code>.git</code>，这个不算工作区，而是Git的版本库。</p>
<p>Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支<code>master</code>，以及指向<code>master</code>的一个指针叫<code>HEAD</code>。</p>
<p>每次修改，如果不用<code>git add</code>到暂存区，那就不会加入到<code>commit</code>中</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/0.jpeg"></p>
<h3 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h3><p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p>
<p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD &lt;file&gt;</code>，就回到了场景1，第二步按场景1操作。</p>
<p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考<strong>版本回退</strong>一节，不过前提是没有推送到远程库。</p>
<h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><p>命令<code>git rm</code>用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失<strong>最近一次提交后你修改的内容</strong>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 删除工作区中的文件readme.txt</span></span></span><br><span class="line">rm readme.txt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 同步删除版本库中的文件</span></span></span><br><span class="line">git rm readme.txt</span><br><span class="line">git commit -m&quot;remove readme.txt&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 撤回修改（删除）</span></span></span><br><span class="line">git checkout -- readme.txt</span><br></pre></td></tr></table></figure>

<p><code>git checkout</code>其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。</p>
<h2 id="Git远程仓库"><a href="#Git远程仓库" class="headerlink" title="Git远程仓库"></a>Git远程仓库</h2><h3 id="关联GitHub"><a href="#关联GitHub" class="headerlink" title="关联GitHub"></a>关联GitHub</h3><p>本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，因此需要给GitHub添加本地的SSH Key进行关联。</p>
<p><strong>第1步：创建SSH Key。</strong></p>
<p>在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有<code>id_rsa</code>和<code>id_rsa.pub</code>这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 创建SSH Key</span></span></span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 查找.shh所在目录</span></span></span><br><span class="line">ll -d ~/.ssh</span><br></pre></td></tr></table></figure>

<p>把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可。</p>
<p>在用户主目录里找到<code>.ssh</code>目录，里面有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，这两个就是SSH Key的秘钥对，<code>id_rsa</code>是私钥，不能泄露出去，<code>id_rsa.pub</code>是公钥，可以放心地告诉任何人。</p>
<p><strong>第2步：GitHub添加SSH Key。</strong></p>
<p>登陆GitHub，打开“Account settings”，“SSH Keys”页面：</p>
<p>然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴<code>id_rsa.pub</code>文件的内容：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/0.png"></p>
<h3 id="从本地上传到GitHub"><a href="#从本地上传到GitHub" class="headerlink" title="从本地上传到GitHub"></a>从本地上传到GitHub</h3><p>在本地工作区下执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 将该目录下的本地仓库与某个GitHub仓库关联</span></span></span><br><span class="line">git remote add origin git@github.com:GitHub账号名/仓库名.git</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 将本地的【版本库!!!】上传到GitHub仓库</span></span></span><br><span class="line">git push -u origin master</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 查看远程库信息</span></span></span><br><span class="line">git remote -v</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 解除与远程库的关系</span></span></span><br><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure>

<p>把本地库的内容推送到远程，用<code>git push</code>命令，实际上是把当前分支<code>master</code>推送到远程。</p>
<p>由于远程库是空的，第一次推送<code>master</code>分支时，需加上<code>-u</code>参数，Git不但会把本地的<code>master</code>分支内容推送的远程新的<code>master</code>分支，还会把本地的<code>master</code>分支和远程的<code>master</code>分支关联起来，以后的推送，使用<code>git push origin master</code>即可。</p>
<p>注意：推送的是版本库，不是工作区！！！</p>
<p>因此，更新流程是：<strong>工作区-&gt;版本库-&gt;远程库</strong></p>
<h3 id="从GitHub克隆到本地"><a href="#从GitHub克隆到本地" class="headerlink" title="从GitHub克隆到本地"></a>从GitHub克隆到本地</h3><p>在本地工作区下执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 从GitHub克隆到本地</span></span></span><br><span class="line">git clone git@github.com:GitHub账号名/仓库名.git</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>大数据</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>网站开发</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>量化分析方法</title>
    <url>/p/caa30177/</url>
    <content><![CDATA[<h2 id="如何从定性分析转变为定量分析？"><a href="#如何从定性分析转变为定量分析？" class="headerlink" title="如何从定性分析转变为定量分析？"></a>如何从定性分析转变为定量分析？</h2><p><strong>例: 明天天气怎么样？</strong></p>
<ol>
<li><p>变量抽离: 天气状况</p>
</li>
<li><p>寻找衡量标准: 背景是明天要去室外打球，主要关心下不下雨</p>
</li>
<li><p>根据信息量大小由小到大扩充变量信息</p>
<span id="more"></span>

<ul>
<li>二分类变量: 好(不下雨），不好(下雨）</li>
<li>顺序变量: 极差(下暴雨），差(下大雨），一般(下小雨），好(晴天），很好(阴天)</li>
<li>数值型变量: 下雨量，室外温度</li>
</ul>
</li>
<li><p>根据实际情况选择合适的量化层级进行辅助判断。</p>
<ul>
<li><p>场景一: 对天气要求极为苛刻，只要下雨就不去打球，二分类变量即可衡量</p>
</li>
<li><p>场景二: 对打球兴趣度极高，只要不是下大暴雨就行，顺序变量即可衡量</p>
</li>
<li><p>场景三: 身体对下雨量和温度极度敏感，只能接受某个下雨量和温度范围，多下一毫米雨，高一度温度，就会导致发烧感冒，选数值型变量衡量</p>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>数据分析能力</category>
        <category>统计分析方法</category>
      </categories>
      <tags>
        <tag>量化分析</tag>
      </tags>
  </entry>
  <entry>
    <title>常用统计推断方法</title>
    <url>/p/c906b463/</url>
    <content><![CDATA[<p>本文主要介绍基于参数估计和假设检验的统计推断应用方法，主要包括：</p>
<p>（1）分类数据分析 <strong>（统计的是各类别样本频数）</strong> ：</p>
<p>① 拟合优度分析：检验一个分类变量是否符合某一理论分布；或一个分类变量（可以是多分类）对另一个<strong>二分类</strong>变量对影响是否显著；</p>
<p>② 独立性检验（或列联分析）：检验两个分类变量交叉是否是独立的；</p>
<p>（2）数值型数据分析 <strong>（统计的是样本的某个指标）</strong> ：</p>
<p>① 方差分析：检验分类变量对数值型变量对影响是否显著；（若分类变量为<strong>二分类变量</strong>则可以使用z检验或t检验）</p>
<p>② 回归分析：用于预测一个或多个自变量对某一个因变量的影响趋势，量化自变量对因变量的影响程度</p>
  <span id="more"></span>

<h2 id="1-分类数据分析"><a href="#1-分类数据分析" class="headerlink" title="1. 分类数据分析"></a>1. 分类数据分析</h2><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220306154751657.png" alt="image-20220306154751657"></p>
<h3 id="1-1-拟合优度检验"><a href="#1-1-拟合优度检验" class="headerlink" title="1.1 拟合优度检验"></a>1.1 拟合优度检验</h3><p>分析的是分类变量各类别是否有显著性差异，如某种比例指标，如满意度、生存率等。</p>
<p>以<strong>男女生对食堂的满意度</strong>为例进行解释：</p>
<p>满意度本质也是一个分类变量 $X$ &#x3D; “是否满意”，其中有两个变量值$x_1$ &#x3D; “满意”，$x_2$ &#x3D; “不满意”，假设抽样一共1000人，一共300人满意，其中男生100人，女生200人，则理论分布为：</p>
<p>$P(X &#x3D; 满意|Y&#x3D;男生) &#x3D; P(X &#x3D; 满意|Y&#x3D;女生) &#x3D; 0.3 $ ，</p>
<p>实际分布则为：</p>
<p>$P(X_0 &#x3D; 满意|Y_0&#x3D;男生) &#x3D; 0.1;P(X &#x3D; 满意|Y&#x3D;女生) &#x3D; 0.2 $ </p>
<p>检验的就是检验样本的实际频数分布是否和理论频数分布有实际差异，使用的检验统计量为（<a href="https://zhuanlan.zhihu.com/p/131286213">$\chi^2$统计量的推断过程</a>）：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220306162750746.png" alt="image-20220306162750746"></p>
<p>若检验结果显著，则说明差异显著，不同性别对食堂满意度有显著差异。</p>
<p><strong>一、基本思想</strong></p>
<p><strong>拟合优度检验主要</strong>用于检验 <strong>一个分类变量各类别的观察频数与期望频数是否有显著性差异，</strong> 或者说是检验一个分类变量各类别观察频数的分布是否符合某一理论分布。</p>
<p><strong>二、基本步骤</strong></p>
<p><strong>第1步：提出假设</strong></p>
<p><strong>第2步：计算期望频数和检验统计量</strong></p>
<p><strong>第3步：做出决策</strong></p>
<h3 id="1-2-独立性检验"><a href="#1-2-独立性检验" class="headerlink" title="1.2 独立性检验"></a>1.2 独立性检验</h3><p><strong>注意区分：</strong></p>
<p>拟合优度检验检验的是一个分类变量各类别的某种特征是否有显著差异，检验的是这种特征是否与该分类变量有关，这种特征是属于该分类变量的，问题一般为  <strong>“检验×××分类变量各类别的×××是否有显著差异”</strong> 。</p>
<p>而独立性检验则是分析两种分类变量之间的相关关系，一般没有从属关系，问题一般是 <strong>“检验×××分类变量跟×××变量是否有相关关系”</strong> ，如”性别对身高是否有影响“。注意问题是要分析某种分类变量的某种特征还是分析两个分类变量的关系！</p>
<p><strong>一、基本思想</strong></p>
<p>因为 <strong>独立性检验</strong> 主要是用于分析判断两个分类变量是否独立。它是在假设两分类变量独立的情况下计算出理论频数，从而再与观察频数作比较，看是否有显著性差异。</p>
<p><strong>二、基本步骤：</strong> </p>
<p><strong>第1步：提出假设</strong></p>
<p><strong>第2步：计算期望频数和检验统计量</strong></p>
<p><strong>第3步：做出决策</strong></p>
<p><strong>第4步：若拒绝原假设，还可对两分类变量的相关性程度进行进一步测量，测量方法有：① $\varphi$相关系数；② c系数； ③ V系数。</strong></p>
<p>​     </p>
<h2 id="2-数值型数据分析"><a href="#2-数值型数据分析" class="headerlink" title="2. 数值型数据分析"></a>2. 数值型数据分析</h2><h3 id="2-1-方差分析"><a href="#2-1-方差分析" class="headerlink" title="2.1 方差分析"></a>2.1 方差分析</h3><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220306170826538.png" alt="image-20220306170826538"></p>
<p><strong>1.</strong>   <strong>方差分析的基本思想是什么？</strong></p>
<p>方差分析是通过数据误差来源的分析来判断不同总体的均值是否相等，进而判断分类型自变量对数值型因变量是否有显著性影响。其基本思想如下：</p>
<p>（1）  误差分解</p>
<p>在方差分析中，数据的误差是用平方和来表示的，总平方和可以分解为组间平方和与组内平方和。组内误差只包含随机误差，而组间误差既包含随机误差，也包含系统误差。</p>
<p>（2）  误差分析</p>
<p>若组间误差中只包含随机误差，而没有系统误差，则组间误差和组内误差经过平均后的比值就应接近于1；反之，若组间误差包含系统误差，那比值就会大于1。当这个比值大到某种程度时，就认为因素的不同水平之间存在显著差异，即分类型自变量对数值型因变量有影响。</p>
<p><strong>2.</strong>   <strong>什么是方差分析？它与总体均值的t检验或z检验有什么不同？其优势是什么？</strong></p>
<p><strong>（要检验多个总体均值是否相等，为什么不作两两比较，而用方差分析法？）</strong></p>
<p>方差分析是通过数据误差来源的分析来判断不同总体的均值是否相等，进而判断分类型自变量对数值型因变量是否有显著性影响。</p>
<p><strong>差异：</strong></p>
<p>总体均值的t检验或z检验，一次只能研究两个样本，如果要检验多个总体的均值是否相等，两两比较那会很繁琐，且多次检验还会使犯第一类错误的概率相应增加；</p>
<p>方差分析则是同时考虑所有样本，因此排除了错误累积的概率，从而犯第一类错误的概率会小很多。</p>
<p><strong>优势：</strong></p>
<p>方差分析不仅可以提高检验效率，同时由于它是将所有的样本信息结合在一起，也增加了分析的可靠性。</p>
<p><strong>3.</strong>   <strong>简述方差分析的结构并对其进行解释。</strong></p>
<p>方差分析是通过数据误差来源的分析来判断不同总体的均值是否相等，进而判断分类型自变量对数值型因变量是否有显著性影响。方差分析的结构如下：</p>
<p>（1）  组内误差</p>
<p>它来自水平内部的数据误差，反映一个样本内部数据的离散程度，只含随机误差。反映组内误差大小的平方和称为组内平方和，记为SSE。它反映了每个样本内各观测值的离散状况。</p>
<p>（2）  组间误差</p>
<p>它来自不同水平之间的数据误差，反映不同样本之间数据的离散程度，包含随机误差和系统误差。反映组间误差大小的平方和称为组内平方和，记为SSA。它反映了样本均值之间的差异程度。</p>
<p>（3）  全部数据误差</p>
<p>它包含了随机误差和系统误差在内的所有误差。反映全部数据误差大小的平方和称为总平方和，记为SST。</p>
<p>总平方和（SST）&#x3D;组内平方和（SSE）+组间平方和（SSA），它反映全部观测值的离散状况。</p>
<p>​                 </p>
<h4 id="2-1-1-单因素方差分析（完全随机化设计）"><a href="#2-1-1-单因素方差分析（完全随机化设计）" class="headerlink" title="2.1.1 单因素方差分析（完全随机化设计）"></a>2.1.1 单因素方差分析（完全随机化设计）</h4><p>方差分析主要是通过检验各总体的均值是否相等来判断一个分类型自变量对一个数值型因变量是否有显著影响。</p>
<p>它是通过对数据误差来源的分析来判断不同总体均值是否相等。</p>
<p><strong>基本步骤如下：</strong></p>
<p><strong>（1）</strong> <strong>方差分析的基本假定及检验</strong></p>
<ol>
<li><p><strong>正态性假定：</strong> 每个总体都应服从正态分布。（检验方法有：P-P图、Q-Q图、Shapiro-Wilk检验、K-S检验等）</p>
</li>
<li><p><strong>方差齐性假定：</strong> 每个总体的方差$\sigma^2$必须相同。（检验方法有：Hartley检验、Bartlett检验、修正的Bartlett检验、Levene检验等）</p>
</li>
<li><p><strong>独立性假定：</strong> 各观测值之间相互独立。（实验前确保是独立的）</p>
</li>
</ol>
<p><strong>（2）效应检验</strong></p>
<p><strong>第1步：提出假设</strong></p>
<p>​    原假设：$H_0:\alpha_i &#x3D; 0(i&#x3D;1,2,…,a)$（因素A没有处理效应）</p>
<p>​    备择假设：$H_1:\alpha_i$至少有一个不为0（因素A有处理效应）</p>
<p><strong>第2步：计算单因素方差分析表</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220306164900612.png" alt="image-20220306164900612"> </p>
<p><strong>第3步：做出决策。</strong> 给定显著性水平$\alpha$ （  一般取0.01或0.05），先用样本数据计算出P值，若P&lt;$\alpha$则拒绝原假设；否则就不拒绝原假设。</p>
<p><strong>第4步：</strong> 若拒绝原假设，还需对自变量和因变量进行关系强度测量（$R^2 &#x3D; \frac{SSA}{SST}$）和多重比较（用来进一步检验到底哪些均值之间存在差异。常用LSD,HSD方法）。</p>
<h4 id="2-1-2-双因素方差分析"><a href="#2-1-2-双因素方差分析" class="headerlink" title="2.1.2 双因素方差分析"></a>2.1.2 双因素方差分析</h4><p><strong>一、</strong>    <strong>只考虑主效应的双因素方差分析（随机化区组设计）</strong></p>
<p><strong>二、</strong>    <strong>考虑交互作用的双因素方差分析（析因设计）</strong></p>
<p>方差分析主要是通过检验各总体的均值是否相等来判断两个分类型自变量对一个数值型因变量是否有显著影响。它通过对数据误差来源的分析来判断不同总体均值是否相等。</p>
<p><strong>基本步骤如下：</strong></p>
<p>（1）方差分析的基本假定及检验</p>
<p>（2）效应检验</p>
<p><strong>第1步：提出假设</strong></p>
<p><strong>检验因素A的假设：</strong></p>
<p>​    原假设：$H_0:\alpha_i &#x3D; 0(i&#x3D;1,2,…,a)$（因素A没有处理效应）</p>
<p>​    备择假设：$H_1:\alpha_i$至少有一个不为0（因素A有处理效应）</p>
<p><strong>检验因素B的假设：</strong></p>
<p>​    原假设：$H_0:\beta_i &#x3D; 0(i&#x3D;1,2,…,b)$（因素A没有处理效应）</p>
<p>​    备择假设：$H_1:\beta_i$至少有一个不为0（因素A有处理效应）</p>
<p><strong>检验交互效应的假设：</strong></p>
<p>​    原假设：$H_0:\gamma_{ij} &#x3D; 0$（无交互效应）</p>
<p>​    备择假设：$H_1:\gamma_{ij}$至少有一个不为0（有交互效应）</p>
<p><strong>第2步：计算方差分析表</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220306165919218.png" alt="image-20220306165919218"></p>
<p><strong>第3步：做出决策。</strong> 给定显著性水平$\alpha$ （  一般取0.01或0.05），先用样本数据计算出P值，若P&lt;$\alpha$则拒绝原假设；否则就不拒绝原假设。</p>
<p><strong>第4步：</strong> 若拒绝原假设，还需对自变量和因变量进行关系强度测量（$R^2 &#x3D; \frac{SSA}{SST}$）和多重比较（用来进一步检验到底哪些均值之间存在差异。常用LSD,HSD方法）。</p>
<h4 id="2-1-3-方差齐性检验"><a href="#2-1-3-方差齐性检验" class="headerlink" title="2.1.3 方差齐性检验"></a>2.1.3 方差齐性检验</h4><p><strong>图示法：</strong> 箱线图、残差图（通过观察各样本数据的离散程度来比较方差是否相等）</p>
<p><strong>检验法：</strong></p>
<p> Hartley检验：仅适用于样本量相等的场合。</p>
<p>Bartlett检验：样本量相等或不等均可，但是每个样本量不得低于5.</p>
<p>Bartlett检验：在样本量较小或较大，相等或不等的情况下均能使用。</p>
<p>Levene检验：它既可以用于正态分布总体，也可以用于非正态分布总体。</p>
<h4 id="2-1-4-多重比较"><a href="#2-1-4-多重比较" class="headerlink" title="2.1.4 多重比较"></a>2.1.4 多重比较</h4><p>多重比较是通过均值之间的配对检验来找出到底哪些处理之间存在显著差异。事前比较的常用方法有<strong>LSD法、Dunnett-t法</strong>；事后比较的常用方法有<strong>SNK法、Scheffe法；</strong>事前比较和事后比较都可以采用的方法有<strong>Bonferroni法、Sidak法</strong>。这些方法具体使用时的特点如下：</p>
<p><strong>LSD法：</strong> 即最小显著差法；是最简单的比较方法之一，它其实只是t检验的一种简单变形，未对检验水准做任何校正，只是在标准误计算上充分利用了样本信息。</p>
<p><strong>Dunnett-t法：</strong> 常用于多个实验组与一个对照组间的比较，因此使用此法时，应当指定对照组；</p>
<p><strong>SNK法：</strong> 是多重比较方法中检验尺度较严格的方法，也就是q检验；</p>
<p><strong>Scheffe法：</strong> 它实质上是对多组均数间的线性组合是否为0做假设检验，多用于各组样本容量不等时的比较；</p>
<p><strong>Sidak法：</strong> 它是在LSD法上加入了Sidak校正，通过校正降低每次两两比较的一类错误率，达到整个比较最终甲类错误率为α的目的；</p>
<p><strong>Bonferroni法：</strong> 它是Bonferroni校正在LSD法上的应用。</p>
<p>上述这些方法，使用的前提是各组均满足正态性和方差齐性，若满足正态性而不满足方差齐性时（此时尽量不作多重比较），可适宜采用Games-Howell等多重比较方法。</p>
<h3 id="2-2-回归分析"><a href="#2-2-回归分析" class="headerlink" title="2.2 回归分析"></a>2.2 回归分析</h3><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220306171018318.png" alt="image-20220306171018318"></p>
<h4 id="2-2-1-一元线性回归分析"><a href="#2-2-1-一元线性回归分析" class="headerlink" title="2.2.1 一元线性回归分析"></a>2.2.1 一元线性回归分析</h4><p><strong>（1）</strong>   <strong>数据清洗与标准化</strong></p>
<ol>
<li><p>数据清洗：主要是为了保证数据的完整性与准确性。</p>
</li>
<li><p>数据标准化：主要是为了消除量纲和变量自身变异大小和数值相差较大的影响。</p>
</li>
</ol>
<p><strong>（2）</strong>   <strong>相关性分析</strong></p>
<ol>
<li><p>图形法：散点图</p>
</li>
<li><p>相关系数测度：用样本相关系数$r$估计总体相关系数$\rho$（用t检验判断显著性）</p>
</li>
</ol>
<p><strong>（3）</strong>   <strong>参数估计</strong></p>
<ol>
<li><p>建立一元线性回归模型：$y &#x3D; \beta_0 + \beta_1 x + \varepsilon$</p>
</li>
<li><p>利用最小二乘法（OLS）计算参数的估计值：$\hat{\beta_0}，\hat{\beta_1}$</p>
</li>
<li><p>得出估计的回归方程：$y &#x3D; \hat{\beta_0} + \hat{\beta_1 x} $</p>
</li>
</ol>
<p><strong>（4）</strong>   <strong>显著性检验</strong></p>
<ol>
<li>拟合优度检验：</li>
</ol>
<p>​		①判定系数$R^2 &#x3D; \frac{SSR}{SST}$。</p>
<p>​		②估计标准误差：$s_e &#x3D; \sqrt{\frac{SSE}{n-2}}$  。</p>
<ol start="2">
<li>回归系数的显著性检验：t检验</li>
</ol>
<p><strong>（5）</strong>   <strong>古典假定检验</strong></p>
<ol>
<li><p>正态性检验：图示法有P-P图或Q-Q图等，检验法有W检验和K-S检验等</p>
</li>
<li><p>方差齐性检验：检验方法有Spearman等级（秩）相关检验、Prak检验、Glejser检验、Goldfeld-Quandt检验、White检验等</p>
</li>
<li><p>自相关检验：检验方法有DW检验，BG检验等</p>
</li>
</ol>
<p><strong>（6）   回归调优与预测：</strong> 若各模型假定成立，则可使用估计的回归方程进行预测；若不成立，则需要重新对模型进行调优。</p>
<h4 id="2-2-2-多元线性回归分析"><a href="#2-2-2-多元线性回归分析" class="headerlink" title="2.2.2 多元线性回归分析"></a>2.2.2 多元线性回归分析</h4><p><strong>（1）</strong> <strong>确定模型需要考虑的多个自变量，并假定因变量与各自变量之间是线性关系。</strong></p>
<p><strong>（2）</strong> <strong>数据清洗与标准化</strong></p>
<ol>
<li><p>数据清洗：主要是为了保证数据的完整性与准确性。</p>
</li>
<li><p>数据标准化：主要是为了消除量纲和变量自身变异大小和数值大小的影响。</p>
</li>
</ol>
<p><strong>（3）</strong> <strong>相关性分析</strong></p>
<ol>
<li><p>图示法：散点图（用于展示两个变量之间的关系），气泡图（用于展示三个变量之间的关系），矩阵散点图（用于展示多个变量之间的关系）</p>
</li>
<li><p>相关系数测度：用样本相关系数$r$估计总体相关系数$\rho$（用t检验判断显著性）</p>
</li>
</ol>
<p><strong>（4）</strong>   <strong>参数估计</strong></p>
<ol>
<li><p>建立一元线性回归模型：$y &#x3D; \beta_0 + \beta_1 x_1 + \beta_2 x_2 +…+\beta_k x_k +\varepsilon$</p>
</li>
<li><p>利用最小二乘法（OLS）计算参数的估计值：$\hat{\beta_0}，\hat{\beta_1}，\hat{\beta_2}，…，\hat{\beta_k}$</p>
</li>
<li><p>得出估计的回归方程：$y &#x3D; \hat{\beta_0} + \hat{\beta_1 x-1}  + \hat{\beta_2 x_2} +…+ \hat{\beta_k x_k}$</p>
</li>
</ol>
<p><strong>（5）</strong>   <strong>显著性检验</strong></p>
<ol>
<li>拟合优度检验：</li>
</ol>
<p>​		①调整的多重判定系数$R_a^2 &#x3D; 1 - (1-R^2) ×\frac{n-1}{n-k-1}$，其中，$R^2 &#x3D; \frac{SSR}{SST}$。</p>
<p>​		②估计标准误差：$s_e &#x3D; \sqrt{\frac{SSE}{n-k-1}}$  。</p>
<ol start="2">
<li><p>回归方程的显著性检验（F检验）：用于检验因变量同多个自变量的整体线性关系是否显著。</p>
</li>
<li><p>回归系数的显著性检验（t检验）：用于判断每个自变量对因变量的影响是否都显著。</p>
</li>
</ol>
<p><strong>（6）</strong>   <strong>古典假定检验</strong></p>
<ol>
<li><p>正态性检验：图示法有P-P图或Q-Q图等，检验法有W检验和K-S检验等</p>
</li>
<li><p>方差齐性检验：检验方法有Prak检验、Glejser检验、White检验等</p>
</li>
<li><p>自相关检验：检验方法有DW检验，BG检验等</p>
</li>
<li><p>无多重共线性：一般通过判定系数或方差扩大因子判断，克服方法有<strong>最优子集法、逐步回归法、岭回归法等</strong>。</p>
</li>
</ol>
<p><strong>（7）</strong> <strong>回归调优与预测：</strong>若各模型假定成立，则可使用估计的回归方程进行预测；若不成立，则需要重新对模型进行调优。</p>
<h4 id="2-2-3-模型的古典假定检验"><a href="#2-2-3-模型的古典假定检验" class="headerlink" title="2.2.3 模型的古典假定检验"></a>2.2.3 模型的古典假定检验</h4><p><strong>一、</strong>    <strong>正态性检验</strong></p>
<p>正态性假定对估计回归方程的参数影响不大，但对于假设检验和预测来说是必要的，因为可能会造成结果错误。<strong>其检验方法如下：</strong></p>
<p><strong>图示法：</strong></p>
<ol>
<li><p><strong>直方图或茎叶图：</strong> 若数据近似服从正态分布，则图形的形状与正态曲线应该相似。</p>
</li>
<li><p><strong>P-P图或Q-Q图：</strong> 若数据近似服从正态分布，则观测值和理论值形成的散点大致分布在第一象限的对角线上。</p>
</li>
</ol>
<p><strong>计算法：</strong></p>
<ol>
<li><p><strong>偏态系数（SK）和峰态系数（K）：</strong> 当SK&#x3D;K&#x3D;0时，分布呈正态。因此，若数据近似服从正态分布，其SK和K都接近于0。</p>
</li>
<li><p><strong>W检验（适用于小样本）和D检验：</strong> 通过正态性检验计算P值，当P值大于给定的显著性水平时，表明数据服从正态分布。</p>
</li>
</ol>
<p><strong>均值线性回归是否要求变量服从正态分布？</strong></p>
<ol>
<li><p>针对解释变量：因为在古典假定中要求其是非随机变量，故不会有正态性要求。</p>
</li>
<li><p>针对随机误差项：在古典假定中，要求其为正态分布。</p>
</li>
<li><p>针对被解释变量：虽然没有明确要求其为正态分布，但在古典假定满足的前提下，也是符合正态分布的。</p>
</li>
</ol>
<p><strong>若不服从正态，怎么解决？</strong></p>
<ol>
<li><p>增大样本量</p>
</li>
<li><p>利用Box-Cox变换将其变换成符合正态性的变量</p>
</li>
</ol>
<p><strong>二、</strong>    <strong>异方差检验</strong></p>
<p><strong>1.</strong>   <strong>原因：</strong> 模型中省略的解释变量、测量误差、截面数据中总体各单位的差异、模型函数形式的设定错误。</p>
<p><strong>2.</strong>   <strong>后果：</strong> </p>
<p>最小二乘估计量不满足有效性，且参数方差的估计量也是有偏的；</p>
<p>参数的显著性检验和置信区间的建立发生困难；</p>
<p>预测精确度降低。</p>
<p><strong>3.</strong>   <strong>检验方法</strong></p>
<p><strong>图示法：</strong> 利用因变量y（或残差e）与解释变量x的散点图判断，若样本散点图中y的分布（或e的取值）随着x而变化则可能出现异方差。</p>
<p><strong>Spearman等级（秩）相关检验：</strong> 这是一种非参数检验，它假设Spearman等级（秩）的相关系数为0，若拒绝该假设则说明存在异方差。</p>
<p><strong>Prak检验和Glejser检验：</strong> 两种方法都是将随机误差项的方差看作是解释变量的某个函数，通过检验两变量之间的回归方程来判断是否存在异方差。其中Glejeser不仅可以说明异方差的存在，还可以确定其具体形式。</p>
<p><strong>White检验：</strong> 它通过分析方差是否与解释变量有某些形式的联系来判断异方差性。它能判断出是由哪一个变量引起的异方差，适用于观测值为大样本的情形。</p>
<p><strong>4.</strong>   <strong>异方差的修正</strong></p>
<p><strong>加权最小二乘法：</strong> 它是通过对原模型加权，使其变成一个新的不存在异方差性的模型，然后再采用普通最小二乘法估计其参数。</p>
<p><strong>采用方差的稳健估计量：</strong> 通过构造<strong>异方差性一致性方差</strong>来解决异方差性问题，它的优点在于不需要知道异方差性的具体形式。</p>
<p><strong>模型的对数变换：</strong> 通过对线性模型作对数变化降低异方差性的影响。</p>
<p><strong>三、</strong>    <strong>自相关检验（主要是时间序列中）</strong></p>
<p><strong>1.</strong>   <strong>原因：</strong> 被解释变量的自相关、解释变量的省略、随机项本身存在自相关、回归模型函数形式设定错误、经济变量的惯性作用</p>
<p><strong>2.</strong>   <strong>后果：</strong></p>
<p>最小二乘估计量不满足有效性，且参数方差的估计量也是有偏的；</p>
<p>参数的显著性检验和置信区间的建立发生困难；</p>
<p>预测精确度降低。</p>
<p><strong>3.</strong>   <strong>检验方法</strong></p>
<p><strong>图示法：</strong></p>
<ol>
<li><p>绘制残差  的散点图，若  存在线性相关则表明随机项u存在自相关。</p>
</li>
<li><p>绘制残差时间序列图，如果  随时间t的变化存在明显的规律性，则随机项存在自相关。</p>
</li>
</ol>
<p><strong>DW检验：</strong> 适用于检验小样本的随机误差项一阶自相关。</p>
<p><strong>BG检验</strong>： 它是基于拉格朗日乘数的检验，解决了不满足DW检验条件的情况，可以进行高阶自相关检验。</p>
<p><strong>解决方案：一阶差分法、广义差分法、使用稳健方差估计量</strong></p>
<h4 id="2-2-4-残差分析（识别异常值X、Y）"><a href="#2-2-4-残差分析（识别异常值X、Y）" class="headerlink" title="2.2.4 残差分析（识别异常值X、Y）"></a>2.2.4 残差分析（识别异常值X、Y）</h4><p><strong>一、</strong>    <strong>关于因变量Y异常值的识别</strong></p>
<p>在残差分析中，一般认为超过  的残差为异常值，常用的残差有：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220306172705587.png" alt="image-20220306172705587"></p>
<p><strong>二、</strong>    <strong>关于自变量X的异常值识别</strong></p>
<ol>
<li><p>用杠杆值 （或中心化杠杆值  ）判断：如果其值大于2倍或3倍的平均杠杠值  （或中心化的平均杠杆值  ）就是为异常值。</p>
</li>
<li><p>用库克距离判别：当  时，认为不是异常值；当  时认为是异常值。</p>
</li>
</ol>
<p><strong>异常值的处理方法:</strong></p>
<p>1.删除含有异常值的记录</p>
<p>2.将异常值视为缺失值，交给缺失值处理方法来处理</p>
<p>3.用平均值来修正</p>
<p>4.不处理，单独对其分析</p>
<h4 id="2-2-5-共线性诊断与变量筛选"><a href="#2-2-5-共线性诊断与变量筛选" class="headerlink" title="2.2.5 共线性诊断与变量筛选"></a>2.2.5 共线性诊断与变量筛选</h4><p><strong>一、共线性诊断</strong></p>
<p>多重共线性有两种情形：1.完全多重共线性；2.不完全多重共线性。</p>
<ol>
<li><p><strong>产生原因主要有：</strong></p>
<p>经济变量之间具有共同变化趋势；利用截面数据建立模型也可能出现多重共性性；模型中包含滞后变量；样本数据的自身原因。</p>
</li>
<li><p><strong>完全多重共线性违反了古典假定，它产生的后果有：</strong></p>
<p>参数的最小二乘估计量不确定且其方差变为无穷大。</p>
</li>
<li><p><strong>不完全多重共线性没有违反古典假定，它产生的后果有：</strong></p>
<p>估计结果不好解释；参数估计值的方差增大；参数估计的置信区间变大；假设检验容易作出错误的判断。</p>
</li>
<li><p><strong>检验</strong></p>
</li>
</ol>
<p>（1）通过散点图判断两变量的相关性</p>
<p>（2）通过相关系数判断相关性的大小</p>
<p>（3）采用经验判别，通常出现下列情况暗示存在多重共线性：</p>
<p>​			① $R^2$较高；</p>
<p>​			② 回归方程的F检验显著但回归系数的t检验大多都不显著；</p>
<p>​			③ 容忍度：通常认为其值小于0.1时，存在严重的多重共线性。</p>
<p>​			④ 方差扩大因子（VIF）：通常认为其值大于10时，存在严重的多重共线性。（条件指数CI——划分100——1000）</p>
<p><strong>二、变量筛选</strong></p>
<p><strong>克服多重共线性的方法</strong></p>
<p><strong>（1）直接经验法：</strong> 包括增加样本值、删去不重要的解释变量等。</p>
<p><strong>（2）最优子集法</strong>： 通过对所有可能的变量组合模型一一进行测试，利用判别准则（如AIC，BIC等）得到最优的自变量组合。其缺点是计算量太大，适合于筛选变量较少的情况。</p>
<p><strong>（3）逐步回归法：</strong> 与最优子集法类似，不同之处在于不对所有模型进行测试，而是采用向前选择、向后剔除的方式进行模型测试，然后通过判别准则选出最好的自变量组合。</p>
<p><strong>（4）岭回归法：</strong> 是一种改良的最小二乘估计法，通过放弃最小二乘法的无偏性，以损失部分信息、降低精度为代价获得回归系数更为符合实际、更可靠的回归方法，对病态数据的拟合要强于最小二乘法。</p>
<p><strong>（5）Lasso回归法：</strong> 它是一种压缩估计的方法，通过对最小二乘估计加入罚约束，使某些系数为0，从而筛选出一组合适的自变量。</p>
<p><strong>（6）变量降维法：</strong> 主要有主成分回归（PRC）和偏最小二乘回归（PLS）两种方法。它们是通过把K个预测变量投影到m维空间（m&lt;k），利用投影得到的不相关的自变量组合建立线性模型。它们的不同之处之处在于PRC选择自变量的方法与因变量无关，而PLS则考虑了与因变量的相关性。</p>
<p><strong>其中，自变量选择方法有：</strong> 最优子集法、逐步回归法、Lasso回归法、变量降维法</p>
]]></content>
      <categories>
        <category>数据分析能力</category>
        <category>统计分析方法</category>
      </categories>
      <tags>
        <tag>统计推断</tag>
      </tags>
  </entry>
  <entry>
    <title>推断统计学</title>
    <url>/p/b56a4992/</url>
    <content><![CDATA[<p>本文主要介绍使用样本推断总体的统计学方法，主要包括参数估计和假设检验。参数估计使用样本统计量估计总体参数，假设检验则使用样本数据推断对某一总体的假设是否成立，两者的理论基础都是大数定律和中心极限定理。</p>
  <span id="more"></span>

<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220305160649887.png" alt="image-20220305160649887"></p>
<h2 id="第一部分-抽样分布"><a href="#第一部分-抽样分布" class="headerlink" title="第一部分 抽样分布"></a>第一部分 抽样分布</h2><p><strong>1.  简述大数定律和中心极限定理及其意义。</strong></p>
<p><strong>（1）大数定律：</strong> 在随机事件的大量重复出现中，往往呈现几乎必然的规律，这个规律就是大数定律。通俗地说就是，<strong>在试验不变的条件下，重复试验多次，随机事件的频率近似于它的概率。偶然中包含着某种必然。</strong></p>
<p><strong>（2）中心极限定理：</strong> 在任意分布的总体中抽取样本，其样本均值的极限分布为正态分布。该定理概括了样本均值和总体分布之间的关系，样本均值分布在统计推断中的具体应用。</p>
<p><strong>2.  简述卡方分布、t分布、F分布的定义、特点、应用。</strong></p>
<p><strong>（1）$ \chi^2$分布：</strong></p>
<p><strong>定义：</strong> 设随机变量 $x_1,x_2,x_3…,x_n$相互独立且服从正态分布，则它们的平方和 $\sum_{i&#x3D;1}^{n}{x_i^2}$服从自由度为n的$ \chi^2$分布。</p>
<p><strong>特点：</strong> （1）自由度不同，$ \chi^2$分布的形状则不同；（2）它是一种非对称分布，当自由度n相当大时，接近于正态分布；（3）它的变量值始终为正。</p>
<p><strong>应用：</strong> （1）用来构造t分布和F分布；（2）在拟合优度检验和独立性检验中用它来构造$ \chi^2$检验统计量；</p>
<p><strong>（2）$t$ 分布：</strong></p>
<p><strong>定义：</strong> 设随机变量X与Y相互独立，$X$~$ N(0,1) $, $Y$ ~$N(0,1)$ ，则$\frac{X}{Y&#x2F;n}$ 服从自由度为n的t分布。</p>
<p><strong>特点：</strong> （1）自由度不同，分布的形状则不同；（2）它是一种对称分布，当自由度n相当大时，接近于正态分布；（3）它的密度函数为偶函数。</p>
<p><strong>应用：</strong> （1）用于小样本均值的参数估计和假设检验。 </p>
<p><strong>（3）$F$分布：</strong></p>
<p><strong>定义：</strong> 设随机变量X与Y相互独立，$X$ ~ $\chi^2(n)$，$Y$ ~ $\chi^2(m)$ , 则$\frac{X&#x2F;n}{Y&#x2F;m}$服从第一自由度为n，第二自由度为m的F分布。</p>
<p><strong>特点：</strong> （1）自由度不同，分布的形状则不同；（2）它是一种非对称分布；（3）它的变量值始终为正。</p>
<p><strong>应用：</strong> （1）用于两总体方差比的参数估计和假设检验（2）在方差分析和回归分析中用于对参数进行统计推断。</p>
<p><strong>3.   重复抽样和不重复抽样相比，抽样均值分布的标准差有什么不同？</strong></p>
<p>（1）  在重复抽样条件下，样本均值$\overline{x}$ 的方差为$ \frac{\sigma^2}{n}$ ，在不重复抽样条件下，样本均值$\overline{x}$ 的方差为$ \frac{N-n}{N-1} \frac{\sigma^2}{n}$ ；</p>
<p>（2）  在无限总体不重复情况下或有限总体$n\rightarrow N$  ，$ \frac{N-n}{N-1} \rightarrow 1 $  ，则$\overline{x}$ 的方差可近似为$ \frac{\sigma^2}{n}$ </p>
<p><strong>4.  什么是统计量的标准误差？它有什么用途？</strong></p>
<p>统计量的标准误差是指样本统计量分布的标准差。它用于衡量样本统计量的离散程度，在参数估计和假设检验中，它是用于衡量样本统计量与总体参数之间差距的一个重要尺度。</p>
<p>标准误差与标准差的区别：标准差是根据原始观测值计算的，反映一组原始数据的离散程度。而标准误差是根据样本统计量计算的，反映统计量的离散程度。比如，样本均值的标准误差是根据多个样本的样本均值计算的，反映样本均值的离散程度。</p>
<p><strong>5.  什么是抽样平均误差？影响抽样平均误差的因素有哪些？</strong></p>
<p>抽样平均误差是指抽样平均数（或抽样成数）的标准差。它反映抽样平均数（或抽样成数）与总体平均数（或总体成数）的平均误差程度。</p>
<p>影响抽样平均误差的因素有四个：</p>
<p>（1）  样本单位数目。在其他条件不变的情况下，抽样数目越多，抽样误差越小；抽样数目越少，抽样误差越大。当n&#x3D;N时，就是全面调查，抽样误差此时为零。</p>
<p>（2）  总体标志变异程度。其他条件不变的情况下，总体标志变异程度越大，抽样误差越大；总体标志变异程度越小，抽样误差越小。</p>
<p>（3）  抽样方法。一般讲，不重复抽样的抽样误差要小于重复抽样的抽样误差。当n相对N非常小时，两种抽样方法的抽样误差相差很小，可忽略不计。</p>
<p>（4）  抽样组织方式。采用不同的抽样组织方式，也会有不同的抽样误差。一般讲分层抽样的抽样误差较小，而整群抽样的抽样误差较大。</p>
<h2 id="第二部分-参数估计"><a href="#第二部分-参数估计" class="headerlink" title="第二部分 参数估计"></a>第二部分 参数估计</h2><p>参数估计就是用样本统计量去估计总体参数。</p>
<p><strong>1.</strong> <strong>点估计和区间估计及其区别与联系</strong></p>
<p><strong>点估计</strong>就是用样本统计量的某个取值直接作为总体参数的估计值。</p>
<p><strong>区间估计</strong>是在点估计的基础上，给出总体参数估计的一个估计区间，该区间通常由样本统计量加减估计误差组成。</p>
<p><strong>点估计的不足</strong>： 由于样本是随机的，抽出一个具体的样本得到的估计值可能不同于总体真值，因此还必须给出点估计值的可靠性，而其可靠性是由抽样的标准误差来衡量的，这表明一个具体的<strong>点估计值无法给出估计的可靠性度量，也无法说明点估计值与总体参数的接近程度，</strong>因此需要对总体参数进行区间估计。</p>
<p><strong>2.</strong> <strong>区间估计的基本原理是什么？</strong></p>
<p>下面以总体均值的区间估计为例来说明区间估计的基本原理：</p>
<p>首先，由样本均值的抽样分布可知，在重复抽样或无限总体抽样的情况下，$ \overline{x}$ ~ $ N(\mu, \frac{\sigma^2}{n})$，由此可以求出$ \overline{x}$ 落在总体均值$\mu$两侧任何一个抽样标准差范围内的概率，而实际估计中，是要估计未知总体均值$\mu$，由于$ \overline{x}$ 与$\mu$的距离是对称的，因此，当求得某个样本均值$ \overline{x_0}$ 落在$\mu$的两个标准差范围内，反过来，$\mu$也就被包含在以$ \overline{x_0}$ 为中心左右两个标准差范围内。</p>
<p>因此约有95%的样本均值会落在$\mu$的两个标准差范围内时，也就是说，约有95%的样本均值所构造的两个标准差的区间会包含$\mu$。</p>
<p><strong>3.</strong> <strong>置信区间、置信度、精度（或误差范围——精度的反义）及其关系</strong></p>
<p><strong>置信区间：</strong> 是指在区间估计中，由样本统计量所构造的总体参数的估计区间。</p>
<p><strong>置信水平（置信度）：</strong> 如果将构造置信区间的步骤重复多次，置信区间中包含总体参数真值的次数所占的比率就是置信度。 </p>
<p><strong>置信区间与置信度的关系：</strong>当样本量给定时，置信区间的宽度随着置信水平的增大而增大；当置信水平固定时，置信区间的宽度随样本量的增大而减小，也就是说，较大的样本所提供的有关总体的信息要比较小的样本多。</p>
<p><strong>置信度与精度的关系：</strong>当样本量给定时，误差范围随着置信度的增大而增大，即精度随置信度的增加而减小；当置信度固定时，误差范围随着样本量的增大而减小。因此，可通过增加样本量来提高精度。</p>
<p><strong>4.</strong> <strong>对置信区间的深层次思考</strong></p>
<p>（1）  用某种方法构造的所有区间中，有95%的区间包含总体参数的真值，5%的区间不包含，该区间称为<strong>置信水平为95%的置信区间。</strong></p>
<p>（2）   总体参数的真值是固定未知的，而样本构造的区间不是固定的；<strong>置信区间是一个随机区间</strong>，会因样本不同而变化，并且不是所有的区间都包含总体。</p>
<p>（3）   实际估计中往往只抽取一个样本，因此用该样本所构造的<strong>特定区间“总是包含”或“绝对不包含”参数的真值</strong>，不存在“以多大的概率包含总体参数”的问题。概率只是用来衡量多次抽样得到的区间中大概有多少区间包含参数的真值。</p>
<p>而“明天有80%的几率下雨”是贝叶斯学派的说法！</p>
<p><strong>5.</strong> <strong>一个总体参数的区间估计（重复抽样或无限总体抽样情况下）</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220305163943512.png" alt="image-20220305163943512"></p>
<p><strong>6.</strong> <strong>两个总体参数的区间估计（重复抽样或无限总体抽样情况下）</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220305164008254.png" alt="image-20220305164008254"></p>
<p><strong>7.   样本量的确定</strong></p>
<p>$ \overline{x}$ ~ $ N(\mu, \frac{\sigma^2}{n})$，标准化后：$ z &#x3D; \frac{\overline{x}-\mu}{\sigma &#x2F; \sqrt{n}}$ ~  $ N(0, 1)$</p>
<p>假设显著性水平为$\alpha$， 则总体均值$\mu$ 在$1-\alpha$ 置信水平下单置信区间为：$[\ \overline{x}\pm z_{\alpha&#x2F;2}\ \frac{\sigma}{\sqrt{n}}\ ]$</p>
<p>计算过程：$P(|\frac{\overline{x}-\mu}{\sigma&#x2F;\sqrt{n}}|≤z_{\alpha&#x2F;2}) &#x3D; 1-\alpha &#x3D;&gt;-z_{\alpha&#x2F;2} ≤ \frac{\overline{x}-\mu}{\sigma&#x2F;\sqrt{n}} ≤ z_{\alpha&#x2F;2} &#x3D;&gt; \overline{x}- z_{\alpha&#x2F;2}\ \frac{\sigma}{\sqrt{n}} ≤ \mu ≤ \overline{x}+ z_{\alpha&#x2F;2}\ \frac{\sigma}{\sqrt{n}}$</p>
<p>样本均值：$\overline{x_0} &#x3D; \frac{\sum_{i&#x3D;1}^{n}{x_i}}{n}$</p>
<p>样本方差：$s^2 &#x3D; \frac{\sum_{i&#x3D;1}^{n}(x_i - \overline{x_0})^2}{n-1}$</p>
<p>设估计误差为$ E &#x3D; z_{\alpha&#x2F;2}\ \frac{\sigma}{\sqrt{n}}$ ，则$ n &#x3D; \frac{(z_{\alpha&#x2F;2}^2)\sigma^2}{E^2}$ </p>
<h2 id="第三部分-假设检验"><a href="#第三部分-假设检验" class="headerlink" title="第三部分 假设检验"></a>第三部分 假设检验</h2><p>对总体参数提出假设的基础上，利用样本信息来判断假设是否成立。</p>
<p><strong>1.  假设检验的基本思想、特点？</strong></p>
<p>假设检验依据的基本原理是小概率原理，在检验中小概率通常人为事先指定。</p>
<p>特点：（1）采用逻辑上的反正法，先假设为真，再进行检验是否有足够的理由拒绝该假设。（2）假设检验采用的反证法带有概率性质，即事先根据具体情况人为规定“小概率”。</p>
<p><strong>2.  “假设检验的基本思路是：概率性质的反证法；主要依据的是：小概率事件原理”。</strong></p>
<p> 假设检验采用的是概率性质的反证法，遵循的推断依据是统计中的“小概率原理”，即小概率事件在一次试验中几乎不会发生。例如：一种产品的次品率假设其为0.01%，它是小概率，随机抽取一个产品是次品的概率“几乎不可能发生”，若发生了，则可断定该产品的次品率不是很小，否则我们就不会轻易抽到次品了。</p>
<p>假设检验就是利用样本信息对事先假定的总体情况作出推断，它不是毫无根据的，而是在一定的统计概率下支持这种推断。</p>
<p><strong>4.  为何在决策时要避免使用“接受原假设H0这样的措辞？</strong></p>
<p>（1） 在假设检验时，当拒绝原假设时，表明样本提供的证据证明原假设是错误的；当没有拒绝原假设时，只是说明该样本没有足够的证据证明假设是错误的，而没法证明假设是正确的。</p>
<p>（2） 此外，假设检验中通常是先控制犯第一类错误  ，而犯第二类错误的大小未知，故为了避免犯第二类错误的风险，一般要避免使用这种措辞。</p>
<p><strong>5.  单侧检验的建立问题</strong></p>
<p>（1）   先判断统计量是正还是负，若为正则选右侧，若为负则选左侧；</p>
<p>（2）   若指标为正向指标，我们希望他越大越好，则选择右侧检验；</p>
<p>（3）   若指标为正向指标，我们希望他越小越好，则选择左侧检验；</p>
<p><strong>6.  假设检验中的两类错误及其区别与联系</strong></p>
<p><strong>第一类错误</strong>是原假设  为真却被拒绝了，犯这种错误的概率记为$\alpha$，故又叫$\alpha$错误或弃真错误，其中 ， $\alpha &#x3D; P{第一类错误} &#x3D; P{拒绝H_0|H_0正确} $</p>
<p><strong>第二类错误</strong>是原假设错误却没有被拒绝，犯这种错误的概率记为$\beta$，故又叫$\beta$错误或取伪错误，其中， $\beta &#x3D; P{第二类错误} &#x3D; P{不拒绝H_0|H_0错误} $</p>
<p>  在实际生活当中，第一类错误代表的是生产者的风险（不可的事却做了），第二类错误是代表的是使用者的风险（可做的事却没做）。</p>
<p>  <strong>联系：</strong>对于一定的样本量  ，如果减小错误  ，就会增大犯错误  的机会；若减小错误  ，也会增大犯错误  的机会。要使  和  同时变小，只有增大样本量。</p>
<p><strong>7.  假设检验中应该先控制哪一类错误？</strong></p>
<p>由于在样本量一定的情况下，  错误和  错误此消彼长，一般来说，发生哪一类错误的后果更严重，就应该首先控制哪类错误发生的概率。但由于犯第一类错误的概率可以由研究者事先控制，而犯第二类错误的概率则相对难以计算，因此在假设检验中，往往先控制第一类错误。</p>
<p><strong>8.  临界值法及其优缺点？</strong></p>
<p>临界值法是通过事先给定的显著性水平计算出临界值，给出拒绝域，然后再根据样本计算统计量看是否落入拒绝域中。其好处是，在给定了显著性水平后，拒绝域的位置就确定了，进行决策界限清晰，但缺陷是进行决策面临的风险是笼统的，而根据不同的样本结果进行决策时，面临的风险是有差别的，为了精确的反映风险度，可以利用P值进行决策。</p>
<p><strong>9.  P 值及其决策原理？</strong></p>
<p>P值就是当原假设为真时所得到的样本观测结果或更极端结果出现的概率。如果P值很小，说明这种情况发生的概率很小，而如果出现了，根据小概率原理，就有理由拒绝原假设，P值越小，拒绝原假设的理由就越充分。因为P值本身就代表了显著性水平，所以可以用它直接做决策，或者也可以与给定的显著性水平比较做决策。P值的大小取决于三个因素：样本数据与原假设的差异；样本量大小；假设参数的总体分布。</p>
<p><strong>10.  置信区间法及其决策原理</strong></p>
<p>当给定显著性水平后，可以用区间估计得出未知参数的置信区间，再通过计算样本统计量，看是否落入置信区间中，若落入则不拒绝，若不落入则拒绝。</p>
<p><strong>11.  假设检验的步骤</strong></p>
<p>第一步：提出假设。</p>
<p>  原假设  ：</p>
<p>   备择假设  ：</p>
<p> 第二步：计算检验统计量。</p>
<p>​    ……</p>
<p> 第三步：做出决策。给定显著性水平  （  一般取0.01或0.05）。若采用临界值法决策，则先通过显著性水平  计算出临界值确定拒绝域，若检验统计量值落入拒绝域则拒绝原假设，否则就不拒绝原假设。</p>
<p>若采用P值法决策，则先用样本数据计算出P值，再与事先人为给定的显著性水平比较，若P&lt;  则拒绝原假设；否则就不拒绝原假设。</p>
]]></content>
      <categories>
        <category>数据分析能力</category>
        <category>统计分析方法</category>
      </categories>
      <tags>
        <tag>统计推断</tag>
      </tags>
  </entry>
  <entry>
    <title>描述统计学</title>
    <url>/p/20d88d5d/</url>
    <content><![CDATA[<p>本文主要介绍了数据分析统计基础——统计描述。数据分析的前提就是要学会观察数据，了解数据，统计描述包括对数据的图表描述和统计量描述，它能让我们对数据有一个直观的认识，比如数据是否完整、是否存在异常、服从什么分布、存在什么规律等，为数据预处理和数据分析做准备。</p>
  <span id="more"></span>

<h2 id="统计学基本概念"><a href="#统计学基本概念" class="headerlink" title="统计学基本概念"></a>统计学基本概念</h2><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220305122313250.png" alt="image-20220305122313250"></p>
<p><strong>1.</strong>   <strong>举例解释下列概念：总体、样本、参数、统计量</strong></p>
<p><strong>总体</strong>是包含研究对象的全部个体的集合，组成总体的每个元素称为个体。比如：要检验一批灯泡的使用寿命，这批灯泡构成的集合就是总体，每个灯泡就是一个个体。</p>
<p><strong>样本</strong>是从总体中抽取的一部分元素的集合，构成样本的元素数目称为样本量。抽样的目的就是根据样本信息去推断总体特征。比如：从一批灯泡中随机抽取100个来推断这批灯泡的使用寿命，这100个灯泡就构成了一个样本，100就是该样本的样本量。</p>
<p><strong>参数</strong>是用来描述总体特征的概括性数字度量，它是研究者想要了解的总体的某种特征值。由于总体数据通常是未知的，所以参数是一个未知的常数。</p>
<p><strong>统计量</strong>是用来描述样本特征的概括性数字度量。它是根据样本数据计算出来的，由于抽样的随机性，因此统计量是样本的函数。</p>
<p><strong>2.</strong>   <strong>分类数据、顺序数据和数值型数据的区别。</strong></p>
<p>按照所采用的计量尺度的不同，可以将统计数据分为分类数据、顺序数据和数值型数据。</p>
<p><strong>分类数据</strong>是只能归于某一类别的非数字型数据，它是对事物进行分类的结果，数据表现为类别，是用文字来表述的。</p>
<p><strong>顺序数据</strong>是只能归于某一有序类别的非数字型数据。顺序数据虽然也是类别，但这些类别是有序的。</p>
<p><strong>数值型数据</strong>是按数字尺度测量的观测值，其结果表现为具体的数值。现实中所处理的大多数数据都是数值型数据。</p>
<p>分类数据和顺序数据说明的是事物的品质特征，通常是用文字来表述的，其结果均表现为类别，因而也可统称为定性数据或称品质数据；数值型数据说明的是现象的数量特征，通常是用数值来表现的，因此也可以称为定量数据或数量数据。</p>
<p><strong>3.</strong>   <strong>统计的基本任务是什么？如何理解它们的内在关系？</strong></p>
<p>统计的基本任务是对经济社会发展情况进行统计调查、统计分析，提供统计资料和统计咨询意见、实行统计监督。</p>
<p>统计的信息、咨询和监督三大职能，是相互作用、相互促进、相辅相成和密切联系的。信息职能是统计最基本的职能，是保证咨询和监督职能得以有效发挥的前提。咨询和监督职能是在信息职能基础上的拓展和深化，是在充分发挥信息资源作用的基础上，对统计整体效能的提高。</p>
<p><strong>4.</strong>   <strong>什么叫变异、变量和变量值，试举例说明。</strong></p>
<p>标志在同一总体不同总体单位之间的差别称为变异。例如：人的性别标志表现为男、女；年龄标志表现为20岁、30岁等。</p>
<p>变异标志又称为变量，是说明现象某种特征的概念，其特点是从一次观察到下一次观察结果会呈现出差别或变化。变量的具体取值称为变量值。具体包括：</p>
<p>（1）  分类变量（2）  顺序变量（3）  数值型变量</p>
<h2 id="数据的描述统计"><a href="#数据的描述统计" class="headerlink" title="数据的描述统计"></a>数据的描述统计</h2><p> <img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220305114123496.png" alt="image-20220305114123496"></p>
<h3 id="数据收集"><a href="#数据收集" class="headerlink" title="数据收集"></a>数据收集</h3><p><strong>一、</strong>    <strong>数据的来源</strong></p>
<p>从使用者的角度，分为间接来源和直接来源。</p>
<ol>
<li><strong>数据的间接来源</strong></li>
</ol>
<p>二手数据的搜集比较容易，采集数据的成本低，且作用广泛。局限</p>
<p>性在于二手资料并不是为特定的研究问题而产生的，即其针对性不够。</p>
<p>​    二手数据的评估（3W1H——who why when how）</p>
<ol start="2">
<li><p><strong>数据的直接来源</strong>——调查数据或实验数据</p>
</li>
<li><p><strong>统计数据质量的基本标准：</strong></p>
</li>
</ol>
<p>（1）准确：用数字语言来反映客观实际；</p>
<p>（2）快速：统计信息服务必须具有时效性和紧迫性；</p>
<p>（3）完整：调查单位没有遗漏，调查项目没有缺陷，资料数据齐全；</p>
<p>（4）精炼：统计信息具有针对性、时效性、精确性。</p>
<p><strong>二、</strong>    <strong>调查数据</strong></p>
<ol>
<li><strong>概率抽样</strong>——包括等概率抽样和不等概率抽样</li>
</ol>
<p>概率抽样也称为随机抽样，是指遵循随机原则进行的抽样，总体中每个单位都有一定的机会被选入样本。</p>
<p>其特点有：（1）抽样时是按一定的概率以随机原则抽取样本。（2）每个单位被抽中的概率是已知的，或是可以计算出来的。（3）当用样本对总体目标量进行估计时，要考虑到每个样本单位被抽中的概率。</p>
<p><strong>常用抽样方式有：</strong></p>
<p><strong>（1）</strong>  <strong>简单随机抽样</strong></p>
<p>定义：从包括总体N个单位的抽样框中随机地、一个一个地抽取n个单位作为样本。</p>
<p>特点：简单，直观。但抽样框不易构造，抽出单位分散、估计效率不高。</p>
<p><strong>（2）</strong>  <strong>分层抽样</strong></p>
<p>定义：将抽取单位按某种特征或某种规则划分为不同的层，然后从不同的层中独立、随机地抽取样本。</p>
<p>特点：样本结构与总体结构类似，提高了估计精度，组织调查方便，还可对各层的目标量进行估计。</p>
<p><strong>（3）</strong>  <strong>整群抽样</strong></p>
<p>定义： 将总体中若干个单位合并为组，这样的组称为群。抽样时直接抽取群，然后对选中群中的所有单位全部实施调查。</p>
<p>特点： 抽取样本时只需要群的抽样框，简化了工作量，但估计精度较差。</p>
<p><strong>（4）</strong>  <strong>系统抽样</strong></p>
<p>定义：将总体中的所有单位（抽样单位）按一定顺序排列，在规定范围内随机地抽取一个单位作为初始单位，然后按事先规定好的规则确定其样本单位。</p>
<p>特点：操作简便，但对估计量方差的估计比较困难。</p>
<p><strong>（5）</strong>  <strong>多阶段抽样</strong></p>
<p>定义：采用类似整群抽样的方法，首先抽取群，然后再抽取群中的部分单位。这里群是初级抽样单位，第二阶段抽取的是最终抽取单位。</p>
<p>特点：常用于大规模抽样当中。</p>
<ol start="2">
<li><strong>非概率抽样</strong></li>
</ol>
<p>指抽取样本时不是依据随机原则，而是根据研究目的对数据的要求，采用某种方式从总体中抽取部分单位对其实施调查。</p>
<p><strong>非概率抽样一般可分为以下几种类型：</strong></p>
<p>（1）  方便抽样：调查过程中由调查员依据方便原则抽样，其特点是成本低，易实施。</p>
<p>（2）  判断抽样：研究人员根据经验、判断和对研究对象的了解，有目的地选择样本，根据不同目的有重点抽样、典型抽样、代表抽样。</p>
<p>（3）  自愿抽样：被调查者自愿参加</p>
<p>（4）  滚雪球抽样：调查对象继续推荐另一些调查对象</p>
<p>（5）  配额抽样：类似分层抽样，先分类，再从各类中用方便抽样或判断抽样的方式选取样本单位。</p>
<ol start="3">
<li><strong>概率抽样与非概率抽样的比较</strong></li>
</ol>
<p>非概率抽样的特点是操作简便、失效快、成本低，且对抽样中的统计学专业技术要求不高，适合探索性的研究，调查的结果用于发现问题，为更深入的数量分析做准备。</p>
<p>概率抽样则可用样本推断总体，对误差进行估计。</p>
<ol start="4">
<li><strong>搜集数据的基本方法：</strong> 自填式、面访式、电话式、观察式。</li>
</ol>
<p><strong>三、</strong>    <strong>数据误差</strong></p>
<p><strong>统计数据的误差是指</strong>通过调查搜集到的数据与研究对象真实结果之间的差异。数据的误差有两类：抽样误差和非抽样误差</p>
<p><strong>抽样误差是</strong>由抽样的随机性引起的样本结果与总体真值之间的误差，影响抽样误差大小的因素有样本量的大小和总体的变异性。通过增加样本量可以减小抽样误差，当样本量与总体单位相同时，就变成了普查，此时抽样误差就减小到0。</p>
<p><strong>非抽样误差是</strong>指除抽样误差外的其他误差。抽样误差只存在于概率抽样中，而非抽样误差概率抽样和非概率抽样中都有。非抽样误差有如下几种类型：抽样框误差，回答误差，无回答误差，调查员误差，测量误差等。非抽样误差控制的重要方面是调查过程的质量。包括：调查员的挑选、调查员的培训、对调查过程进行控制的具体措施、对调查结果进行检验评估、对现场调查人员进行奖惩制度等。</p>
<p><strong>抽样误差影响因素分析：</strong></p>
<p>（1）样本量大小。在其他条件不变的情况下，样本量越大，抽样误差越小，当样本量为总体单位数目时即为普查，抽样误差则为0。</p>
<p>（2）总体标志变异程度。在其他条件不变的情况下，总体标志变异程度越大，抽样误差越大。</p>
<p>（3）抽样方法。一般而言，不重复抽样的抽样误差要小于重复抽样的抽样误差。当  时，两者差距不大。</p>
<p>（4）抽样组织方式。一般而言，分层抽样的抽样误差较小，而整群抽样的抽样误差较大。</p>
<p><strong>四、简述搜集数据的基本方法及其弱点。</strong></p>
<p>（1）自填式。自填式是指在没有调查员协助的情况下由被调查者自己填写，完成调查问卷。其弱点：首先，问卷回收率较低。其次，自填式方法不适合结构复杂的问卷，对调查的内容有所局限。此外，自填式方法的调查周期通常比较长，调查人员也需要对问卷的递送和回收方法进行仔细的研究和选择。最后，对于在数据搜集过程中出现的问题，一般难以及时采取调改措施。</p>
<p>（2）面访式。面访式是指现场调查中调查员与被调查者面对面，调查者提问、被调查者回答这种调查方式。其弱点：调查成本较高、调查质量的控制有难度、对于敏感性问题不易调查。</p>
<p>（3）电话式。电话式是指调查人员通过打电话的方式向被调查者实施调查。其弱点：由于调查工具是电话，因此对电话拥有率不高的地区调查会受到限制；拒访率较高，且访问时间不能太长。</p>
<p><strong>五、分层抽样与整群抽样有何异同？它们分别适合什么场合？</strong></p>
<p>相同点：都是需要事先按某一标志对总体进行划分的随机抽样。</p>
<p>不同点：分层抽样是先对总体进行结构分层，然后从不同层中独立、随机的抽取样本；整群抽样是将若干单位合并为一个群体，然后抽取这个群体里的所有对象进行调查。</p>
<h3 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h3><p><strong>数据预处理包括：</strong> 数据审核、数据筛选、数据排序。其中数据审核中，对原始数据包括完整性审核和准确性审核；对二手数据还包括适用性审核和时效性审核。</p>
<p><strong>一、数据清洗：</strong> 主要是为了保证数据的完整性和准确性，包括处理缺失值、识别和处理异常值。</p>
<p>  <strong>处理缺失值的方法有：</strong> 删除整行、人工填写、用均值或中位数代替，用回归分析预测等</p>
<p>  <strong>识别异常值的方法有：</strong> （1）用切比雪夫不等式或标准分数判断，数据在  范围外的则为异常值。（2）用箱线图判断，数据小于  或大于  则为异常值。（3）用聚类的方法判断，单个数据自成一类的则为异常值。</p>
<p><strong>处理异常值的方法有：</strong> 删除异常值、将其作为缺失值处理、对其单独分析。</p>
<p><strong>二、数据标准化：</strong>主要是为了消除数据差异和量纲的影响。主要方法有离差标准化、标准差标准化和小数定标。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220305115609745.png" alt="image-20220305115609745"></p>
<h3 id="数据描述——图表描述"><a href="#数据描述——图表描述" class="headerlink" title="数据描述——图表描述"></a>数据描述——图表描述</h3><p><strong>一、</strong>  <strong>分类数据描述</strong></p>
<p><strong>（1）</strong>   <strong>频数分布表——单变量分布表</strong></p>
<p>主要用于计数和汇总一个分类变量的数据，通过它可以使（结合题）的频数、比例等一目了然，从而为进一步分析做准备。</p>
<p><strong>（2）</strong>   <strong>频数分布表——双变量列联表</strong></p>
<p>主要用于计数和汇总两个分类变量的数据，通过它可以使（结合题）两个变量交叉分类的频数、比例等一目了然，从而为进一步分析做准备。</p>
<p><strong>（3）</strong>   <strong>条形图</strong></p>
<p>它可以用来展示各类别的绝对值和数据的分布特征。它通过相同宽度条形的长短来表示各类别的数值大小。绘制时，可以分别绘制（饮料类型）和（性别）两个简单条形图，也可只绘制一张（饮料类型）和（性别）的复式条形图，从而便于比较。</p>
<p><strong>（4）</strong>   <strong>帕累托图</strong></p>
<p>它可以用来比较各类别的频数大小。它是按各类别数据出现的频数多少排序后绘制的条形图，通过对条形图的排序，容易看出哪类数据出现得多，哪类数据出现的少。</p>
<p><strong>（5）</strong>   <strong>饼图</strong></p>
<p>它可以用来展示一个样本的结构。它通过一个圆来表示的数值大小，用圆内各扇形的角度来表示各类别的数值大小。绘制时，可以分别绘制（饮料类型）和（性别）两个简单饼图，也可只绘制一张（饮料类型）和（性别）的复式饼图，从而便于比较。</p>
<p><strong>（6）</strong>   <strong>环形图</strong></p>
<p>它可以显示多个样本（城市）各部分所占的相应比例，从而用来比较多个样本的结构。它是把饼图叠在一起，挖去中间的部分；图中每一个环都表示一个样本（城市），（城市）样本中的每一部分数据则用环中的一段表示。</p>
<p><strong>此外，还有马赛克图（用于展示两个以上分类变量，满足条件才写）、脊柱图、扇形图等，此处不再一一详述。</strong></p>
<p><strong>二、</strong> <strong>顺序数据描述</strong></p>
<p><strong>（1）</strong>   <strong>频数分布表——累计频数分布表</strong></p>
<p>主要用于计数和汇总顺序变量的数据，通过它可以使（结合题）的频数、比例、累积频数、累积频率等一目了然，从而为进一步分析做准备。</p>
<p><strong>（2）</strong>   <strong>累计频数分布图</strong></p>
<p>主要是用于展示顺序变量的<strong>累积频数分布情况</strong>。它是将各类别按级别大小进行升序或降序排列在横坐标上，用纵坐标表示各类别的频率，然后用折线绘制出累积频率。</p>
<p>三、  数值型数据描述</p>
<p><strong>（1）</strong>   <strong>频数分布表——分组表</strong></p>
<p>主要是用于计数和汇总数值型分组数据。通过它可以使（结合题）分组后的频数、比例等一目了然，从而为进一步分析做准备。</p>
<p><strong>用于展示数据分布特征的图形主要有以下几种：</strong></p>
<p><strong>（2）</strong>   <strong>直方图</strong></p>
<p>它可以用来展示分组数据的分布特征。它用矩形的面积来表示频数分布，在矩形的高度表示每一组的频数或频率，宽度则表示各组的组距。</p>
<p><strong>直方图与条形图的区别与联系：</strong></p>
<p><strong>区别：</strong> 条形图主要用来展示分类数据，其高度表示各类别频数的多少，其宽度是固定的；直方图则主要是用于展示数值型分组数据，是用面积表示频数分布，矩形的高度表示每一组的频数或频率，宽度则表示各组的组距，因此其高度和宽度均有意义。且由于分组数据具有连续性，直方图的各矩形通常是连续排列的，而条形图则是分开排列的。</p>
<p><strong>联系：</strong> 二者都用来展示数据的分布情况；在平面直角坐标系中，二者的横轴都表示分组，纵轴都可表示频数或频率大小。</p>
<p><strong>（3）</strong>   <strong>茎叶图</strong></p>
<p>它不仅可以用来反映数据的分布特征，还可以保留原始数据的信息，更适用于观察少量数据的分布。它由“茎”和“叶”两部分构成。绘制时，首先将一个数值分成两部分，通常是以该数据的高位数值作为树茎，而叶上只保留该数值的最后一个数字。<strong>如数据125分成12|5。</strong></p>
<p><strong>（4）</strong>   <strong>箱线图</strong></p>
<p>它不仅可以用来反映原始数据的分布特征，还可以进行多组数据分布特征的比较。绘制时，先找出数据的最大值、最小值、中位数和两个四分位数；然后连接两个四分位数画出箱子；再将最大值和最小值与箱子相连，中位数在箱子中间。箱线图还可用来寻找离群点，从而来处理数据的异常值。</p>
<p><strong>此外，垂线图、误差图、小提琴图等，此处不再一一详述。</strong></p>
<p><strong>用于展示变量之间的关系的图形主要有以下几种：</strong></p>
<p><strong>（5）</strong>   <strong>线图</strong></p>
<p>它可以用于展示时间序列数据，反映现象随时间变化的特征。绘制时，时间一般绘在横轴，观测值绘在纵轴。一般情况下，横轴应长于纵轴，纵轴数据下端应从“0”开始（若起始数据与“0”相差大，可采用折断符号），以便于比较。</p>
<p><strong>用于展示变量之间的关系的图形主要有以下几种：</strong></p>
<p><strong>（1）</strong> <strong>散点图（两个数值型变量）</strong></p>
<p>它可以用来展示和两个数值型变量之间的关系。它用横轴代表变量，纵轴代表变量（可以互换），每对数据（如。。）在坐标系中用一个点表示，形成个散点。通过观察散点的趋势可以粗略判断变量与变量之间的相关性。 </p>
<p><strong>（2）气泡图（3个数值型变量）</strong></p>
<p>它可以用来展示、和三个数值型变量之间的关系。绘制时，将变量放在横轴，将变量放在纵轴，而变量则用气泡的大小来表示。这样数据在图上就以气泡的形式呈现，方便分析。</p>
<p><strong>（3）矩阵散点图（两个以上数值型变量）</strong></p>
<p>它可以用来同时比较多个变量两两之间的关系。N个变量，可形成N*N个小矩阵，每个矩阵都对应两个变量之间的散点图，方便同时观察分析。</p>
<p><strong>用于比较多个样本的相似性的图形主要有以下几种：</strong></p>
<p><strong>（1）雷达图（两个以上数值型变量）</strong></p>
<p>它是从一点出发，用每一条射线代表一个变量，多个变量的数据的连成线就围成了一个区域，多个样本就能绘制多个区域 （如此题中有__个样本，故能绘制出__个区域），从而方便研究各样本间的相似程度。</p>
<p><strong>（6）</strong>   <strong>轮廓图（两个以上数值型变量）</strong></p>
<p>它是用横轴表示各样本（或变量），纵轴表示每个样本的多个变量（或样本）的取值，将不同样本同一个变量的取值用折线连接。如该题中，可用横轴表示变量，纵轴表示样本，则绘制出__条样本折线，从而便于分析各个样本之间的相似程度。</p>
<p><strong>此外，还有星图、脸谱图等。</strong></p>
<h3 id="数据描述——统计量描述"><a href="#数据描述——统计量描述" class="headerlink" title="数据描述——统计量描述"></a>数据描述——统计量描述</h3><p><strong>一、  集中趋势度量</strong></p>
<p><strong>分类数据：众数</strong></p>
<p><strong>众数</strong>是一组数据中出现次数最多的变量值，常用于反映一组分类数据的集中趋势，且不受极端值影响。</p>
<p><strong>顺序数据：中位数、四分位数</strong></p>
<p><strong>中位数</strong>是一组数据排序后处于中间位置的变量值。<strong>四分位数</strong>是一组数据排序后处于25%和75%位置上的值。它们常用于反映一组顺序数据的集中趋势，且不受极端值影响。</p>
<p><strong>数值型数据：平均数</strong></p>
<p><strong>平均数</strong>是一组数据相加后除以数据的个数得到的结果，它的计算公式有多种，如简单平均数、加权平均数、几何平均数。主要是用于反映一组数值型数据的集中趋势，且易受极端值影响。</p>
<p><strong>二、离散程度度量</strong></p>
<p><strong>分类数据：异众比率</strong></p>
<p><strong>异众比率</strong>是指非众数组的频数占总频数的比例，它主要用于衡量众数对一组数据的代表程度。其值越大，众数的代表性越差；值越小，众数代表性越好。</p>
<p><strong>顺序数据：四分位差</strong></p>
<p><strong>四分位差</strong>是上四分位数与下四分位数之差。它反映了中间50%数据的离散程度，其数值越小说明数据越集中，数值越大说明数据越发散。</p>
<p><strong>数值型数据：方差和标准差</strong></p>
<p><strong>方差</strong>是各变量值与其均值离差平方的平均数。方差的平方根成为<strong>标准差</strong>。它们是实际中应用最广的数值型数据离散程度测度值。其值越大，说明数据越分散。此外，还有极差、平均差等可以对离散程度进行测度。</p>
<p><strong>此外，</strong> 还有极差，平均差等统计量有时也可以反映数值型数据的离散程度，不过极差描述的效果不太好，而平均差则不方便计算，故不常用。</p>
<p>（注：数值型数据的<strong>相对位置度量</strong>用<strong>标准分数（sc）</strong> $ z_i &#x3D; \frac{x_i-\overline{x}}{s}$，如z&#x3D;-1.5，则表示该数值低于平均数的1.5倍标准差）</p>
<p><strong>三、</strong> <strong>分布形状度量：偏态系数、峰态系数</strong></p>
<p><strong>偏态系数</strong>是对数据分布对称性的测度，当分布对称时，其值为0；分布左偏时，其值为负；分布右偏时，其值为正。</p>
<p><strong>峰态系数</strong>是对数据分布平峰或尖峰程度的测度，它是通过与标准正态分布的峰态系数进行比较来实现的，当分布为正态时，其值为0；分布为尖峰时，其值为正；分布为平峰时，其值为负。</p>
<p><strong>四、</strong> <strong>相对离散程度：离散（变异）系数</strong></p>
<p><strong>离散系数</strong>是一组数据的标准差与其相应的平均数之比，其计算公式为： $ v_s &#x3D; \frac{s}{\overline{x}}$  ，它主要用来比较不同样本之间的离散程度。离散系数越大，说明数据的离散程度越大；离散系数越小，则说明数据的离散程度越小。</p>
<p><strong>五、统计分组（高级变量——&gt;低级变量）</strong></p>
<p>根据统计研究的目的和客观现象的内在特点，按某个标志（或几个标志）把被研究的总体划分为若干个不同性质的组，称为<strong>统计分组。</strong></p>
<p><strong>统计分组的作用有：</strong>（1）发现社会经济现象的特点和规律；（2）将复杂的社会经济现象划分为性质不同的各种类型；（3）反映总体内部结构；（4）揭示现象之间的依存关系。</p>
<p><strong>科学的统计分组应遵循两个原则（MECE原则）：</strong></p>
<p>（1） 必须符合“穷尽原则”，即总体中的每一个单位都有组可归。</p>
<p>（2） 必须遵守“互斥原则”，即总体中任一单位只能归属于一组，而不能同时可能归属于几个组。</p>
]]></content>
      <categories>
        <category>数据分析能力</category>
        <category>统计分析方法</category>
      </categories>
      <tags>
        <tag>描述统计</tag>
      </tags>
  </entry>
  <entry>
    <title>类别变量分析（R语言实现）</title>
    <url>/p/5b2ef515/</url>
    <content><![CDATA[<p>本文主要介绍基于R实现类别变量分析，主要包括：</p>
<p>（1）<strong>拟合优度检验</strong>用于检验 <strong>一个分类变量各类别的观察频数与期望频数是否有显著性差异，</strong> 或者说是检验一个分类变量各类别观察频数的分布是否符合某一理论分布。</p>
<p>（2）<strong>独立性检验</strong>主要是用于分析判断两个分类变量是否独立。它是在假设两分类变量独立的情况下计算出理论频数，从而再与观察频数作比较，看是否有显著性差异。</p>
  <span id="more"></span>



<h2 id="一个分类变量的拟合优度检验"><a href="#一个分类变量的拟合优度检验" class="headerlink" title="一个分类变量的拟合优度检验"></a>一个分类变量的拟合优度检验</h2><h3 id="期望频数相等时的拟合优度检验"><a href="#期望频数相等时的拟合优度检验" class="headerlink" title="期望频数相等时的拟合优度检验"></a>期望频数相等时的拟合优度检验</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">load<span class="punctuation">(</span><span class="string">&quot;Rdata\\example\\ch7\\example7_1.RData&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>


<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">example7_1</span><br></pre></td></tr></table></figure>


<table class="dataframe">
<caption>A data.frame: 4 × 2</caption>
<thead>
    <tr><th></th><th scope="col">饮料类型</th><th scope="col">人数</th></tr>
    <tr><th></th><th scope="col">&lt;fct&gt;</th><th scope="col">&lt;dbl&gt;</th></tr>
</thead>
<tbody>
    <tr><th scope="row">1</th><td>碳酸饮料</td><td>525</td></tr>
    <tr><th scope="row">2</th><td>矿泉水  </td><td>550</td></tr>
    <tr><th scope="row">3</th><td>果汁    </td><td>470</td></tr>
    <tr><th scope="row">4</th><td>其他    </td><td>455</td></tr>
</tbody>
</table>



<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">chisq.test<span class="punctuation">(</span>example7_1<span class="operator">$</span>人数<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<pre><code>    Chi-squared test for given probabilities

data:  example7_1$人数
X-squared = 12.1, df = 3, p-value = 0.007048
</code></pre>
<h3 id="期望频数不相等时的拟合优度检验"><a href="#期望频数不相等时的拟合优度检验" class="headerlink" title="期望频数不相等时的拟合优度检验"></a>期望频数不相等时的拟合优度检验</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">load<span class="punctuation">(</span><span class="string">&quot;Rdata\\example\\ch7\\example7_2.RData&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>


<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">example7_2</span><br></pre></td></tr></table></figure>


<table class="dataframe">
<caption>A data.frame: 5 × 3</caption>
<thead>
    <tr><th scope="col">受教育程度</th><th scope="col">离婚家庭数</th><th scope="col">期望比例</th></tr>
    <tr><th scope="col">&lt;fct&gt;</th><th scope="col">&lt;int&gt;</th><th scope="col">&lt;dbl&gt;</th></tr>
</thead>
<tbody>
    <tr><td>小学及以下</td><td> 30</td><td>0.20</td></tr>
    <tr><td>初中      </td><td>110</td><td>0.35</td></tr>
    <tr><td>高中      </td><td> 80</td><td>0.25</td></tr>
    <tr><td>大学      </td><td> 25</td><td>0.12</td></tr>
    <tr><td>研究生    </td><td> 15</td><td>0.08</td></tr>
</tbody>
</table>



<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">chisq.test<span class="punctuation">(</span>example7_2<span class="operator">$</span>离婚家庭数<span class="punctuation">,</span> p <span class="operator">=</span> example7_2<span class="operator">$</span>期望比例<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<pre><code>    Chi-squared test for given probabilities

data:  example7_2$离婚家庭数
X-squared = 19.586, df = 4, p-value = 0.0006028
</code></pre>
<h2 id="两个分类变量的独立性检验（列联分析）"><a href="#两个分类变量的独立性检验（列联分析）" class="headerlink" title="两个分类变量的独立性检验（列联分析）"></a>两个分类变量的独立性检验（列联分析）</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数据已经是列联表了</span></span><br><span class="line">x <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">126</span><span class="punctuation">,</span><span class="number">158</span><span class="punctuation">,</span><span class="number">35</span><span class="punctuation">,</span><span class="number">34</span><span class="punctuation">,</span><span class="number">82</span><span class="punctuation">,</span><span class="number">65</span><span class="punctuation">)</span></span><br><span class="line">M <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span>x<span class="punctuation">,</span> nr<span class="operator">=</span><span class="number">2</span><span class="punctuation">,</span> nc<span class="operator">=</span><span class="number">3</span><span class="punctuation">,</span> byrow<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> <span class="built_in">dimnames</span><span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;满意&quot;</span><span class="punctuation">,</span><span class="string">&quot;不满意&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;东部&quot;</span><span class="punctuation">,</span><span class="string">&quot;中部&quot;</span><span class="punctuation">,</span><span class="string">&quot;西部&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">M</span><br><span class="line">chisq.test<span class="punctuation">(</span>M<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>


<table class="dataframe">
<caption>A matrix: 2 × 3 of type dbl</caption>
<thead>
    <tr><th></th><th scope="col">东部</th><th scope="col">中部</th><th scope="col">西部</th></tr>
</thead>
<tbody>
    <tr><th scope="row">满意</th><td>126</td><td>158</td><td>35</td></tr>
    <tr><th scope="row">不满意</th><td> 34</td><td> 82</td><td>65</td></tr>
</tbody>
</table>


<pre><code>    Pearson&#39;s Chi-squared test

data:  M
X-squared = 51.827, df = 2, p-value = 5.572e-12
</code></pre>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 根据原始数据进行检验</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;Rdata\\example\\ch7\\example7_3.RData&quot;</span><span class="punctuation">)</span></span><br><span class="line">head<span class="punctuation">(</span>example7_3<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算列联表</span></span><br><span class="line">fre_table <span class="operator">&lt;-</span> table<span class="punctuation">(</span>example7_3<span class="punctuation">)</span></span><br><span class="line">fre_table</span><br><span class="line"></span><br><span class="line"><span class="comment"># 独立性检验</span></span><br><span class="line">chisq.test<span class="punctuation">(</span>fre_table<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>


<table class="dataframe">
<caption>A data.frame: 6 × 2</caption>
<thead>
    <tr><th></th><th scope="col">满意度</th><th scope="col">地区</th></tr>
    <tr><th></th><th scope="col">&lt;fct&gt;</th><th scope="col">&lt;fct&gt;</th></tr>
</thead>
<tbody>
    <tr><th scope="row">1</th><td>满意</td><td>东部</td></tr>
    <tr><th scope="row">2</th><td>满意</td><td>东部</td></tr>
    <tr><th scope="row">3</th><td>满意</td><td>东部</td></tr>
    <tr><th scope="row">4</th><td>满意</td><td>东部</td></tr>
    <tr><th scope="row">5</th><td>满意</td><td>东部</td></tr>
    <tr><th scope="row">6</th><td>满意</td><td>东部</td></tr>
</tbody>
</table>

<pre><code>        地区
满意度   东部 西部 中部
  不满意   34   65   82
  满意    126   35  158


    Pearson&#39;s Chi-squared test

data:  fre_table
X-squared = 51.827, df = 2, p-value = 5.572e-12
</code></pre>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 是否满意与地区是否相互独立（独立性检验） 等价于 各地区的满意度是否符合均匀分布（拟合优度检验）</span></span><br><span class="line"><span class="comment"># 因此，当检验两个分类变量是否独立，且其中一个变量为二分类变量时，拟合优度检验可以同样适用</span></span><br><span class="line"><span class="comment"># 根据原始数据进行检验</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;Rdata\\example\\ch7\\example7_3.RData&quot;</span><span class="punctuation">)</span></span><br><span class="line">head<span class="punctuation">(</span>example7_3<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算实际频数</span></span><br><span class="line">fre_table <span class="operator">&lt;-</span> table<span class="punctuation">(</span>example7_3<span class="punctuation">[</span>example7_3<span class="operator">$</span>满意度 <span class="operator">==</span> <span class="string">&quot;满意&quot;</span><span class="punctuation">,</span> <span class="punctuation">]</span><span class="operator">$</span>地区<span class="punctuation">)</span></span><br><span class="line">fre_table</span><br><span class="line"></span><br><span class="line"><span class="comment"># 独立性检验</span></span><br><span class="line">chisq.test<span class="punctuation">(</span>fre_table<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>


<table class="dataframe">
<caption>A data.frame: 6 × 2</caption>
<thead>
    <tr><th></th><th scope="col">满意度</th><th scope="col">地区</th></tr>
    <tr><th></th><th scope="col">&lt;fct&gt;</th><th scope="col">&lt;fct&gt;</th></tr>
</thead>
<tbody>
    <tr><th scope="row">1</th><td>满意</td><td>东部</td></tr>
    <tr><th scope="row">2</th><td>满意</td><td>东部</td></tr>
    <tr><th scope="row">3</th><td>满意</td><td>东部</td></tr>
    <tr><th scope="row">4</th><td>满意</td><td>东部</td></tr>
    <tr><th scope="row">5</th><td>满意</td><td>东部</td></tr>
    <tr><th scope="row">6</th><td>满意</td><td>东部</td></tr>
</tbody>
</table>


<pre><code>东部 西部 中部 
 126   35  158 


    Chi-squared test for given probabilities

data:  fre_table
X-squared = 76.596, df = 2, p-value &lt; 2.2e-16
</code></pre>
<h2 id="两个分类变量的相关性度量"><a href="#两个分类变量的相关性度量" class="headerlink" title="两个分类变量的相关性度量"></a>两个分类变量的相关性度量</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">load<span class="punctuation">(</span><span class="string">&quot;D:\\Rdata\\example\\ch7\\example7_3.RData&quot;</span><span class="punctuation">)</span></span><br><span class="line">head<span class="punctuation">(</span>example7_3<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>


<table>
<thead><tr><th scope="col">满意度</th><th scope="col">地区</th></tr></thead>
<tbody>
    <tr><td>满意</td><td>东部</td></tr>
    <tr><td>满意</td><td>东部</td></tr>
    <tr><td>满意</td><td>东部</td></tr>
    <tr><td>满意</td><td>东部</td></tr>
    <tr><td>满意</td><td>东部</td></tr>
    <tr><td>满意</td><td>东部</td></tr>
</tbody>
</table>



<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 计算列联表</span></span><br><span class="line">fre_table <span class="operator">&lt;-</span> table<span class="punctuation">(</span>example7_3<span class="punctuation">)</span></span><br><span class="line">fre_table</span><br></pre></td></tr></table></figure>


<pre><code>        地区
满意度   东部 西部 中部
  不满意   34   65   82
  满意    126   35  158
</code></pre>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install.packages(&#x27;vcd&#x27;)</span></span><br><span class="line">library<span class="punctuation">(</span>vcd<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>


<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Likelihood Ratio 似然比检验</span></span><br><span class="line"><span class="comment"># Pearson          皮尔逊检验(卡方检验)</span></span><br><span class="line"><span class="comment"># Phi相关系数、Contingency Coeff列联系数、Cramer&#x27;s V 系数</span></span><br><span class="line">assocstats<span class="punctuation">(</span>fre_table<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>


<pre><code>                    X^2 df   P(&gt; X^2)
Likelihood Ratio 51.326  2 7.1559e-12
Pearson          51.827  2 5.5718e-12

Phi-Coefficient   : NA 
Contingency Coeff.: 0.306 
Cramer&#39;s V        : 0.322 
</code></pre>
]]></content>
      <categories>
        <category>数据分析能力</category>
        <category>统计分析方法</category>
      </categories>
      <tags>
        <tag>推断统计</tag>
        <tag>R语言</tag>
      </tags>
  </entry>
  <entry>
    <title>描述统计分析（R语言实现）</title>
    <url>/p/f6bd95a8/</url>
    <content><![CDATA[<p>统计学是一门专门研究如何收集、处理、分析、解释数据并从数据中得出结论的科学。</p>
<p>一般而言，我们通常将对数据的分析分为两大部分：描述统计分析和推断统计分析。</p>
<p><strong>描述统计分析</strong> ，可以帮助我们快速了解随机事件的现状，它的基本原理就是信息的凝练和浓缩。用简单的统计量和图表去概况我们所关注的某部分信息，而忽略其他嘈杂信息，整个过程其实就是一个信息筛选和浓缩的过程。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220804231411913.png"></p>
  <span id="more"></span>

<p>举个简单的例子：婚介所给你推荐了10个女士的个人信息，包括：身高、体重、年龄、学历……，但是，你最关注的只是学历，因此，在众多的信息里，只有学历这个信息对你而言是有用的，你只需要把10个人的学历信息筛选出来进行比较即可，而不需要关注过多的其他信息，造成时间的浪费。<strong>这就是一个简单的信息筛选过程。</strong></p>
<p>再举个例子：如果你想了解你目前的薪资处于当前城市的什么水平，最“严谨”的办法当然是，把这个城市的所有人的薪资都统计出来，然后排个序，看自己的薪资再所有人当中能排到哪个位置。但是，显然这是不可取的。因此，我们就需要进行如下工作：</p>
<ol>
<li>**信息筛选（随机抽样）： **抽取部分与城市薪资分布整体结构近似的人群进行调查。</li>
<li>**信息浓缩（概括性度量）： **计算样本的中位数，通过观察你距离样本中位数的位置，大致能推断你在这个城市的薪资水平。</li>
</ol>
<p><strong>从这个过程我们可以看出，通过信息的筛选和浓缩，我们从需要了解一个城市所有人的薪资大小简化到了只需要了解一个统计量（中位数）的大小。</strong></p>
<p>但是，肯定会有人有疑问：虽说简单了，但是也损失了很多信息，而且极可能把我们关注的信息也损失了，我们也不知道结果准不准确？有多准确？对于这个问题，如果来判断准不准确？误差是多少？能否按照规律进行预测？…….这些就是我们推断统计部分需要来回答的问题了。</p>
<p>我们需要清楚的是，描述统计的作用就是通过信息筛选和信息浓缩<strong>快速了解现状</strong>。就好比两军开战，要先知己知彼，洞察敌情，至于什么时候开战？如果判断开战的时机？这个就是我们统计推断要解决的事情。</p>
<h2 id="数据信息的分类"><a href="#数据信息的分类" class="headerlink" title="数据信息的分类"></a>数据信息的分类</h2><p>现实世界的数据信息以各种形态存在，为了更好的对他们进行搜集和分析，我们把具有相同性质的数据信息进行如下分类。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E6%95%B0%E6%8D%AE%E5%88%86%E7%B1%BB.png"></p>
<p>非结构化数据处理相对复杂，有专门的学科进行研究。在这里，我们主要来分析结构化数据。</p>
<h2 id="分类数据的描述性分析"><a href="#分类数据的描述性分析" class="headerlink" title="分类数据的描述性分析"></a>分类数据的描述性分析</h2><p>分类数据是只能归于某一类别的非数字型数据，它是对事物进行分类的结果，数据表现为类别，是用文字来表述的。</p>
<h3 id="图表描述分析"><a href="#图表描述分析" class="headerlink" title="图表描述分析"></a>图表描述分析</h3><p>对分类变量的图表描述分析，主要分为对比分析和占比分析。</p>
<h4 id="对比分析：条形图"><a href="#对比分析：条形图" class="headerlink" title="对比分析：条形图"></a>对比分析：条形图</h4><p>通常，我们使用条形图来对比不同类别的频数大小，快速直观的了解各类别的”好坏“情况。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E6%9D%A1%E5%BD%A2%E5%9B%BE.png"></p>
<h4 id="占比分析：帕累托图和扇形图"><a href="#占比分析：帕累托图和扇形图" class="headerlink" title="占比分析：帕累托图和扇形图"></a>占比分析：帕累托图和扇形图</h4><p>对于分类变量，我们除了想了解数据整体的情况，还需要了解各部分在整体中的占比（即影响权重），常用的占比分析方法就是帕累托分析。</p>
<p><strong>帕累托法则，又称为二八原则，即20%的人贡献了80%的价值。它常用来对用户进行分类，寻找出核心价值用户。</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E5%B8%95%E7%B4%AF%E6%89%98%E5%9B%BE.png"></p>
<p>扇形图能更加直观的看出各类别占比的大小顺序，方便类别直接进行比较。（个人不推荐使用饼图）</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E6%89%87%E5%BD%A2%E5%9B%BE.png"></p>
<h3 id="统计量描述分析"><a href="#统计量描述分析" class="headerlink" title="统计量描述分析"></a>统计量描述分析</h3><h4 id="描述水平的统计量：众数"><a href="#描述水平的统计量：众数" class="headerlink" title="描述水平的统计量：众数"></a>描述水平的统计量：众数</h4><p>咱们公司的明星产品是什么？哪个小区的人口最多？为了回答类似这样的问题，我们可以使用众数 $M_0$ 来进行衡量。<strong>众数是频数最高的那个类别值，通过它我们可以了解哪个类别出现的概率会更高，即哪款产品可能更受用户喜爱。</strong></p>
<h4 id="描述差异的统计量：异众比率"><a href="#描述差异的统计量：异众比率" class="headerlink" title="描述差异的统计量：异众比率"></a>描述差异的统计量：异众比率</h4><p>描述数据的统计量通常都是成对出现的，在上面，我们通过众数了解到了销量最好的明星产品，但是，这个明星产品是否可以作为”代表“，来代表所有产品的销售情况呢？是不是通过它的销售好坏，就可以直接衡量所有产品整体的销售好坏呢？</p>
<p>我们需要一个评判标准，那就是异众比率。异众比率是指除了众数以外其他类别的总频数占总样本量的比例，即除了明星产品，其他产品的销量占总销量的比例。</p>
<p>如果异众比率小，则说明销量主要集中在明星产品，众数的代表性好，反之，则代表性差，不能用众数去代表整体的情况。</p>
<p><strong>注：根据二八法则，通常认为异众比率在0.2以下，众数的代表性就很好。</strong></p>
<h2 id="顺序数据的描述性分析"><a href="#顺序数据的描述性分析" class="headerlink" title="顺序数据的描述性分析"></a>顺序数据的描述性分析</h2><h3 id="图表描述分析-1"><a href="#图表描述分析-1" class="headerlink" title="图表描述分析"></a>图表描述分析</h3><p><strong>（1）</strong>   <strong>频数分布表——累计频数分布表</strong></p>
<p>主要用于计数和汇总顺序变量的数据，通过它可以使频数、比例、累积频数、累积频率等一目了然，从而为进一步分析做准备。</p>
<p><strong>（2）</strong>   <strong>累计频数分布图</strong></p>
<p>主要是用于展示顺序变量的<strong>累积频数分布情况</strong>。它是将各类别按级别大小进行升序或降序排列在横坐标上，用纵坐标表示各类别的频率，然后用折线绘制出累积频率。</p>
<h3 id="统计量描述分析-1"><a href="#统计量描述分析-1" class="headerlink" title="统计量描述分析"></a>统计量描述分析</h3><h4 id="描述水平的统计量：中位数、四分位数"><a href="#描述水平的统计量：中位数、四分位数" class="headerlink" title="描述水平的统计量：中位数、四分位数"></a>描述水平的统计量：中位数、四分位数</h4><p><strong>中位数</strong>是一组数据排序后处于中间位置的变量值。<strong>四分位数</strong>是一组数据排序后处于25%和75%位置上的值。它们常用于反映一组顺序数据的集中趋势，且不受极端值影响。</p>
<h4 id="描述差异的统计量：四分位差"><a href="#描述差异的统计量：四分位差" class="headerlink" title="描述差异的统计量：四分位差"></a>描述差异的统计量：四分位差</h4><p><strong>四分位差</strong>是上四分位数与下四分位数之差。它反映了中间50%数据的离散程度，其数值越小说明数据越集中，数值越大说明数据越发散。</p>
<h2 id="数值型数据的描述性分析"><a href="#数值型数据的描述性分析" class="headerlink" title="数值型数据的描述性分析"></a>数值型数据的描述性分析</h2><h3 id="图表描述分析-2"><a href="#图表描述分析-2" class="headerlink" title="图表描述分析"></a>图表描述分析</h3><p><strong>用于展示数据分布特征的图形主要有以下几种：</strong></p>
<p><strong>（1）</strong> <strong>直方图</strong></p>
<p>主要用于观察分组数据的分布特征，通常可以结合核密度线进行观察，可用于进行正态性检验。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E7%9B%B4%E6%96%B9%E5%9B%BE.png"></p>
<p><strong>直方图与条形图的区别与联系：</strong></p>
<p><strong>区别：</strong>条形图主要用来展示分类数据，其高度表示各类别频数的多少，其宽度是固定的；直方图则主要是用于展示数值型分组数据，是用面积表示频数分布，矩形的高度表示每一组的频数或频率，宽度则表示各组的组距，因此其高度和宽度均有意义。且由于分组数据具有连续性，直方图的各矩形通常是连续排列的，而条形图则是分开排列的。</p>
<p><strong>联系：</strong>二者都用来展示数据的分布情况；在平面直角坐标系中，二者的横轴都表示分组，纵轴都可表示频数或频率大小。</p>
<p><strong>（2）</strong> <strong>茎叶图</strong></p>
<p>它不仅可以用来反映数据的分布特征，还可以保留原始数据的信息，更适用于观察少量数据的分布。它由“茎”和“叶”两部分构成。绘制时，首先将一个数值分成两部分，通常是以该数据的高位数值作为树茎，而叶上只保留该数值的最后一个数字。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E8%8C%8E%E5%8F%B6%E5%9B%BE.png"></p>
<p><strong>（3）</strong> <strong>箱线图</strong></p>
<p>它不仅可以用来反映原始数据的分布特征，还可以进行多组数据分布特征的比较。箱形图是由5个统计量组合而成的图形，它们分别是：“最大值”、“最小值”、中位数、上四分位数和下四分位数。</p>
<p><strong>“最大值和最小值”：</strong>在箱形图中的最大值其实是指去除异常值后的最大值和最小值，然后将它们作为整体图形的上下两条边界线。</p>
<p>判断异常值的异常值截断点计算方式如下：</p>
<p>上异常值截断点 &#x3D; 上四分位数 + 1.5*IQR（IQR即四分位差）</p>
<p>下异常值截断点 &#x3D; 下四分位数 - 1.5*IQR（IQR即四分位差）</p>
<p><strong>中位数</strong>：代表数据集中趋势位置的数，它表示这组数据大部分是集中在哪个数的附近，在这组数据中即表示了大多数的学生成绩是在75.5分左右。</p>
<p><strong>四分位差（IQR)：</strong>IQR &#x3D; Q3（上四分位数）-Q1（下四分位数）。</p>
<p>四分位差表示了一组数据中间50%的数据的离散程度，通过它我们可以来衡量中位数的代表性。如果IQR较大，则说明中间50%的数据相对分散，中位数的代表性则不好；如果IQR较小，则说明中间50%的数据相对集中，中位数的代表性则较好。</p>
<p><strong>此外，</strong>我们还可以通过图形的整体长度，即极差来观察数据的整体分散程度。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E7%AE%B1%E7%BA%BF%E5%9B%BE.png"></p>
<p><strong>用于展示变量之间的关系的图形主要有以下几种：</strong></p>
<p><strong>（4）</strong> <strong>散点图（两个数值型变量）</strong></p>
<p>它可以用来展示两个数值型变量之间的关系，一个变量在横轴，一个变量在纵轴，通过观察散点的趋势判断两变量的相关性。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E6%95%A3%E7%82%B9%E5%9B%BE.png"></p>
<p><strong>（5）气泡图（三个数值型变量）</strong></p>
<p>它可以用来展示三个数值型变量之间的关系。第一个变量用横轴表示，第二个变量用纵轴表示，第三个变量用气泡的大小表示。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E6%B0%94%E6%B3%A1%E5%9B%BE.png"></p>
<p><strong>用于比较多个样本的相似性的图形主要有以下几种：</strong></p>
<p><strong>（6）雷达图（两个以上数值型变量）</strong></p>
<p>它是从一点出发，用每一条射线代表一个变量，多个变量的数据的连成线就围成了一个区域，多个样本就能绘制多个区域 ，从而方便研究各样本间的相似程度。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E9%9B%B7%E8%BE%BE%E5%9B%BE.png"></p>
<p><strong>（7）轮廓图（两个以上数值型变量）</strong></p>
<p>它是用横轴表示各样本，纵轴表示每个样本的多个变量的取值，将不同样本同一个变量的取值用折线连接，从而便于分析各个样本之间的相似程度。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/%E8%BD%AE%E5%BB%93%E5%9B%BE.png"></p>
<h3 id="统计量描述分析-2"><a href="#统计量描述分析-2" class="headerlink" title="统计量描述分析"></a>统计量描述分析</h3><h4 id="描述水平的统计量：平均数"><a href="#描述水平的统计量：平均数" class="headerlink" title="描述水平的统计量：平均数"></a>描述水平的统计量：平均数</h4><p><strong>平均数</strong>的计算公式有多种，如简单平均数、加权平均数、几何平均数。主要是用于反映一组数值型数据的集中趋势，<strong>且易受极端值影响。</strong></p>
<h4 id="描述差异的统计量：方差和标准差"><a href="#描述差异的统计量：方差和标准差" class="headerlink" title="描述差异的统计量：方差和标准差"></a>描述差异的统计量：方差和标准差</h4><p><strong>方差</strong>是各变量值与其均值离差平方的平均数。方差的平方根成为<strong>标准差</strong>。它们是实际中应用最广的数值型数据离散程度测度值。其值越大，说明数据越分散。此外，还有极差、平均差等可以对离散程度进行测度。</p>
<p><strong>此外，</strong>还有极差，平均差等统计量有时也可以反映数值型数据的离散程度，不过极差易受极端值影响，而平均差的数学性质较差，故不常用。</p>
<p>（注：数值型数据的<strong>相对位置度量</strong>用<strong>标准分数（sc）</strong>$ z_i &#x3D; \frac{x_i-\overline{x}}{s}$，如z&#x3D;-1.5，则表示该数值低于平均数的1.5倍标准差）</p>
<h4 id="分布形状度量：偏态系数、峰态系数"><a href="#分布形状度量：偏态系数、峰态系数" class="headerlink" title="分布形状度量：偏态系数、峰态系数"></a>分布形状度量：偏态系数、峰态系数</h4><p><strong>偏态系数</strong>是对数据分布对称性的测度，当分布对称时，其值为0；分布左偏时，其值为负；分布右偏时，其值为正。</p>
<p><strong>峰态系数</strong>是对数据分布平峰或尖峰程度的测度，它是通过与标准正态分布的峰态系数进行比较来实现的，当分布为正态时，其值为0；分布为尖峰时，其值为正；分布为平峰时，其值为负。</p>
<h4 id="相对离散程度：离散（变异）系数"><a href="#相对离散程度：离散（变异）系数" class="headerlink" title="相对离散程度：离散（变异）系数"></a>相对离散程度：离散（变异）系数</h4><p><strong>离散系数</strong>是一组数据的标准差与其相应的平均数之比，它主要用来比较不同样本之间的离散程度。离散系数越大，说明数据的离散程度越大；离散系数越小，则说明数据的离散程度越小。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li>描述性分析主要是用图表和统计量来观察随机现象的特征规律；</li>
<li>图表简单、直观，可以帮助我们快速发现规律、监控异常；</li>
<li>统计量则浓缩了与目标最相关的信息，可以通过样本统计量来预估总体特征，除了上面常见的统计量之外，我们在实际工作中，一般是提取随机现象的特征统计量，如常见的业务指标，来描述实际业务当中随机变化的现象的规律和特征。</li>
<li>总而言之，统计描述分析就是对总体信息进行抽取、筛选、浓缩、描述的过程。</li>
</ol>
]]></content>
      <categories>
        <category>数据分析能力</category>
        <category>统计分析方法</category>
      </categories>
      <tags>
        <tag>R语言</tag>
        <tag>描述统计</tag>
      </tags>
  </entry>
  <entry>
    <title>刻意练习</title>
    <url>/p/2e543a56/</url>
    <content><![CDATA[<p><strong>每天1小时数据分析技能学习，用热爱成就事业，用坚持锻造专业！</strong></p>
<iframe title="日程数据监控" width="800" height="486" src="https://app.powerbi.com/view?r=eyJrIjoiYmIwZDdmZWEtZWQ4OC00YmMyLTk5YjEtNTcyMjkzNzAwNWM4IiwidCI6IjFkOThmYTJiLTA2ZTgtNDhlYS05YjY4LWI2YzZkYTYwODljYiIsImMiOjEwfQ%3D%3D&pageName=ReportSection3d21ab029abe43e7ce90" frameborder="0" allowfullscreen="true"></iframe>



]]></content>
      <categories>
        <category>说明文档</category>
      </categories>
  </entry>
  <entry>
    <title>博客目录结构</title>
    <url>/p/7f337b91/</url>
    <content><![CDATA[<iframe title="博客目录结构" width="800" height="486" src="https://www.processon.com/embed/6471ae2978dff312e1bd73f7"></iframe>

  <span id="more"></span>

]]></content>
      <categories>
        <category>说明文档</category>
      </categories>
  </entry>
  <entry>
    <title>个人网站说明</title>
    <url>/p/cfcb6e47/</url>
    <content><![CDATA[<p>生命转瞬即逝，唯有思想、灵感与爱永存。</p>
<p>Life is fleeting, but thought, inspiration and love remain forever.</p>
<p>您好！我是归一，欢迎来到我的个人网站！</p>
<p>归一，源自我对生活的感悟，老子在《道德经》中有言：“道生一，一生二，二生三，三生万物。“世间的万事万物都可由简到繁，化繁为简。”一”既是起点，也是终点。“归一”对我来说，不仅是一种生活的态度，更是一种为人处世的哲学。</p>
<p>2022年8月1日，我开始正式维护我的个人博客，在这里记录和分享我的学习、工作和生活。</p>
<p>之前，我在其他网站上也写过一些文章，但总感觉寄人篱下，有着各种限制，而且无论是CSDN、知乎、简书都有着它自己的产品定位，我希望自己有自己的个性，希望在我走过的岁月能留下属于自己的足迹，希望能有一件能让我一直坚持且不求回报做下去的事情，我想这也是网上很多志同道合的小伙伴热衷于建立自己的个人网站的原因。</p>
<span id="more"></span>

<p>下面是我搭建个人网站查找使用的一些文章链接，供大家参考：</p>
<ol>
<li><p>搭建完整流程：<a href="https://zhuanlan.zhihu.com/p/26625249">https://zhuanlan.zhihu.com/p/26625249</a></p>
</li>
<li><p>个性化设置：</p>
<ul>
<li><a href="https://www.jianshu.com/p/3a05351a37dc">next 主题配置</a></li>
<li><a href="https://blog.csdn.net/ssjdoudou/article/details/103318019">Next主题启动支持数学公式</a></li>
<li><a href="https://www.jianshu.com/p/c7de2ae59975">Hexo-abbrlink生成唯一永久文章链接</a></li>
<li><a href="http://yelog.org/2017/02/24/hexo-top-sort/">Hexo置顶及排序问题</a></li>
<li><a href="https://hexo.io/themes/">hexo主题推荐</a></li>
</ul>
</li>
<li><p>常见问题：</p>
<ul>
<li><a href="https://www.tuziang.com/combat/868.html">不显示阅读时长和字数</a></li>
<li><a href="https://www.jianshu.com/p/a2fe56d11c4f">各种坑</a></li>
<li><a href="https://blog.csdn.net/wgshun616/article/details/81019687">数学公式</a></li>
<li><a href="https://blog.csdn.net/ddydavie/article/details/83020549?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.compare&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.compare">访问数异常</a></li>
<li><a href="https://blog.csdn.net/z952957407/article/details/111642548?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_default&utm_relevant_index=2">文章带图片问题</a></li>
<li><a href="https://blog.csdn.net/qq904305159/article/details/104162802">文章带图片问题（可用）</a></li>
<li><a href="https://segmentfault.com/q/1010000037605775?utm_source=tag-newest">next主题无法加载</a></li>
<li><a href="https://www.cnblogs.com/lfri/p/12221359.html">分类和标签不显示内容</a></li>
<li><a href="https://blog.csdn.net/tujidi1csd/article/details/120135591">统计阅读次数不显示</a></li>
<li>markdowm数学公式：$$公式块，$为行内公式</li>
</ul>
</li>
</ol>
<h2 id="V2022-08"><a href="#V2022-08" class="headerlink" title="V2022.08"></a>V2022.08</h2><h3 id="V2022-08-01"><a href="#V2022-08-01" class="headerlink" title="V2022.08.01"></a>V2022.08.01</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 1.在任意文件夹下打开powershell窗口：初始化blog</span></span><br><span class="line"><span class="attribute">hexo</span> init blog</span><br><span class="line"></span><br><span class="line"><span class="comment">## 2.在blog文件下打开powershell窗口：安装主题ayer</span></span><br><span class="line">git clone https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer</span><br><span class="line"></span><br><span class="line"><span class="comment">## 3.配置blog下的_config.yml（版本迭代，可直接复制替换配置文件）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 4.配置theme下的_config.yml（版本迭代，可直接复制替换配置文件）</span></span><br></pre></td></tr></table></figure>

<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 5.1 安装插件hexo-generator-searchdb 用于搜索</span></span><br><span class="line"><span class="attribute">npm</span> install hexo-generator-searchdb --save</span><br><span class="line"><span class="comment">## 5.2 安装后需要在blog下的_config.yml添加</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br></pre></td></tr></table></figure>

<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 6.1 安装插件hexo-generator-feed 用于生成RSS订阅</span></span><br><span class="line"><span class="attribute">npm</span> install hexo-generator-feed --save</span><br><span class="line"><span class="comment">## 6.2 安装后需要在blog下的_config.yml添加</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># RSS订阅</span></span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: <span class="number">20</span></span><br><span class="line">  hub:</span><br><span class="line">  content:</span><br><span class="line">  content_limit: <span class="number">140</span></span><br><span class="line">  content_limit_delim: <span class="string">&quot; &quot;</span></span><br><span class="line">  order_by: -date</span><br></pre></td></tr></table></figure>

<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 7.1 生成左侧栏菜单选项</span></span><br><span class="line"><span class="attribute">hexo</span> new page <span class="string">&quot;about&quot;</span></span><br><span class="line">hexo new page <span class="string">&quot;categories&quot;</span></span><br><span class="line">hexo new page <span class="string">&quot;tags&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 7.2 然后将以下复制到 /source/categories/index.md 文件，其他同理</span></span><br><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">type: <span class="string">&quot;categories&quot;</span></span><br><span class="line">layout: <span class="string">&quot;categories&quot;</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 8.在blog/source/_post中添加markdown文章</span></span><br><span class="line">---</span><br><span class="line">title: 个人网站说明</span><br><span class="line">date: 2022-08-01 12:00:00</span><br><span class="line">categories: 说明文档</span><br><span class="line">tag: 网站开发</span><br><span class="line">top: 10000</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 9.安装文章插入本地图片显示插件：hexo-asset-image</span></span><br><span class="line"><span class="attribute">npm</span> install hexo-asset-image --save</span><br><span class="line"></span><br><span class="line"><span class="comment">## 10.安装Git部署插件，hexo三连，同步到GitHub</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 11.在GitHub Pages中配置Custom domain为网站域名</span></span><br></pre></td></tr></table></figure>

<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220804082258151.png" alt="image-20220804082258151"></p>
<h3 id="V2022-08-04"><a href="#V2022-08-04" class="headerlink" title="V2022.08.04"></a>V2022.08.04</h3><h4 id="Hexo-文章置顶插件"><a href="#Hexo-文章置顶插件" class="headerlink" title="Hexo 文章置顶插件"></a>Hexo 文章置顶插件</h4><p><a href="https://github.com/netcan/hexo-generator-index-pin-top">hexo-generator-index-pin-top</a></p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 1.卸载安装</span></span><br><span class="line"><span class="attribute">npm</span> uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br><span class="line"></span><br><span class="line"><span class="comment">## 2.在需要置顶的文章的 Front-matter 中加上 top: true 或者 top: 任意数字</span></span><br><span class="line"><span class="comment">## 注意：top 中数字越大，文章越靠前。</span></span><br><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">top: <span class="literal">true</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>



<h3 id="V2022-08-09"><a href="#V2022-08-09" class="headerlink" title="V2022.08.09"></a>V2022.08.09</h3><h4 id="嵌入ipynb文件"><a href="#嵌入ipynb文件" class="headerlink" title="嵌入ipynb文件"></a>嵌入ipynb文件</h4><ol>
<li>将ipynb文件上传至github，在GitHub中打开</li>
<li>复制GitHub中的ipynb文件链接粘贴至 <a href="https://nbviewer.org/">https://nbviewer.org/</a></li>
</ol>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20220809221327754.png"></p>
<ol start="3">
<li>在markdown中使用HTML格式插入</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://nbviewer.jupyter.org/github/royalosyin/Python-Practical-Application-on-Climate-Variability-Studies/blob/master/ex12-Analysis%20of%20Monthly%20GPCP%20precipitation.ipynb&quot;</span> <span class="attr">width</span>=<span class="string">&quot;800&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span> </span><br></pre></td></tr></table></figure>



<iframe src="https://nbviewer.jupyter.org/github/royalosyin/Python-Practical-Application-on-Climate-Variability-Studies/blob/master/ex12-Analysis%20of%20Monthly%20GPCP%20precipitation.ipynb" width="800" height="500"></iframe> 

<h2 id="V2022-10"><a href="#V2022-10" class="headerlink" title="V2022.10"></a>V2022.10</h2><h3 id="V2022-10-01"><a href="#V2022-10-01" class="headerlink" title="V2022.10.01"></a>V2022.10.01</h3><h4 id="本地图片迁至阿里云"><a href="#本地图片迁至阿里云" class="headerlink" title="本地图片迁至阿里云"></a>本地图片迁至阿里云</h4><ul>
<li>配置教程</li>
</ul>
<p><a href="https://www.cnblogs.com/NFTO21/p/16285829.html">https://www.cnblogs.com/NFTO21/p/16285829.html</a></p>
<ul>
<li>图片的上传和下载</li>
</ul>
<p><a href="http://t.zoukankan.com/emmmmmm-p-10904768.html">http://t.zoukankan.com/emmmmmm-p-10904768.html</a></p>
<p><a href="https://help.aliyun.com/document_detail/256352.html">https://help.aliyun.com/document_detail/256352.html</a></p>
<h2 id="V2023-03"><a href="#V2023-03" class="headerlink" title="V2023.03"></a>V2023.03</h2><h3 id="V2023-03-22"><a href="#V2023-03-22" class="headerlink" title="V2023.03.22"></a>V2023.03.22</h3><h4 id="hexo本地项目迁移"><a href="#hexo本地项目迁移" class="headerlink" title="hexo本地项目迁移"></a>hexo本地项目迁移</h4><blockquote>
<p>将本地hexo博客项目备份, 或者将本地项目换个文件夹.</p>
</blockquote>
<p>简单的三个步骤:</p>
<ol>
<li>在新环境下新建文件夹<br> 新建的文件夹用来放置之前的项目<br> 注意: <strong>不要用hexo init初始化</strong></li>
<li>复制原先项目文件</li>
<li>安装所需插件(node_modules)<br> 在新建文件夹内, 右键git bash here<br> 输入命令:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install //已经安装阿里镜像的可以用cnpm install</span><br></pre></td></tr></table></figure>

<p>这一步是根据package.json文件安装需要的模块, 具体文件内容可以自己打开看看.</p>
<h2 id="V2023-05"><a href="#V2023-05" class="headerlink" title="V2023.05"></a>V2023.05</h2><h3 id="V2023-05-27"><a href="#V2023-05-27" class="headerlink" title="V2023.05.27"></a>V2023.05.27</h3><h4 id="Hexo文件目录解析"><a href="#Hexo文件目录解析" class="headerlink" title="Hexo文件目录解析"></a>Hexo文件目录解析</h4><p>参考博客：<a href="https://segmentfault.com/a/1190000018237272">https://segmentfault.com/a/1190000018237272</a></p>
<blockquote>
<p>执行hexo generate，根据source，更新 public。</p>
</blockquote>
<blockquote>
<p>执行hexo deploy，根据public，更新 .deploy_git。</p>
</blockquote>
<h4 id="生成网站短链"><a href="#生成网站短链" class="headerlink" title="生成网站短链"></a>生成网站短链</h4><p>参考博文：<a href="https://blog.feizhuqwq.com/20">https://blog.feizhuqwq.com/20</a></p>
<h2 id="V2023-12"><a href="#V2023-12" class="headerlink" title="V2023.12"></a>V2023.12</h2><h3 id="V2023-12-04"><a href="#V2023-12-04" class="headerlink" title="V2023.12.04"></a>V2023.12.04</h3><h4 id="添加二级菜单"><a href="#添加二级菜单" class="headerlink" title="添加二级菜单"></a>添加二级菜单</h4><p>参考博客：<a href="https://blog.justlovesmile.top/posts/14357.html?time=1701661084759">https://blog.justlovesmile.top/posts/14357.html?time=1701661084759</a></p>
<p>Hexo主题导航栏添加二级菜单的简单方法</p>
<p>第一步，找到所使用主题的导航栏文件，例如：Ayer主题的位于hexo\themes\ayer\layout_partial\sidebar.ejs</p>
<p>第二步，打开文件，找到文件对应生成菜单的位置,一般在&lt; li &gt;&lt; &#x2F;li &gt;内，在里面添加代码</p>
<p>第三步，添加css，css模板可以参考：<a href="https://www.bootstrapmb.com/tag/daohangyangshi">https://www.bootstrapmb.com/tag/daohangyangshi</a></p>
<p>第四步，找到主题下的配置文件，如ayer的位于hexo\themes\ayer_config.yml，在需要的位置添加submenus，修改菜单menu信息</p>
]]></content>
      <categories>
        <category>说明文档</category>
      </categories>
      <tags>
        <tag>网站开发</tag>
      </tags>
  </entry>
  <entry>
    <title>PQ填充</title>
    <url>/p/500d6555/</url>
    <content><![CDATA[<h2 id="Excel-Power-Query数据处理18招-第8招：填充"><a href="#Excel-Power-Query数据处理18招-第8招：填充" class="headerlink" title="Excel Power Query数据处理18招-第8招：填充"></a>Excel Power Query数据处理18招-第8招：填充</h2><p><strong>“</strong> 本节内容将开始介绍Excel Power Query数据处理实用的18种方法中的第7种——新增条件列。下面，我们开始学习吧~<strong>”</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200504837.png" alt="image-20231204200504837"></p>
  <span id="more"></span>

<h3 id="01-业务问题：如何取消合并单元格？"><a href="#01-业务问题：如何取消合并单元格？" class="headerlink" title="01 业务问题：如何取消合并单元格？"></a>01 业务问题：如何取消合并单元格？</h3><p>下面，我们来看这样一个问题：现有如下表格，你想取消第一列中合并的单元格，并将其填充为对应的姓名，以便对该表进行数据透视分析。那么，如何来做呢？</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204201127894.png" alt="image-20231204201127894"></p>
<p>下面，我们一起来看如何使用Power Query快速解决这个问题！</p>
<h3 id="02-使用Power-Query取消合并单元格"><a href="#02-使用Power-Query取消合并单元格" class="headerlink" title="02 使用Power Query取消合并单元格"></a>02 使用Power Query取消合并单元格</h3><p>在Power Query【转换】选项卡中，可以找到【填充】，【填充】分为向上填充和向下填充。</p>
<p>向下填充会自上而下将空值填充为离它最近的最上面的那个值，而向下填充则会自下而上进行填充，将空值填充为离它最近的最下面那个值。</p>
<p>可以看到，将数据导入到Power Query后，它自动给我们取消了合并单元格。</p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>Excel</category>
      </categories>
  </entry>
  <entry>
    <title>PQ条件列</title>
    <url>/p/b959771d/</url>
    <content><![CDATA[<h2 id="Excel不用IF函数，你一样可以进行条件判断！"><a href="#Excel不用IF函数，你一样可以进行条件判断！" class="headerlink" title="Excel不用IF函数，你一样可以进行条件判断！"></a>Excel不用IF函数，你一样可以进行条件判断！</h2><p><strong>“</strong> 本节内容将开始介绍Excel Power Query数据处理实用的18种方法中的第7种——新增条件列。下面，我们开始学习吧~<strong>”</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200504837.png" alt="image-20231204200504837"></p>
  <span id="more"></span>

<h3 id="01-业务问题：如何将年龄分组？"><a href="#01-业务问题：如何将年龄分组？" class="headerlink" title="01 业务问题：如何将年龄分组？"></a>01 业务问题：如何将年龄分组？</h3><p>下面，我们来看这样一个问题：现有一个列员工的年龄信息，你想对它进行分组，查询各年龄段的员工人数，那么，如何来做呢？</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200928728.png" alt="image-20231204200928728"></p>
<p><strong>下面，我们先用IF函数按照下面要求对它进行分组：</strong>	</p>
<table>
<thead>
<tr>
<th>&lt;&#x3D;10</th>
<th>1-10岁</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;&#x3D;25</td>
<td>11-25岁</td>
</tr>
<tr>
<td>&lt;&#x3D;45</td>
<td>26-45岁</td>
</tr>
<tr>
<td>&lt;&#x3D;60</td>
<td>46-60岁</td>
</tr>
<tr>
<td>&gt;60</td>
<td>60岁以上</td>
</tr>
</tbody></table>
<p><strong>我们在C2单元格输入IF函数嵌套公式如下图</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200940434.png" alt="image-20231204200940434"></p>
<p><strong>然后，回车运行公式，双击填充柄即可得到年龄分段</strong></p>
<h3 id="02-使用Power-Query对年龄分组"><a href="#02-使用Power-Query对年龄分组" class="headerlink" title="02 使用Power Query对年龄分组"></a>02 使用Power Query对年龄分组</h3><p>在Excel Power Query中，我们可以使用【条件列】功能，对年龄进行分段。</p>
<p>我们可以在【添加列】选项卡下找到【条件列】，如下图所示：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204201108928.png" alt="image-20231204201108928"></p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>Excel</category>
      </categories>
  </entry>
  <entry>
    <title>PQ快速替换</title>
    <url>/p/8b3fdf08/</url>
    <content><![CDATA[<h2 id="Excel-Power-Query数据处理18招-第5-6招：判断奇偶和替换值"><a href="#Excel-Power-Query数据处理18招-第5-6招：判断奇偶和替换值" class="headerlink" title="Excel Power Query数据处理18招-第5-6招：判断奇偶和替换值"></a>Excel Power Query数据处理18招-第5-6招：判断奇偶和替换值</h2><p><strong>“</strong> 本节内容将开始介绍Excel Power Query数据处理实用的18种方法中的第5-6种——判断奇偶和替换值。下面，我们开始学习吧~<strong>”</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200504837.png" alt="image-20231204200504837"></p>
  <span id="more"></span>

<h3 id="01-业务问题：如何快速将一个数列中的偶数或奇数替换成某个值"><a href="#01-业务问题：如何快速将一个数列中的偶数或奇数替换成某个值" class="headerlink" title="01 业务问题：如何快速将一个数列中的偶数或奇数替换成某个值"></a>01 业务问题：如何快速将一个数列中的偶数或奇数替换成某个值</h3><p>在上节内容中，我们已经学习了如何提取身份证号码的出生日期，那么，在这节内容中，我们将先提取身份证号码中代表我们性别的第17位数字，其中，奇数是代表男性，偶数是代表女性。</p>
<p>然后再将所有的奇数全部替换成文本“男性”，所有的偶数全部替换成文本“女性”。</p>
<p>在Excel中，我们常使用“IF函数+MOD函数”的组合技巧来进行奇偶判断和替换。通过使用MOD函数，将值除以2取余判断奇偶，然后再将其作为IF函数的条件判断语句，进行替换值。</p>
<p>如：判断17是奇数还是偶数，如果为奇数则返回男性，如果为偶数则为女性。那么，函数的写法就如下所示：</p>
<p>&#x3D;IF(MOD(17,2)&#x3D;1,”男”,”女”)</p>
<p>那么，Excel中有没有不使用函数就能做的功能呢？下面，我们来看一下如何使用Power Query快速进行奇偶判断和替换值。</p>
<h3 id="02-PQ快速判断奇偶和替换值"><a href="#02-PQ快速判断奇偶和替换值" class="headerlink" title="02 PQ快速判断奇偶和替换值"></a>02 PQ快速判断奇偶和替换值</h3><p>在Excel Power Query中，我们可以使用【信息】功能，对数值判断奇偶，使用【替换值】功能对文本进行字符替换。</p>
<p>我们可以在【转换】选项卡下找到【替换值】和【信息】，如下图所示：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200916702.png" alt="image-20231204200916702"></p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>Excel</category>
      </categories>
  </entry>
  <entry>
    <title>PQ快速提取</title>
    <url>/p/f7ca794c/</url>
    <content><![CDATA[<h2 id="如何快速提取出身份证号码中的出生日期"><a href="#如何快速提取出身份证号码中的出生日期" class="headerlink" title="如何快速提取出身份证号码中的出生日期"></a>如何快速提取出身份证号码中的出生日期</h2><p><strong>“</strong> 本节内容将开始介绍Excel Power Query数据处理实用的18种方法中的第4种——提取字符。下面，我们开始学习吧~<strong>”</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200504837.png" alt="image-20231204200504837"></p>
  <span id="more"></span>

<h3 id="01-业务问题：如何快速提取出身份证号码中的出生日期"><a href="#01-业务问题：如何快速提取出身份证号码中的出生日期" class="headerlink" title="01 业务问题：如何快速提取出身份证号码中的出生日期"></a>01 业务问题：如何快速提取出身份证号码中的出生日期</h3><p>在我们的身份证号码中，第7-14位数字代表了我们的出生日期，那么，如何在Excel中快速的提取下面身份证号码中的出生日期呢？</p>
<p>我们可以使用Excel中的一些文本字符的提取函数，如：MID函数、LEFT函数、RIGHT函数等。</p>
<p>今天我们使用一种更简单的方式来提取文本中的某些字符，而不涉及任何Excel 中函数的编写。</p>
<p>下面，我们就一起来看一下吧。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200825947.png" alt="image-20231204200825947"></p>
<h3 id="02-PQ快速提取身份证号码的出生日期"><a href="#02-PQ快速提取身份证号码的出生日期" class="headerlink" title="02 PQ快速提取身份证号码的出生日期"></a>02 PQ快速提取身份证号码的出生日期</h3><p>在Excel Power Query中，我们可以使用【提取】功能，提取文本中的某些字符，在【转换】选项卡和【添加列】选项卡中都可以找到【提取】功能。</p>
<p>【转换】选项卡中的【提取】功能会将提取到的结果直接覆盖原始字段，而不会添加新的一列存储结果。</p>
<p>【添加列】选项卡中的【提取】功能会添加新的一列，将结果返回到新列当中。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200841185.png" alt="image-20231204200841185"></p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>Excel</category>
      </categories>
  </entry>
  <entry>
    <title>PQ分类汇总</title>
    <url>/p/e5b1ad6f/</url>
    <content><![CDATA[<h2 id="掌握这个技能，不再为统计汇总发愁"><a href="#掌握这个技能，不再为统计汇总发愁" class="headerlink" title="掌握这个技能，不再为统计汇总发愁"></a>掌握这个技能，不再为统计汇总发愁</h2><p><strong>“</strong> 本节内容将开始介绍Excel Power Query数据处理实用18种方法的第3种——分类汇总。下面，我们开始学习吧~<strong>”</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200504837.png" alt="image-20231204200504837"></p>
  <span id="more"></span>

<h3 id="01-分类汇总的意义"><a href="#01-分类汇总的意义" class="headerlink" title="01 分类汇总的意义"></a>01 分类汇总的意义</h3><p>在数据分析中，由于我们得到的数据信息往往多而杂，因此我们需要对其加工整理，将数据精简，也就是我们常常所说的指标化。</p>
<p>一般来说，我们常常使用一些统计指标，如：平均值、求和值、最大值、最小值等来观察数据的情况。每个指标都是数据某部分信息的浓缩，虽然会造成部分信息的缺失，但在误差允许范围内，通过指标的大小能帮助我们快速的了解这份数据背后的情况，提高我们的决策效率。</p>
<p>在Excel中，我们用的最多的数据分析工具就是数据透视表，它以分类汇总为核心，结合了排序和筛选。通过分类汇总各种指标，帮助我们对数据进行分析。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200801141.png" alt="image-20231204200801141"></p>
<h3 id="02-分类汇总的步骤"><a href="#02-分类汇总的步骤" class="headerlink" title="02 分类汇总的步骤"></a>02 分类汇总的步骤</h3><p>分类汇总，顾名思义，由两部分组成：分类和汇总。这其实也包含着一种数据分析的基本思想。</p>
<p>首先，你需要明确你要分析哪个指标，也就是说，你要明确你想对哪个数值型字段进行汇总；</p>
<p>其次，你需要明确你想从哪个角度来观察这个指标的情况，也就是说，你要明确你要分组的类别是什么。</p>
<p>最后，你需要明确你的汇总方式是什么，也就是说，你要明确你想观察的是这个指标的平均值、求和值或者是其他聚合值。</p>
<p>明确了以上三点后，通过分类汇总，我们就能很清楚的知道，我们从哪个角度观察哪个指标能得到什么样的结论了。</p>
<p>在Power Query中的分类汇总叫做【分组依据】，在主页选项卡下就可以找到，选择我们想要分类汇总的表，然后点击【分组依据】就可以对我们想要的类别进行分组了。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200813124.png" alt="image-20231204200813124"></p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>Excel</category>
      </categories>
  </entry>
  <entry>
    <title>PQ横向合并</title>
    <url>/p/61101498/</url>
    <content><![CDATA[<h2 id="PQ第1招-横向合并"><a href="#PQ第1招-横向合并" class="headerlink" title="PQ第1招-横向合并"></a>PQ第1招-横向合并</h2><p><strong>“</strong> 本节内容将开始介绍Excel Power Query数据处理实用的18种方法，每一种方法都会对应解决我们实际工作中遇到的一类问题，掌握了这套武功秘籍，将帮助我们提高Excel数据处理的效率，从此行走江湖再也不用996。下面，我们开始学习第1招吧~<strong>”</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200504837.png" alt="image-20231204200504837"></p>
  <span id="more"></span>

<h3 id="01-业务问题：如何快速追加多个工作簿？"><a href="#01-业务问题：如何快速追加多个工作簿？" class="headerlink" title="01 业务问题：如何快速追加多个工作簿？"></a>01 业务问题：如何快速追加多个工作簿？</h3><p>为了演示方便，我们先将问题具体化，如下图所示：现在我们手中有两张Excel表，分别记录了1月份和2月份公司的消费情况，现在领导想让你将两张表的记录纵向追加到一起变成一张Excel表，那么你会怎么做呢？</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200717210.png" alt="image-20231204200717210"></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200725183.png" alt="image-20231204200725183"></p>
<p>不少小伙伴可能会想：这还不简单，将2月份的记录复制粘贴到1月份下面不就可以了吗？</p>
<p>如果只是两张表的追加，确实可以这样做，但如果是1年12个月的呢？复制粘贴是不是工作量大了点？如果是2年，3年…呢？那毫无疑问你又得加班了。</p>
<p>下面，我们就来看在Power Query是如何帮你快速追加多个工作簿吧！</p>
<h3 id="02-解决招式：Power-Query连接文件夹"><a href="#02-解决招式：Power-Query连接文件夹" class="headerlink" title="02 解决招式：Power Query连接文件夹"></a>02 解决招式：Power Query连接文件夹</h3><p><strong>解决步骤如下：</strong></p>
<ol>
<li>将想要追加到一起的Excel工作簿放到一个文件夹</li>
<li>打开一个新的Excel工作簿</li>
<li>在【数据选项卡】下找到【获取数据】</li>
<li>选择【自文件】-【从文件夹】-选择存放工作簿的文件夹路径</li>
</ol>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200736671.png" alt="image-20231204200736671"></p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>Excel</category>
      </categories>
  </entry>
  <entry>
    <title>初识Excel Power Query</title>
    <url>/p/9d69d264/</url>
    <content><![CDATA[<h2 id="初识Excel-Power-Query"><a href="#初识Excel-Power-Query" class="headerlink" title="初识Excel Power Query"></a>初识Excel Power Query</h2><p><strong>“</strong>各位小伙伴们，大家好，我是归一，欢迎大家跟我一起来学习数据分析。在本节内容中，我们将来一起认识Excel Power Query，学习如何在  Excel 中进入Power Query平台。下面我们开始吧！<strong>”</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200305088.png" alt="image-20231204200305088"></p>
  <span id="more"></span>

<h3 id="01-什么是Excel-Power-Query？"><a href="#01-什么是Excel-Power-Query？" class="headerlink" title="01 什么是Excel Power Query？"></a>01 什么是Excel Power Query？</h3><p>Excel Power Query是Excel 用于数据分析的三大组件之一，其它两个分别是Excel Power Pivot和 Excel Power View。在微软Excel2010版和Excel2013版中作为插件使用，需要在官网进行下载，直到Excel 2016版之后微软便将其作为Excel的组成部分嵌入在软件当中。</p>
<p>使用Excel2010版和Excel2013版的小伙伴可以到微软官网下载。</p>
<p>Excel Power Query插件下载地址：</p>
<p><a href="https://www.microsoft.com/zh-CN/download/details.aspx?id=39379">https://www.microsoft.com/zh-CN/download/details.aspx?id=39379</a></p>
<p>（建议大家使用Excel2016专业版及以上版本，使用起来更稳定，能避免许多软件带来的小Bug）</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200419773.png" alt="image-20231204200419773"></p>
<p>  Excel Power Query主要用于获取和转换数据，对不同源的数据进行整理加工。使用Power Query能帮助我们提高对<strong>表结构数据</strong>的处理速度，提高办公效率。Power Query的操作对象是<strong>表，</strong>在下节内容中，我们将来一起重新认识Excel中的<strong>表</strong>。</p>
<h3 id="02-如何进入Excel-Power-Query？"><a href="#02-如何进入Excel-Power-Query？" class="headerlink" title="02 如何进入Excel Power Query？"></a>02 如何进入Excel Power Query？</h3><p>那么如何进入Excel Power Query界面呢？</p>
<p>下面我们先来看一下Excel2010版和Excel2013版如何加载和进入Excel Power Query平台。</p>
<ol>
<li>在官网下载Excel Power Query插件；</li>
<li>打开Excel COM加载项，勾选Excel Power Query组件；</li>
</ol>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200430264.png" alt="image-20231204200430264"></p>
<ol start="3">
<li>任意选中一个空单元格，点击【从表】便可进入Excel Power  Query 界面：</li>
</ol>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200440131.png" alt="image-20231204200440131"></p>
<p>Excel2016专业版及以上版本中，Excel Power Query默认在数据选项卡下的【获取和转换】功能组中，点击【从表格】便可进入Excel Power Query界面：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200449501.png" alt="image-20231204200449501"></p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>Excel</category>
      </categories>
  </entry>
  <entry>
    <title>Excel 单元格、区域和表</title>
    <url>/p/67255154/</url>
    <content><![CDATA[<h2 id="Excel-单元格、区域和表"><a href="#Excel-单元格、区域和表" class="headerlink" title="Excel 单元格、区域和表"></a>Excel 单元格、区域和表</h2><p><strong>“</strong> 在本节内容中，我们将了解Excel中的几个操作对象：单元格、区域和表，并且对比区域和表的区别，为我们后续在PowerQuery中学习打下基础。下面我们开始吧。<strong>”</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200258365.png" alt="image-20231204200258365"></p>
  <span id="more"></span>

<h3 id="01-单元格和区域"><a href="#01-单元格和区域" class="headerlink" title="01 单元格和区域"></a>01 单元格和区域</h3><p><strong>单元格</strong>是Excel中构成工作表的最基础组成元素，也是Excel中的最小操作对象。多个单元格组成的群组则就称为<strong>区域</strong>。</p>
<p>单元格的地址是由行号和列标构成，其中列标在前，行号在后。如下图用黄色表示的两个单元格的地址分别是B2和D5。</p>
<p>由这两个单元格就可以构成一个区域，由于连个单元格不相邻，因此又叫做<strong>离散区域</strong>。该区域的地址可以这样表示：B2,D5。</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200322688.png" alt="image-20231204200322688"></p>
<h3 id="02-连续区域和表"><a href="#02-连续区域和表" class="headerlink" title="02 连续区域和表"></a>02 连续区域和表</h3><p>了解了单元格和区域后，下面我们来探讨一下连续区域和表的区别。我们先来一起看一下下面这张图，大家可以先来判断一下图中标识为灰色的部分是区域还是表呢？</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200339727.png" alt="image-20231204200339727"></p>
<p>相信肯定有不少小伙伴会心存疑惑：这不就是个表吗？还用问？</p>
<p>这当然是张表，但是在Excel中，它却不叫<strong>表</strong>，而叫<strong>区域。</strong>在Excel中，区域和表是两个不同的概念，既然如此，那么它们到底有什么区别呢？什么是Excel中真正的<strong>表</strong>呢？</p>
<p>下面我们先选中这块灰色区域，然后在Excel开始选项卡中，套用一个表格格式，构建一个表如下：</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200351609.png" alt="image-20231204200351609"></p>
<p>可以看到，软件自动给我们添加了一个筛选器，并且右下角多了一个角标，它表示了这个表所引用的区域位置。</p>
<p>那么在Excel中将区域变成表之后，能有什么优势呢？</p>
<p>通过上面的阅读，我们已经能了解区域是由一个个的单元格构成，因此区域的最小操作对象就是单元格，而表则不同，它是一种结构化数据，它的最小操作对象是字段，也就是列。这样我们就可以很方便的对它进行批量处理，提高我们的办公效率。</p>
<p>介绍这么多，其实也就是为了让大家明白两点：<strong>Excel中区域和表是两个不同的概念，Excel Power Query中操作的对象是表，而不是区域。</strong></p>
<p>通过学习，你能区别下图中，左边的是表，还是右边的是表吗？欢迎在下方留言，给出你的答案~</p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200403378.png" alt="image-20231204200403378"></p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>Excel</category>
      </categories>
  </entry>
  <entry>
    <title>Excel的前世和今生</title>
    <url>/p/e2f82486/</url>
    <content><![CDATA[<h2 id="Excel的前世"><a href="#Excel的前世" class="headerlink" title="Excel的前世"></a>Excel的前世</h2><h3 id="世界上第一款电子表格——VisiCalc"><a href="#世界上第一款电子表格——VisiCalc" class="headerlink" title="世界上第一款电子表格——VisiCalc"></a>世界上第一款电子表格——VisiCalc</h3><p>“数百年来，人们用的都是手写表格，在1978年初，我开始着手实现一个想法，最终这个想法变成了VisiCalc”——电子表格之父丹·布莱克林在TED中如是说道。</p>
<p>1979年，丹 · 布莱克林和鲍伯 · 弗兰克斯顿在苹果Ⅱ型计算机上开发的这款名叫“VisiCalc”的商用软件，就是世界上第一款电子表格软件，也就是Excel的前世。</p>
  <span id="more"></span>

<p>下面是丹 · 布莱克林在TED中演讲的视频链接：</p>
<iframe height="500" width="880" src="https://open.163.com/newview/movie/free?pid=MC9LKD9TM&mid=MCAHC7VTG&rel=0&amp;autoplay=1" frameborder="0" 'allowfullscreen'></iframe>



<p>在那个时代，尽管已经有了一些数据计算程序，不过均应用于一些企业的大型计算机上，VisiCalc的出现，成功的帮助个人电脑走上了商业办公桌，在当时许多用户购买个人计算机的主要目的是运行VisiCalc，几乎是电子表格VisiCalc单枪匹马将PC从业余爱好者手中的玩具变成了炙手可热的商业工具，独立地改变了PC业的发展方向。而且还把Apple推到了PC厂商头把交椅上。</p>
<p>虽然，由于当时没有版权专利的概念，没能使得丹 · 布莱克林因VisiCalc而变得富有，但是，他却用VisiCalc改变了整个PC产业，改变了整个世界。</p>
<h3 id="电子表格的第一个成功者——Lotus-1-2-3"><a href="#电子表格的第一个成功者——Lotus-1-2-3" class="headerlink" title="电子表格的第一个成功者——Lotus 1-2-3"></a>电子表格的第一个成功者——Lotus 1-2-3</h3><p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200159690.png" alt="image-20231204200159690"></p>
<p>随着VisiCalc的出现，使得电子表格软件迅速风行起来，商业活动中不断新生的数据处理需求也成为他们持续改进的动力源泉。继VisiCalc之后的另一个电子表格软件的成功之作就是Lotus公司的Lotus 1-2-3。</p>
<p>1983年1月Lotus 1-2-3正式发布，并且凭借着它集表格、数据库、商业绘图于一身的强大功能很快获得了成功，销量很快超过VisiCalc。</p>
<p> 但由于Lotus的决策者的误判，在微软发布Windows后，对其并不看好，放慢了它的第一个Windows电子表格程序的研发，从而错失机遇。 随着微软公司 Excel 的出现，Lotus 1-2-3 就渐显倪端，不再那么吸引人了。特别是微软公司推出 Excel 5.0以后，Lotus 公司在与微软公司在电子表格产品的竞争中，就已处于下风。到了微软公司推出 Excel 7.0 以后，Lotus 1-2-3 终于承认兵败，除了少数忠实（顽固）的老用户以外，大部分市场都被微软夺走了。 </p>
<h2 id="Excel的今生——Excel-Power-BI"><a href="#Excel的今生——Excel-Power-BI" class="headerlink" title="Excel的今生——Excel Power BI"></a>Excel的今生——Excel Power BI</h2><p>Excel是美国微软公司研发的一款电子表格，从1985年的Excel 1.0版到现在的Excel 2019版已经发展将近年40年的时间。如今，Excel 已经成为事实上的电子表格行业标准，无论是在科学研究、医疗教育、商业活动还是在家庭生活中，Excel都能满足大多数人的数据处理需求。</p>
<p><strong>最早的Excel版本：</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200216442.png" alt="image-20231204200216442"></p>
<p><strong>最新的Excel版本：</strong></p>
<p><img src="http://guiyi-home-resource-picture.oss-cn-beijing.aliyuncs.com/img/image-20231204200226862.png" alt="image-20231204200226862"></p>
<h3 id="Excel-的发展现状"><a href="#Excel-的发展现状" class="headerlink" title="Excel 的发展现状"></a>Excel 的发展现状</h3><p>随着大数据和人工智能的发展，人类进入的DT时代，在信息爆炸，数据量急速增加的今天，Excel 现已成为目前市面上使用最广的数据分析工具，帮助我们从数据中发现见解，找出有价值的信息。<strong>在2016版及其以后的版本中，Excel 已经嵌入了迎合大数据的一整套BI插件，包括Power Query数据获取与整理，Power Pivot 数据建模与分析，不仅让Excel 从小数据到大数据发展到了后Excel 时代，也让它可以更加智能化的进行商业分析。</strong></p>
]]></content>
      <categories>
        <category>数据处理能力</category>
        <category>Excel</category>
      </categories>
  </entry>
</search>
